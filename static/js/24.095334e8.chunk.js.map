{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils/index.ts","components/Table/TableHead.tsx","components/Table/index.tsx","components/EtherscanLink/style.ts","routes/safe/components/AddressBook/EllipsisTransactionDetails/index.tsx","components/EtherscanLink/index.tsx","../node_modules/final-form-calculate/dist/final-form-calculate.es.js","components/layout/Span/index.tsx","logic/hooks/useWindowDimensions.tsx","routes/safe/components/Settings/ManageOwners/OwnerAddressTableCell/index.tsx","../node_modules/@material-ui/icons/MoreHoriz.js","components/DividerLine/index.tsx","components/DividerLine/arrow-down.svg","components/Collapse/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/cancel-small-filled.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-small-filled.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-small-green.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-small-grey.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-small-red.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-small-yellow.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/check-large-filled-green.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/check-large-filled-red.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-large-green.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-large-grey.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/assets/confirm-large-red.svg","routes/safe/components/Transactions/TxsTable/Status/assets/awaiting.svg","routes/safe/components/Transactions/TxsTable/Status/assets/error.svg","routes/safe/components/Transactions/TxsTable/Status/assets/ok.svg","routes/safe/components/Transactions/TxsTable/ExpandedTx/ApproveTxModal/style.ts","logic/safe/store/actions/processTransaction.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/ApproveTxModal/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/style.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/OwnerComponent.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/OwnersList.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/OwnersColumn/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/RejectTxModal/style.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/RejectTxModal/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/styles.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/utils.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/SettingsDescription.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/Value.tsx","routes/safe/store/actions/transactions/utils/transferDetails.ts","routes/safe/store/actions/transactions/utils/multiSendDecodedDetails.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/CustomDescription.tsx","routes/safe/store/actions/transactions/utils/newTransactionHelpers.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/TransferDescription.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/TxDescription/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/IncomingTx/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/CreationTx/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/OutgoingTx/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/style.ts","routes/safe/components/Transactions/TxsTable/ExpandedTx/IncomingTxDescription/index.tsx","routes/safe/components/Transactions/TxsTable/ExpandedTx/index.tsx","routes/safe/components/Transactions/TxsTable/Status/style.ts","routes/safe/components/Transactions/TxsTable/Status/index.tsx","logic/safe/store/selectors/transactions.ts","routes/safe/components/Transactions/TxsTable/index.tsx","routes/safe/components/Transactions/TxsTable/style.ts"],"names":["NO_CONTRACT","ensResolver","createDecorator","field","updates","contractAddress","a","isValidEnsName","getAddressFromENS","resolvedAddress","console","error","message","formMutators","setMax","args","state","utils","changeValue","setContractAddress","setSelectedMethod","lastFormState","values","selectedMethod","name","setCallResults","setAbiValue","isAddress","type","indexOf","isBoolean","isUint","isInt","isByte","isArrayParameter","parameter","test","handleSubmitError","key","hasOwnProperty","value","reason","FORM_ERROR","generateFormFieldKey","signatureHash","index","keyType","createTxObject","method","contract","getWeb3","eth","Contract","inputs","map","JSON","parse","extractMethodArgs","methods","isReadMethod","action","getValueFromTxInputs","tx","replace","String","cellWidth","width","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","column","align","id","padding","disablePadding","sortDirection","static","style","label","active","direction","onClick","React","styles","root","backgroundColor","borderTopRightRadius","sm","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","xl","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","orderProp","defaultOrder","newOrder","setState","fixed","getEmptyStyle","emptyRows","height","display","justifyContent","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","undefined","defaultOrderBy","find","children","classes","data","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","size","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","input","sortedData","stableSort","getSorting","slice","Math","min","isEmpty","aria-labelledby","className","backIconButtonProps","component","count","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","withStyles","createStyles","etherscanLink","fill","secondaryText","address","flexShrink","textOverflow","whiteSpace","addressParagraph","fontSize","button","margin","firstButton","marginLeft","useStyles","makeStyles","container","cursor","xs","borderRadius","transition","outline","increasedPopperZindex","zIndex","EllipsisTransactionDetails","knownAddress","sendModalOpenHandler","useState","anchorEl","setAnchorEl","dispatch","useDispatch","currentSafeAddress","useSelector","safeParamAddressFromStateSelector","handleClick","event","currentTarget","closeMenuHandler","addOrEditEntryHandler","push","SAFELIST_ADDRESS","ClickAwayListener","onClickAway","role","tabIndex","onKeyDown","Menu","keepMounted","onClose","open","Boolean","MenuItem","Divider","EtherscanLink","cut","Block","cn","Span","shortVersionOf","CopyBtn","content","explorerUrl","getExplorerInfo","isPromise","obj","then","tripleEquals","b","_len","arguments","length","calculations","Array","_key","form","previousValues","subscribe","_ref","batch","runUpdates","isEqual","next","getIn","previous","results","resolved","Object","keys","forEach","destField","change","result","update","fields","getRegisteredFields","_ref2","matches","isArray","findIndex","f","RegExp","fieldName","getWindowDimensions","window","innerWidth","innerHeight","OwnerAddressTableCell","showLinks","userName","setCut","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","justify","Identicon","diameter","minWidth","getValidAddressBookName","Paragraph","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","createElement","d","Wrapper","styled","div","md","DividerLine","withArrow","alt","src","ArrowDown","module","HeaderWrapper","TitleWrapper","Header","Collapse","description","title","collapseClassName","headerWrapperClassName","setOpen","disableRipple","in","timeout","unmountOnExit","Toolbar","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","gutters","theme","position","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","KeyboardArrowRight","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","useTheme","IconButton","disabled","color","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","spacer","Typography","caption","Select","select","icon","selectIcon","InputBase","onChange","rowsPerPageOption","menuItem","actions","palette","text","primary","typography","pxToRem","overflow","flex","marginRight","textAlign","textAlignLast","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","vertical","border","divider","bottom","left","inset","fade","middle","alignSelf","heading","lg","boxSizing","maxHeight","headingText","closeIcon","buttonRow","borderTop","nonceNumber","marginTop","processTransaction","approveAndExecute","notifiedTransaction","safeAddress","userAddress","getState","providerSelector","account","hardwareWallet","smartContractWallet","getGnosisSafeInstanceAt","safeInstance","getLastTx","lastTx","getNewTxNonce","nonce","shouldExecuteTransaction","isExecution","getCurrentSafeVersion","safeVersion","sigs","generateSignaturesFromTxConfirmations","confirmations","notificationsQueue","getNotificationsFromTxType","origin","beforeExecutionKey","enqueueSnackbar","beforeExecution","txArgs","toJS","recipient","valueInWei","EMPTY_DATA","operation","safeTxGas","baseGas","gasPrice","gasToken","refundReceiver","sender","semverSatisfies","SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES","tryOffchainSigning","safeTxHash","signature","closeSnackbarAction","saveTxToHistory","afterExecution","moreConfirmationsNeeded","fetchTransactions","getExecutionTransaction","getApprovalTransaction","transaction","sendParams","txToMock","mockTransaction","mockedTx","send","once","hash","txHash","pendingExecutionKey","pendingExecution","Promise","all","storeSignedTx","storeTx","on","receipt","noMoreConfirmationsNeeded","storeExecutedTx","fetchSafe","transactionHash","errorMsg","afterExecutionError","executeData","approveHash","encodeABI","getErrorMessage","options","errMsg","nativeCoin","getNetworkInfo","ApproveTxModal","canExecute","isCancelTx","isOpen","thresholdReached","userAccountSelector","threshold","safeThresholdSelector","setApproveAndExecute","gasCosts","setGasCosts","modalInfo","getModalTitleAndDescription","oneConfirmationLeft","isTheTxReadyToBeExecuted","isCurrent","estimateTxGasCosts","estimatedGasCosts","fromTokenUnit","decimals","formattedGasCosts","formatAmount","estimateGas","Modal","handleClose","Row","grow","noMargin","weight","Hairline","flexDirection","Bold","FormControlLabel","control","Checkbox","checked","prevApproveAndExecute","data-testid","Button","TX_NOTIFICATION_TYPES","CONFIRMATION_TX","testId","ownersList","overflowY","rightCol","borderLeft","verticalLine","top","verticalLinePending","verticalLineDone","secondary","verticalLineCancel","verticalPendingAction","warning","owner","borderBottom","ownerListTitle","fontWeight","boldFont","letterSpacing","textTransform","olderTxAnnotation","ownerListTitleDone","ownerListTitleCancelDone","circleState","flexGrow","lastButton","executor","background","OwnerComponent","pendingAcceptAction","pendingRejectAction","showConfirmBtn","onTxConfirm","onTxExecute","showExecuteBtn","showRejectBtn","onTxReject","showExecuteRejectBtn","confirmed","nameInAdbk","getNameFromAddressBookSelector","ConfirmSmallGreyCircle","imgCircle","setImgCircle","useMemo","PendingSmallYellowCircle","CancelSmallFilledCircle","ConfirmSmallFilledCircle","ConfirmSmallRedCircle","ConfirmSmallGreenCircle","Img","shortenHash","showIdenticon","showCopyBtn","OwnersList","ownersUnconfirmed","ownersWhoConfirmed","hasPendingAcceptActions","hasPendingRejectActions","getOwnersConfirmations","currentUserAlreadyConfirmed","conf","getPendingOwnersConfirmations","owners","ownersWithNoConfirmations","currentUserNotConfirmed","confirmationsEntry","confirmationPendingActions","ownersWithPendingActions","get","confirmationRejectActions","includes","sort","ownerA","ownerB","OwnersColumn","showOlderTxAnnotation","cancelTx","makeTransaction","isCancellationTx","status","TransactionStatus","AWAITING_YOUR_CONFIRMATION","cancelThresholdReached","canExecuteCancel","isExecuted","safeOwnersSelector","userIsUnconfirmedOwner","ownersWhoConfirmedCancel","currentUserAlreadyConfirmedCancel","ownersUnconfirmedCancel","userIsUnconfirmedCancelOwner","displayButtonRow","executionTxHash","cancelled","txThreshold","cancelThreshold","Col","layout","CheckLargeFilledGreenCircle","ConfirmLargeGreenCircle","CheckLargeFilledRedCircle","ConfirmLargeRedCircle","ConfirmLargeGreyCircle","RejectTxModal","estimateGasCosts","createTransaction","CANCELLATION_TX","txNonce","txDataContainer","paddingTop","paddingBottom","txData","wordBreak","txDataParagraph","linkTxData","textDecoration","multiSendTxData","collapse","collapseHeaderWrapper","alignContent","getTxDataForTxsWithDecodedParams","decodedParams","isTokenTransfer","transfer","tokenAddress","isCollectibleTransfer","safeTransferFrom","transferFrom","tokenId","modifySettingsTx","SAFE_METHODS_NAMES","REMOVE_OWNER","_threshold","removedOwner","newThreshold","CHANGE_THRESHOLD","ADD_OWNER_WITH_THRESHOLD","addedOwner","SWAP_OWNER","newOwner","oldOwner","ENABLE_MODULE","DISABLE_MODULE","getTxDataForModifySettingsTxs","multiSendTx","customTx","RemovedOwner","ownerChangedName","AddedOwner","NewThreshold","AddModule","RemoveModule","SettingsDescription","NestedWrapper","StyledText","Text","GenericValue","getTextValue","getArrayValue","parentId","currentValue","Value","isIncomingTransfer","store","sameAddress","extractTransferDetails","TransferType","ERC20_TRANSFER","erc20TransferDetails","tokenInfo","TxConstants","UNKNOWN","humanReadableValue","symbol","extractERC20TransferDetails","ERC721_TRANSFER","erc721TransferDetails","extractERC721TransferDetails","ETHER_TRANSFER","ethTransferDetails","extractETHTransferDetails","extractUnknownTransferDetails","TxDetailsMethodName","TxDetailsMethodParam","TxDetailsContent","TxInfo","StyledMethodName","TxInfoDetails","strong","parameters","param","MultiSendCustomDataAction","methodName","iconSize","iconType","textSize","MultiSendCustomData","txDetails","TxData","showTxData","setShowTxData","showExpandBtn","Link","aria-label","rel","TxActionData","dataDecoded","GenericCustomData","amount","storedTx","recipientName","CustomDescription","transfersDetails","transfers","valueDecoded","isMultiSendParameter","extractMultiSendDetails","extractMultiSendDataDecoded","TransferDescription","amountWithSymbol","rawAmount","sendModalOpen","setSendModalOpen","TRANSACTIONS_DESC_SEND_TEST_ID","SendModal","activeScreenType","recipientAddress","selectedToken","tokenAmount","TxDescription","sameString","cancellationTx","creationTx","upgradeTx","substr","toLowerCase","getTxData","getTxAmount","getRawTxAmount","IncomingTx","INCOMING_TX_TYPES","formatDate","executionDate","CreationTx","isCreationTx","TransactionTypes","CREATION","creator","scanBlockFactoryAddressUrl","factoryAddress","scanBlockMasterCopyUrl","masterCopy","created","OutgoingTx","OUTGOING","UPGRADE","CUSTOM","SETTINGS","COLLECTIBLE","TOKEN","submissionDate","refundParams","fee","cssStyles","col","expandedTxBlock","incomingTxBlock","borderRight","emptyRowDataContainer","txFromName","IncomingTxDescription","getIncomingTxAmount","ExpandedTx","fromWei","toBN","safeNonceSelector","openModal","setOpenModal","openApproveModal","closeModal","isIncomingTx","extraSmallFontSize","success","failed","awaiting_your_confirmation","awaiting_confirmations","awaiting_execution","pending","statusText","statusToIcon","OkIcon","ErrorIcon","AwaitingIcon","CircularProgress","statusToLabel","statusIconStyle","Status","Icon","extendedTransactionsSelector","createSelector","safeTransactionsSelector","safeIncomingTransactionsSelector","transactions","incomingTransactions","List","TRANSACTION_ROW_TEST_ID","row","expandedRow","cancelledRow","opacity","extendedTxContainer","expandCellStyle","expandedTx","setExpandedTx","cancellationTransactions","safeCancellationTransactionsSelector","trackEvent","useAnalytics","category","SAFE_NAVIGATION_EVENT","generateColumns","autoColumns","filter","c","custom","filteredData","getTxTableData","tx1","tx2","aNonce","bNonce","difference","aDateOrder","dateOrder","bDateOrder","TableContainer","Table","TX_TABLE_ID","Fragment","TableRow","prevTx","cell","TX_TABLE_RAW_CANCEL_TX_ID","TX_TABLE_RAW_TX_ID"],"mappings":"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","file":"static/js/24.095334e8.chunk.js","sourcesContent":["import { FORM_ERROR, Mutator, SubmissionErrors } from 'final-form'\nimport createDecorator from 'final-form-calculate'\nimport { ContractSendMethod } from 'web3-eth-contract'\n\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { getAddressFromENS, getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { TransactionReviewType } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\n\nexport const NO_CONTRACT = 'no contract'\n\nexport const ensResolver = createDecorator({\n  field: 'contractAddress',\n  updates: {\n    contractAddress: async (contractAddress) => {\n      try {\n        const resolvedAddress = isValidEnsName(contractAddress) && (await getAddressFromENS(contractAddress))\n\n        if (resolvedAddress) {\n          return resolvedAddress\n        }\n\n        return contractAddress\n      } catch (e) {\n        console.error(e.message)\n        return contractAddress\n      }\n    },\n  },\n})\n\nexport const formMutators: Record<string, Mutator<{ selectedMethod: { name: string } }>> = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'value', () => args[0])\n  },\n  setContractAddress: (args, state, utils) => {\n    utils.changeValue(state, 'contractAddress', () => args[0])\n  },\n  setSelectedMethod: (args, state, utils) => {\n    const modified =\n      state.lastFormState?.values.selectedMethod && state.lastFormState.values.selectedMethod.name !== args[0].name\n\n    if (modified) {\n      utils.changeValue(state, 'callResults', () => '')\n      utils.changeValue(state, 'value', () => '')\n    }\n\n    utils.changeValue(state, 'selectedMethod', () => args[0])\n  },\n  setCallResults: (args, state, utils) => {\n    utils.changeValue(state, 'callResults', () => args[0])\n  },\n  setAbiValue: (args, state, utils) => {\n    utils.changeValue(state, 'abi', () => args[0])\n  },\n}\n\nexport const isAddress = (type: string): boolean => type.indexOf('address') === 0\nexport const isBoolean = (type: string): boolean => type.indexOf('bool') === 0\nexport const isString = (type: string): boolean => type.indexOf('string') === 0\nexport const isUint = (type: string): boolean => type.indexOf('uint') === 0\nexport const isInt = (type: string): boolean => type.indexOf('int') === 0\nexport const isByte = (type: string): boolean => type.indexOf('byte') === 0\n\nexport const isArrayParameter = (parameter: string): boolean => /(\\[\\d*])+$/.test(parameter)\n\nexport const handleSubmitError = (error: SubmissionErrors, values: Record<string, string>): Record<string, string> => {\n  for (const key in values) {\n    if (values.hasOwnProperty(key) && values[key] === error.value) {\n      return { [key]: error.reason }\n    }\n  }\n\n  // .call() failed and we're logging a generic error\n  return { [FORM_ERROR]: error.message }\n}\n\nexport const generateFormFieldKey = (type: string, signatureHash: string, index: number): string => {\n  const keyType = isArrayParameter(type) ? 'arrayParam' : type\n  return `methodInput-${signatureHash}_${index}_${keyType}`\n}\n\nconst extractMethodArgs = (signatureHash: string, values: Record<string, string>) => ({ type }, index) => {\n  const key = generateFormFieldKey(type, signatureHash, index)\n\n  if (isArrayParameter(type)) {\n    return JSON.parse(values[key])\n  }\n\n  return values[key]\n}\n\nexport const createTxObject = (\n  method: AbiItemExtended,\n  contractAddress: string,\n  values: Record<string, string>,\n): ContractSendMethod => {\n  const web3 = getWeb3()\n  const contract: any = new web3.eth.Contract([method], contractAddress)\n  const { inputs, name = '', signatureHash } = method\n  const args = inputs?.map(extractMethodArgs(signatureHash, values)) || []\n\n  return contract.methods[name](...args)\n}\n\nexport const isReadMethod = (method: AbiItemExtended): boolean => method && method.action === 'read'\n\nexport const getValueFromTxInputs = (key: string, type: string, tx: TransactionReviewType): string => {\n  if (isArrayParameter(type)) {\n    key = key.replace('[]', '')\n  }\n\n  let value = tx[key]\n\n  if (type === 'bool') {\n    value = String(value)\n  }\n\n  return value\n}\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xl, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: xl,\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_HEIGHT = 49\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = (emptyRows) => ({\n    height: FIXED_HEIGHT * emptyRows,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n\n    let sortedData = stableSort(data, getSorting(orderParam, orderByParam, orderProp), fixedParam)\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const emptyRows = displayRows - Math.min(displayRows, data.size - page * displayRows)\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle(emptyRows + 1)}>\n            <CircularProgress size={60} />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { createStyles } from '@material-ui/core/styles'\nimport { secondaryText } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  etherscanLink: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '& svg': {\n      fill: secondaryText,\n    },\n  },\n  address: {\n    display: 'block',\n    flexShrink: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  addressParagraph: {\n    fontSize: '13px',\n  },\n  button: {\n    height: '24px',\n    margin: '0',\n    width: '24px',\n  },\n  firstButton: {\n    marginLeft: '8px',\n  },\n})\n","import { ClickAwayListener, createStyles, Divider } from '@material-ui/core'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport { push } from 'connected-react-router'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { xs } from 'src/theme/variables'\n\nconst useStyles = makeStyles(\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      cursor: 'pointer',\n      margin: `0 ${xs}`,\n      borderRadius: '50%',\n      transition: 'background-color .2s ease-in-out',\n      '&:hover': {\n        backgroundColor: '#F0EFEE',\n      },\n      outline: 'none',\n    },\n    increasedPopperZindex: {\n      zIndex: 2001,\n    },\n  }),\n)\n\ntype EllipsisTransactionDetailsProps = {\n  address: string\n  knownAddress?: boolean\n  sendModalOpenHandler?: () => void\n}\n\nexport const EllipsisTransactionDetails = ({\n  address,\n  knownAddress,\n  sendModalOpenHandler,\n}: EllipsisTransactionDetailsProps): React.ReactElement => {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const dispatch = useDispatch()\n  const currentSafeAddress = useSelector(safeParamAddressFromStateSelector)\n\n  const handleClick = (event) => setAnchorEl(event.currentTarget)\n\n  const closeMenuHandler = () => setAnchorEl(null)\n\n  const addOrEditEntryHandler = () => {\n    dispatch(push(`${SAFELIST_ADDRESS}/${currentSafeAddress}/address-book?entryAddress=${address}`))\n    closeMenuHandler()\n  }\n\n  return (\n    <ClickAwayListener onClickAway={closeMenuHandler}>\n      <div className={classes.container} role=\"menu\" tabIndex={0}>\n        <MoreHorizIcon onClick={handleClick} onKeyDown={handleClick} />\n        <Menu anchorEl={anchorEl} id=\"simple-menu\" keepMounted onClose={closeMenuHandler} open={Boolean(anchorEl)}>\n          {sendModalOpenHandler ? (\n            <>\n              <MenuItem onClick={sendModalOpenHandler}>Send Again</MenuItem>\n              <Divider />\n            </>\n          ) : null}\n          {knownAddress ? (\n            <MenuItem onClick={addOrEditEntryHandler}>Edit Address book Entry</MenuItem>\n          ) : (\n            <MenuItem onClick={addOrEditEntryHandler}>Add to address book</MenuItem>\n          )}\n        </Menu>\n      </div>\n    </ClickAwayListener>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport React from 'react'\n\nimport { styles } from './style'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Block from 'src/components/layout/Block'\nimport Span from 'src/components/layout/Span'\nimport { shortVersionOf } from 'src/logic/wallets/ethAddresses'\nimport { EllipsisTransactionDetails } from 'src/routes/safe/components/AddressBook/EllipsisTransactionDetails'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\nimport { getExplorerInfo } from 'src/config'\n\nconst useStyles = makeStyles(styles)\n\ninterface EtherscanLinkProps {\n  className?: string\n  cut?: number\n  knownAddress?: boolean\n  value: string\n  sendModalOpenHandler?: () => void\n}\n\nexport const EtherscanLink = ({\n  className,\n  cut,\n  knownAddress,\n  value,\n  sendModalOpenHandler,\n}: EtherscanLinkProps): React.ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <Block className={cn(classes.etherscanLink, className)}>\n      <Span className={cn(knownAddress && classes.addressParagraph, classes.address)} size=\"md\">\n        {cut ? shortVersionOf(value, cut) : value}\n      </Span>\n      <CopyBtn className={cn(classes.button, classes.firstButton)} content={value} />\n      <ExplorerButton explorerUrl={getExplorerInfo(value)} />\n      {knownAddress !== undefined ? (\n        <EllipsisTransactionDetails\n          address={value}\n          knownAddress={knownAddress}\n          sendModalOpenHandler={sendModalOpenHandler}\n        />\n      ) : null}\n    </Block>\n  )\n}\n","import { getIn } from 'final-form';\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\n//      \n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar createDecorator = function createDecorator() {\n  for (var _len = arguments.length, calculations = new Array(_len), _key = 0; _key < _len; _key++) {\n    calculations[_key] = arguments[_key];\n  }\n\n  return function (form) {\n    var previousValues = {};\n    var unsubscribe = form.subscribe(function (_ref) {\n      var values = _ref.values;\n      form.batch(function () {\n        var runUpdates = function runUpdates(field, isEqual, updates) {\n          var next = values && getIn(values, field);\n          var previous = previousValues && getIn(previousValues, field);\n\n          if (!isEqual(next, previous)) {\n            if (typeof updates === 'function') {\n              var results = updates(next, field, values, previousValues);\n\n              if (isPromise(results)) {\n                results.then(function (resolved) {\n                  Object.keys(resolved).forEach(function (destField) {\n                    form.change(destField, resolved[destField]);\n                  });\n                });\n              } else {\n                Object.keys(results).forEach(function (destField) {\n                  form.change(destField, results[destField]);\n                });\n              }\n            } else {\n              Object.keys(updates).forEach(function (destField) {\n                var update = updates[destField];\n                var result = update(next, values, previousValues);\n\n                if (isPromise(result)) {\n                  result.then(function (resolved) {\n                    form.change(destField, resolved);\n                  });\n                } else {\n                  form.change(destField, result);\n                }\n              });\n            }\n          }\n        };\n\n        var fields = form.getRegisteredFields();\n        calculations.forEach(function (_ref2) {\n          var field = _ref2.field,\n              isEqual = _ref2.isEqual,\n              updates = _ref2.updates;\n\n          if (typeof field === 'string') {\n            runUpdates(field, isEqual || tripleEquals, updates);\n          } else {\n            // field is a either array or regex\n            var matches = Array.isArray(field) ? function (name) {\n              return ~field.indexOf(name) || field.findIndex(function (f) {\n                return f instanceof RegExp && f.test(name);\n              }) !== -1;\n            } : function (name) {\n              return field.test(name);\n            };\n            fields.forEach(function (fieldName) {\n              if (matches(fieldName)) {\n                runUpdates(fieldName, isEqual || tripleEquals, updates);\n              }\n            });\n          }\n        });\n        previousValues = values;\n      });\n    }, {\n      values: true\n    });\n    return unsubscribe;\n  };\n};\n\n//\n\nexport default createDecorator;\n","import * as React from 'react'\n\nclass Span extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <span {...props}>{children}</span>\n  }\n}\n\nexport default Span\n","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport const useWindowDimensions = (): { width: number; height: number } => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { getValidAddressBookName } from 'src/logic/addressBook/utils'\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\nimport { EtherscanLink } from 'src/components/EtherscanLink'\n\ntype OwnerAddressTableCellProps = {\n  address: string\n  knownAddress?: boolean\n  showLinks: boolean\n  userName?: string\n  sendModalOpenHandler?: () => void\n}\n\nconst OwnerAddressTableCell = (props: OwnerAddressTableCellProps): React.ReactElement => {\n  const { address, knownAddress, showLinks, userName, sendModalOpenHandler } = props\n  const [cut, setCut] = useState(0)\n  const { width } = useWindowDimensions()\n\n  useEffect(() => {\n    if (width <= 900) {\n      setCut(6)\n    } else if (width <= 1024) {\n      setCut(12)\n    } else {\n      setCut(0)\n    }\n  }, [width])\n\n  return (\n    <Block justify=\"left\">\n      <Identicon address={address} diameter={32} />\n      {showLinks ? (\n        <div style={{ marginLeft: 10, flexShrink: 1, minWidth: 0 }}>\n          {userName && getValidAddressBookName(userName)}\n          <EtherscanLink\n            knownAddress={knownAddress}\n            value={address}\n            cut={cut}\n            sendModalOpenHandler={sendModalOpenHandler}\n          />\n        </div>\n      ) : (\n        <Paragraph style={{ marginLeft: 10 }}>{address}</Paragraph>\n      )}\n    </Block>\n  )\n}\n\nexport default OwnerAddressTableCell\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');\n\nexports.default = _default;","import React from 'react'\nimport styled from 'styled-components'\n\nimport ArrowDown from './arrow-down.svg'\n\nimport Hairline from 'src/components/layout/Hairline'\nimport { md, sm } from 'src/theme/variables'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: ${md} 0;\n\n  img {\n    margin: 0 ${sm};\n  }\n`\n\ntype Props = {\n  withArrow: boolean\n}\n\nconst DividerLine = ({ withArrow }: Props) => (\n  <Wrapper>\n    {withArrow && <img alt=\"Arrow Down\" src={ArrowDown} />}\n    <Hairline />\n  </Wrapper>\n)\n\nexport default DividerLine\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";","import CollapseMUI from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div``\n\nconst HeaderWrapper = styled.div``\n\nconst TitleWrapper = styled.div``\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ninterface CollapseProps {\n  title: React.ReactElement | string\n  description?: React.ReactElement | string\n  collapseClassName?: string\n  headerWrapperClassName?: string\n}\n\nconst Collapse: React.FC<CollapseProps> = ({\n  children,\n  description = null,\n  title,\n  collapseClassName,\n  headerWrapperClassName,\n}): React.ReactElement => {\n  const [open, setOpen] = React.useState(false)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <Wrapper>\n      <HeaderWrapper className={headerWrapperClassName} onClick={handleClick}>\n        <TitleWrapper>{title}</TitleWrapper>\n        <Header>\n          <IconButton disableRipple size=\"small\">\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </IconButton>\n          {description}\n        </Header>\n      </HeaderWrapper>\n\n      <CollapseMUI in={open} timeout=\"auto\" unmountOnExit className={collapseClassName}>\n        {children}\n      </CollapseMUI>\n    </Wrapper>\n  )\n}\n\nexport default Collapse\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","module.exports = __webpack_public_path__ + \"static/media/cancel-small-filled.1df100d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-small-filled.5337e4ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-small-green.5f727de5.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-small-grey.78e2eed8.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-small-red.42baa3e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-small-yellow.1c7e6e0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-large-filled-green.df630d01.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-large-filled-red.1d37c6fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-large-green.9d88a398.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-large-grey.a275eccd.svg\";","module.exports = __webpack_public_path__ + \"static/media/confirm-large-red.6e3337db.svg\";","module.exports = __webpack_public_path__ + \"static/media/awaiting.8f28bccf.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.2efab400.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.90dea9ad.svg\";","import { createStyles } from '@material-ui/core'\nimport { border, lg, md, sm } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  container: {\n    padding: `${md} ${lg}`,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    borderTop: `1px solid ${border}`,\n  },\n  nonceNumber: {\n    marginTop: sm,\n    fontSize: md,\n  },\n})\n","import { AnyAction } from 'redux'\nimport { ThunkAction } from 'redux-thunk'\nimport semverSatisfies from 'semver/functions/satisfies'\n\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { getNotificationsFromTxType } from 'src/logic/notifications'\nimport { generateSignaturesFromTxConfirmations } from 'src/logic/safe/safeTxSigner'\nimport { getApprovalTransaction, getExecutionTransaction, saveTxToHistory } from 'src/logic/safe/transactions'\nimport { SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES, tryOffchainSigning } from 'src/logic/safe/transactions/offchainSigner'\nimport { getCurrentSafeVersion } from 'src/logic/safe/utils/safeVersion'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport { providerSelector } from 'src/logic/wallets/store/selectors'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport closeSnackbarAction from 'src/logic/notifications/store/actions/closeSnackbar'\nimport fetchSafe from 'src/logic/safe/store/actions/fetchSafe'\nimport fetchTransactions from 'src/logic/safe/store/actions/transactions/fetchTransactions'\nimport { mockTransaction, TxToMock } from 'src/logic/safe/store/actions/transactions/utils/transactionHelpers'\nimport { getLastTx, getNewTxNonce, shouldExecuteTransaction } from 'src/logic/safe/store/actions/utils'\nimport { AppReduxState } from 'src/store'\nimport { getErrorMessage } from 'src/test/utils/ethereumErrors'\nimport { storeExecutedTx, storeSignedTx, storeTx } from 'src/logic/safe/store/actions/transactions/pendingTransactions'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nimport { Dispatch, DispatchReturn } from './types'\n\ninterface ProcessTransactionArgs {\n  approveAndExecute: boolean\n  notifiedTransaction: string\n  safeAddress: string\n  tx: Transaction\n  userAddress: string\n}\n\ntype ProcessTransactionAction = ThunkAction<Promise<void | string>, AppReduxState, DispatchReturn, AnyAction>\n\nconst processTransaction = ({\n  approveAndExecute,\n  notifiedTransaction,\n  safeAddress,\n  tx,\n  userAddress,\n}: ProcessTransactionArgs): ProcessTransactionAction => async (\n  dispatch: Dispatch,\n  getState: () => AppReduxState,\n): Promise<DispatchReturn> => {\n  const state = getState()\n\n  const { account: from, hardwareWallet, smartContractWallet } = providerSelector(state)\n  const safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n\n  const lastTx = await getLastTx(safeAddress)\n  const nonce = await getNewTxNonce(undefined, lastTx, safeInstance)\n  const isExecution = approveAndExecute || (await shouldExecuteTransaction(safeInstance, nonce, lastTx))\n  const safeVersion = await getCurrentSafeVersion(safeInstance)\n\n  let sigs = generateSignaturesFromTxConfirmations(tx.confirmations, approveAndExecute && userAddress)\n  // https://docs.gnosis.io/safe/docs/docs5/#pre-validated-signatures\n  if (!sigs) {\n    sigs = `0x000000000000000000000000${from.replace(\n      '0x',\n      '',\n    )}000000000000000000000000000000000000000000000000000000000000000001`\n  }\n\n  const notificationsQueue = getNotificationsFromTxType(notifiedTransaction, tx.origin)\n  const beforeExecutionKey = dispatch(enqueueSnackbar(notificationsQueue.beforeExecution))\n  let pendingExecutionKey\n\n  let txHash\n  let transaction\n  const txArgs = {\n    ...tx.toJS(), // merge the previous tx with new data\n    safeInstance,\n    to: tx.recipient,\n    valueInWei: tx.value,\n    data: tx.data ?? EMPTY_DATA,\n    operation: tx.operation,\n    nonce: tx.nonce,\n    safeTxGas: tx.safeTxGas,\n    baseGas: tx.baseGas,\n    gasPrice: tx.gasPrice || '0',\n    gasToken: tx.gasToken,\n    refundReceiver: tx.refundReceiver,\n    sender: from,\n    sigs,\n  }\n\n  try {\n    // Here we're checking that safe contract version is greater or equal 1.1.1, but\n    // theoretically EIP712 should also work for 1.0.0 contracts\n    // Also, offchain signatures are not working for ledger/trezor wallet because of a bug in their library:\n    // https://github.com/LedgerHQ/ledgerjs/issues/378\n    // Couldn't find an issue for trezor but the error is almost the same\n    const canTryOffchainSigning =\n      !isExecution && !smartContractWallet && semverSatisfies(safeVersion, SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES)\n    if (canTryOffchainSigning) {\n      const signature = await tryOffchainSigning(tx.safeTxHash, { ...txArgs, safeAddress }, hardwareWallet)\n\n      if (signature) {\n        dispatch(closeSnackbarAction(beforeExecutionKey))\n\n        await saveTxToHistory({ ...txArgs, signature })\n        // TODO: while we wait for the tx to be stored in the service and later update the tx info\n        //  we should update the tx status in the store to disable owners' action buttons\n        dispatch(enqueueSnackbar(notificationsQueue.afterExecution.moreConfirmationsNeeded))\n\n        dispatch(fetchTransactions(safeAddress))\n        return\n      }\n    }\n\n    transaction = isExecution\n      ? await getExecutionTransaction(txArgs)\n      : await getApprovalTransaction(safeInstance, tx.safeTxHash)\n\n    const sendParams: any = { from, value: 0 }\n\n    // if not set owner management tests will fail on ganache\n    if (process.env.NODE_ENV === 'test') {\n      sendParams.gas = '7000000'\n    }\n\n    const txToMock: TxToMock = {\n      ...txArgs,\n      value: txArgs.valueInWei,\n    }\n    const mockedTx = await mockTransaction(txToMock, safeAddress, state)\n\n    await transaction\n      .send(sendParams)\n      .once('transactionHash', async (hash: string) => {\n        txHash = hash\n        dispatch(closeSnackbarAction(beforeExecutionKey))\n\n        pendingExecutionKey = dispatch(enqueueSnackbar(notificationsQueue.pendingExecution))\n\n        try {\n          await Promise.all([\n            saveTxToHistory({ ...txArgs, txHash }),\n            storeSignedTx({ transaction: mockedTx, from, isExecution, safeAddress, dispatch, state }),\n          ])\n          dispatch(fetchTransactions(safeAddress))\n        } catch (e) {\n          dispatch(closeSnackbarAction(pendingExecutionKey))\n          await storeTx({ transaction: tx, safeAddress, dispatch, state })\n          console.error(e)\n        }\n      })\n      .on('error', (error) => {\n        dispatch(closeSnackbarAction(pendingExecutionKey))\n        storeTx({ transaction: tx, safeAddress, dispatch, state })\n        console.error('Processing transaction error: ', error)\n      })\n      .then(async (receipt) => {\n        if (pendingExecutionKey) {\n          dispatch(closeSnackbarAction(pendingExecutionKey))\n        }\n\n        dispatch(\n          enqueueSnackbar(\n            isExecution\n              ? notificationsQueue.afterExecution.noMoreConfirmationsNeeded\n              : notificationsQueue.afterExecution.moreConfirmationsNeeded,\n          ),\n        )\n\n        await storeExecutedTx({ transaction: mockedTx, from, safeAddress, isExecution, receipt, dispatch, state })\n\n        dispatch(fetchTransactions(safeAddress))\n\n        if (isExecution) {\n          dispatch(fetchSafe(safeAddress))\n        }\n\n        return receipt.transactionHash\n      })\n  } catch (err) {\n    const errorMsg = err.message\n      ? `${notificationsQueue.afterExecutionError.message} - ${err.message}`\n      : notificationsQueue.afterExecutionError.message\n    console.error(err)\n\n    if (txHash !== undefined) {\n      dispatch(closeSnackbarAction(beforeExecutionKey))\n\n      if (pendingExecutionKey) {\n        dispatch(closeSnackbarAction(pendingExecutionKey))\n      }\n\n      dispatch(enqueueSnackbar(errorMsg))\n\n      const executeData = safeInstance.methods.approveHash(txHash).encodeABI()\n      const errMsg = await getErrorMessage(safeInstance.options.address, 0, executeData, from)\n      console.error(`Error executing the TX: ${errMsg}`)\n    }\n  }\n\n  return txHash\n}\n\nexport default processTransaction\n","import Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getNetworkInfo } from 'src/config'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Button from 'src/components/layout/Button'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport processTransaction from 'src/logic/safe/store/actions/processTransaction'\n\nimport { safeParamAddressFromStateSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nconst useStyles = makeStyles(styles)\n\nexport const APPROVE_TX_MODAL_SUBMIT_BTN_TEST_ID = 'approve-tx-modal-submit-btn'\nexport const REJECT_TX_MODAL_SUBMIT_BTN_TEST_ID = 'reject-tx-modal-submit-btn'\n\nconst getModalTitleAndDescription = (thresholdReached, isCancelTx) => {\n  const modalInfo = {\n    title: 'Execute Transaction Rejection',\n    description: 'This action will execute this transaction.',\n  }\n\n  if (isCancelTx) {\n    return modalInfo\n  }\n\n  if (thresholdReached) {\n    modalInfo.title = 'Execute Transaction'\n    modalInfo.description =\n      'This action will execute this transaction. A separate Transaction will be performed to submit the execution.'\n  } else {\n    modalInfo.title = 'Approve Transaction'\n    modalInfo.description =\n      'This action will approve this transaction. A separate Transaction will be performed to submit the approval.'\n  }\n\n  return modalInfo\n}\n\ntype Props = {\n  canExecute: boolean\n  isCancelTx?: boolean\n  isOpen: boolean\n  onClose: () => void\n  thresholdReached: boolean\n  tx: Transaction\n}\nconst { nativeCoin } = getNetworkInfo()\n\nconst ApproveTxModal = ({\n  canExecute,\n  isCancelTx = false,\n  isOpen,\n  onClose,\n  thresholdReached,\n  tx,\n}: Props): React.ReactElement => {\n  const dispatch = useDispatch()\n  const userAddress = useSelector(userAccountSelector)\n  const classes = useStyles()\n  const threshold = useSelector(safeThresholdSelector)\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const [approveAndExecute, setApproveAndExecute] = useState(canExecute)\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const { description, title } = getModalTitleAndDescription(thresholdReached, isCancelTx)\n  const oneConfirmationLeft = !thresholdReached && tx.confirmations.size + 1 === threshold\n  const isTheTxReadyToBeExecuted = oneConfirmationLeft ? true : thresholdReached\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const estimateGas = async () => {\n      const estimatedGasCosts = await estimateTxGasCosts(\n        safeAddress,\n        tx.recipient,\n        tx.data as string,\n        tx,\n        approveAndExecute ? userAddress : undefined,\n      )\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGas()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [approveAndExecute, safeAddress, tx, userAddress])\n\n  const handleExecuteCheckbox = () => setApproveAndExecute((prevApproveAndExecute) => !prevApproveAndExecute)\n\n  const approveTx = () => {\n    dispatch(\n      processTransaction({\n        safeAddress,\n        tx,\n        userAddress,\n        notifiedTransaction: TX_NOTIFICATION_TYPES.CONFIRMATION_TX,\n        approveAndExecute: canExecute && approveAndExecute && isTheTxReadyToBeExecuted,\n      }),\n    )\n    onClose()\n  }\n\n  return (\n    <Modal description={description} handleClose={onClose} open={isOpen} title={title}>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n          {title}\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <Row style={{ flexDirection: 'column' }}>\n          <Paragraph>{description}</Paragraph>\n          <Paragraph color=\"medium\" size=\"sm\">\n            Transaction nonce:\n            <br />\n            <Bold className={classes.nonceNumber}>{tx.nonce}</Bold>\n          </Paragraph>\n          {oneConfirmationLeft && canExecute && (\n            <>\n              <Paragraph color=\"error\">\n                Approving this transaction executes it right away.\n                {!isCancelTx &&\n                  ' If you want approve but execute the transaction manually later, click on the checkbox below.'}\n              </Paragraph>\n              {!isCancelTx && (\n                <FormControlLabel\n                  control={<Checkbox checked={approveAndExecute} color=\"primary\" onChange={handleExecuteCheckbox} />}\n                  label=\"Execute transaction\"\n                  data-testid=\"execute-checkbox\"\n                />\n              )}\n            </>\n          )}\n        </Row>\n        <Row>\n          <Paragraph>\n            {`You're about to ${\n              approveAndExecute ? 'execute' : 'approve'\n            } a transaction and will have to confirm it with your currently connected wallet. Make sure you have ${gasCosts} (fee price) ${\n              nativeCoin.name\n            } in this wallet to fund this confirmation.`}\n          </Paragraph>\n        </Row>\n      </Block>\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClose}>\n          Exit\n        </Button>\n        <Button\n          color={isCancelTx ? 'secondary' : 'primary'}\n          minHeight={42}\n          minWidth={214}\n          onClick={approveTx}\n          testId={isCancelTx ? REJECT_TX_MODAL_SUBMIT_BTN_TEST_ID : APPROVE_TX_MODAL_SUBMIT_BTN_TEST_ID}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          {title}\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ApproveTxModal\n","import { boldFont, border, error, primary, secondary, secondaryText, sm, warning } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core/styles'\n\nexport const styles = createStyles({\n  ownersList: {\n    height: '192px',\n    overflowY: 'scroll',\n    padding: 0,\n    width: '100%',\n  },\n  rightCol: {\n    borderLeft: `2px solid ${border}`,\n    boxSizing: 'border-box',\n  },\n  verticalLine: {\n    backgroundColor: secondaryText,\n    height: '55px',\n    left: '27px',\n    position: 'absolute',\n    top: '-27px',\n    width: '2px',\n    zIndex: 12,\n  },\n  verticalLinePending: {\n    backgroundColor: secondaryText,\n  },\n  verticalLineDone: {\n    backgroundColor: secondary,\n  },\n  verticalLineCancel: {\n    backgroundColor: error,\n  },\n  verticalPendingAction: {\n    backgroundColor: warning,\n  },\n  icon: {\n    marginRight: sm,\n  },\n  owner: {\n    borderBottom: `1px solid ${border}`,\n  },\n  container: {\n    alignItems: 'center',\n    display: 'flex',\n    padding: '13px 15px 13px 18px',\n    position: 'relative',\n  },\n  ownerListTitle: {\n    alignItems: 'center',\n    display: 'flex',\n    fontSize: '11px',\n    fontWeight: boldFont,\n    letterSpacing: '1px',\n    lineHeight: 1.3,\n    padding: '15px 15px 15px 18px',\n    position: 'relative',\n    textTransform: 'uppercase',\n  },\n  olderTxAnnotation: {\n    textAlign: 'center',\n  },\n  ownerListTitleDone: {\n    color: secondary,\n  },\n  ownerListTitleCancelDone: {\n    color: error,\n  },\n  name: {\n    height: '15px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  address: {\n    height: '20px',\n  },\n  spacer: {\n    flex: 'auto',\n  },\n  circleState: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginRight: '18px',\n    width: '20px',\n    zIndex: 13,\n\n    '& > img': {\n      display: 'block',\n    },\n  },\n  button: {\n    alignSelf: 'center',\n    flexGrow: 0,\n    fontSize: '16px',\n    justifyContent: 'center',\n    paddingLeft: '14px',\n    paddingRight: '14px',\n  },\n  lastButton: {\n    marginLeft: '10px',\n  },\n  executor: {\n    alignSelf: 'center',\n    background: border,\n    borderRadius: '3px',\n    color: primary,\n    fontSize: '11px',\n    height: '24px',\n    lineHeight: '24px',\n    padding: '0 12px',\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport CancelSmallFilledCircle from './assets/cancel-small-filled.svg'\nimport ConfirmSmallFilledCircle from './assets/confirm-small-filled.svg'\nimport ConfirmSmallGreenCircle from './assets/confirm-small-green.svg'\nimport ConfirmSmallGreyCircle from './assets/confirm-small-grey.svg'\nimport ConfirmSmallRedCircle from './assets/confirm-small-red.svg'\nimport PendingSmallYellowCircle from './assets/confirm-small-yellow.svg'\nimport { styles } from './style'\n\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Img from 'src/components/layout/Img'\nimport { getNameFromAddressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { OwnersWithoutConfirmations } from './index'\nimport { getExplorerInfo } from 'src/config'\n\nexport const CONFIRM_TX_BTN_TEST_ID = 'confirm-btn'\nexport const EXECUTE_TX_BTN_TEST_ID = 'execute-btn'\nexport const REJECT_TX_BTN_TEST_ID = 'reject-btn'\nexport const EXECUTE_REJECT_TX_BTN_TEST_ID = 'execute-reject-btn'\n\ntype OwnerComponentProps = {\n  executor: string\n  isCancelTx?: boolean\n  onTxConfirm?: () => void\n  onTxExecute?: () => void\n  onTxReject?: () => void\n  ownersUnconfirmed: OwnersWithoutConfirmations\n  ownersWhoConfirmed: string[]\n  showConfirmBtn?: boolean\n  showExecuteBtn?: boolean\n  showExecuteRejectBtn?: boolean\n  showRejectBtn?: boolean\n  thresholdReached: boolean\n  userAddress: string\n  confirmed?: boolean\n  owner: string\n  pendingAcceptAction?: boolean\n  pendingRejectAction?: boolean\n}\n\nconst useStyles = makeStyles(styles)\n\nconst OwnerComponent = (props: OwnerComponentProps): React.ReactElement => {\n  const {\n    owner,\n    pendingAcceptAction,\n    pendingRejectAction,\n    isCancelTx,\n    thresholdReached,\n    executor,\n    showConfirmBtn,\n    onTxConfirm,\n    onTxExecute,\n    showExecuteBtn,\n    showRejectBtn,\n    userAddress,\n    onTxReject,\n    showExecuteRejectBtn,\n    confirmed,\n  } = props\n  const nameInAdbk = useSelector((state) => getNameFromAddressBookSelector(state, owner))\n  const classes = useStyles()\n  const [imgCircle, setImgCircle] = React.useState(ConfirmSmallGreyCircle)\n\n  React.useMemo(() => {\n    if (pendingAcceptAction || pendingRejectAction) {\n      setImgCircle(PendingSmallYellowCircle)\n      return\n    }\n    if (confirmed) {\n      setImgCircle(isCancelTx ? CancelSmallFilledCircle : ConfirmSmallFilledCircle)\n      return\n    }\n    if (thresholdReached || executor) {\n      setImgCircle(isCancelTx ? ConfirmSmallRedCircle : ConfirmSmallGreenCircle)\n      return\n    }\n    setImgCircle(ConfirmSmallGreyCircle)\n  }, [confirmed, thresholdReached, executor, isCancelTx, pendingAcceptAction, pendingRejectAction])\n\n  const getTimelineLine = () => {\n    if (pendingAcceptAction || pendingRejectAction) {\n      return classes.verticalPendingAction\n    }\n    if (isCancelTx) {\n      return classes.verticalLineCancel\n    }\n    return classes.verticalLineDone\n  }\n\n  const confirmButton = () => {\n    if (pendingRejectAction) {\n      return null\n    }\n    if (pendingAcceptAction) {\n      return <Block className={classes.executor}>Pending</Block>\n    }\n    return (\n      <>\n        {showConfirmBtn && (\n          <Button\n            className={classes.button}\n            color=\"primary\"\n            onClick={onTxConfirm}\n            testId={CONFIRM_TX_BTN_TEST_ID}\n            variant=\"contained\"\n          >\n            Confirm\n          </Button>\n        )}\n        {showExecuteBtn && (\n          <Button\n            className={classes.button}\n            color=\"primary\"\n            onClick={onTxExecute}\n            testId={EXECUTE_TX_BTN_TEST_ID}\n            variant=\"contained\"\n          >\n            Execute\n          </Button>\n        )}\n      </>\n    )\n  }\n\n  const rejectButton = () => {\n    if (pendingRejectAction) {\n      return <Block className={classes.executor}>Pending</Block>\n    }\n    if (pendingAcceptAction) {\n      return null\n    }\n    return (\n      <>\n        {showRejectBtn && (\n          <Button\n            className={cn(classes.button, classes.lastButton)}\n            color=\"secondary\"\n            onClick={onTxReject}\n            testId={REJECT_TX_BTN_TEST_ID}\n            variant=\"contained\"\n          >\n            Reject\n          </Button>\n        )}\n        {showExecuteRejectBtn && (\n          <Button\n            className={cn(classes.button, classes.lastButton)}\n            color=\"secondary\"\n            onClick={onTxReject}\n            testId={EXECUTE_REJECT_TX_BTN_TEST_ID}\n            variant=\"contained\"\n          >\n            Execute\n          </Button>\n        )}\n      </>\n    )\n  }\n  const explorerUrl = getExplorerInfo(owner)\n  return (\n    <Block className={classes.container}>\n      <div\n        className={cn(\n          classes.verticalLine,\n          (confirmed || thresholdReached || executor || pendingAcceptAction || pendingRejectAction) &&\n            getTimelineLine(),\n        )}\n      />\n      <div className={classes.circleState}>\n        <Img alt=\"\" src={imgCircle} />\n      </div>\n      <EthHashInfo\n        hash={owner}\n        name={!nameInAdbk || nameInAdbk === 'UNKNOWN' ? '' : nameInAdbk}\n        shortenHash={4}\n        showIdenticon\n        showCopyBtn\n        explorerUrl={explorerUrl}\n      />\n      <Block className={classes.spacer} />\n      {owner === userAddress && <Block>{isCancelTx ? rejectButton() : confirmButton()}</Block>}\n      {owner === executor && <Block className={classes.executor}>Executor</Block>}\n    </Block>\n  )\n}\n\nexport default OwnerComponent\n","import React from 'react'\n\nimport OwnerComponent from './OwnerComponent'\nimport { OwnersWithoutConfirmations } from './index'\n\ntype OwnersListProps = {\n  executor: string\n  isCancelTx?: boolean\n  onTxConfirm?: () => void\n  onTxExecute?: () => void\n  onTxReject?: () => void\n  ownersUnconfirmed: OwnersWithoutConfirmations\n  ownersWhoConfirmed: string[]\n  showConfirmBtn?: boolean\n  showExecuteBtn?: boolean\n  showExecuteRejectBtn?: boolean\n  showRejectBtn?: boolean\n  thresholdReached: boolean\n  userAddress: string\n}\n\nconst OwnersList = (props: OwnersListProps): React.ReactElement => {\n  const { ownersUnconfirmed, ownersWhoConfirmed } = props\n  return (\n    <>\n      {ownersWhoConfirmed.map((owner) => (\n        <OwnerComponent confirmed key={owner} owner={owner} {...props} />\n      ))}\n      {ownersUnconfirmed.map(({ hasPendingAcceptActions, hasPendingRejectActions, owner }) => (\n        <OwnerComponent\n          key={owner}\n          owner={owner}\n          pendingAcceptAction={hasPendingAcceptActions}\n          pendingRejectAction={hasPendingRejectActions}\n          {...props}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default OwnersList\n","import cn from 'classnames'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport OwnersList from './OwnersList'\nimport CheckLargeFilledGreenCircle from './assets/check-large-filled-green.svg'\nimport CheckLargeFilledRedCircle from './assets/check-large-filled-red.svg'\nimport ConfirmLargeGreenCircle from './assets/confirm-large-green.svg'\nimport ConfirmLargeGreyCircle from './assets/confirm-large-grey.svg'\nimport ConfirmLargeRedCircle from './assets/confirm-large-red.svg'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph/index'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\nimport { List } from 'immutable'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { styles } from './style'\nimport { makeTransaction } from 'src/logic/safe/store/models/transaction'\nimport { safeOwnersSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\nimport { TransactionStatus } from 'src/logic/safe/store/models/types/transaction'\nimport { SafeOwner } from 'src/logic/safe/store/models/safe'\n\nexport type OwnersWithoutConfirmations = {\n  hasPendingAcceptActions: boolean\n  hasPendingRejectActions: boolean\n  owner: string\n}[]\n\nfunction getOwnersConfirmations(tx: Transaction, userAddress: string): [string[], boolean] {\n  const ownersWhoConfirmed: string[] = []\n  let currentUserAlreadyConfirmed = false\n\n  tx.confirmations.forEach((conf) => {\n    if (conf.owner === userAddress) {\n      currentUserAlreadyConfirmed = true\n    }\n\n    ownersWhoConfirmed.push(conf.owner)\n  })\n  return [ownersWhoConfirmed, currentUserAlreadyConfirmed]\n}\n\nfunction getPendingOwnersConfirmations(\n  owners: List<{ name: string; address: string }>,\n  tx: Transaction,\n  userAddress: string,\n): [OwnersWithoutConfirmations, boolean] {\n  const ownersWithNoConfirmations: string[] = []\n  let currentUserNotConfirmed = true\n\n  owners.forEach((owner) => {\n    const confirmationsEntry = tx.confirmations.find((conf) => conf.owner === owner.address)\n    if (!confirmationsEntry) {\n      ownersWithNoConfirmations.push(owner.address)\n    }\n    if (confirmationsEntry && confirmationsEntry.owner === userAddress) {\n      currentUserNotConfirmed = false\n    }\n  })\n\n  const confirmationPendingActions = tx.ownersWithPendingActions.get('confirm')\n  const confirmationRejectActions = tx.ownersWithPendingActions.get('reject')\n\n  const ownersWithNoConfirmationsSorted = ownersWithNoConfirmations\n    .map((owner) => ({\n      hasPendingAcceptActions: !!confirmationPendingActions?.includes(owner),\n      hasPendingRejectActions: !!confirmationRejectActions?.includes(owner),\n      owner,\n    }))\n    // Reorders the list of unconfirmed owners, owners with pendingActions should be first\n    .sort((ownerA, ownerB) => {\n      // If the first owner has pending actions, A should be before B\n      if (ownerA.hasPendingRejectActions || ownerA.hasPendingAcceptActions) {\n        return -1\n      }\n      // The first owner has not pending actions but the second yes, B should be before A\n      if (ownerB.hasPendingRejectActions || ownerB.hasPendingAcceptActions) {\n        return 1\n      }\n      // Otherwise do not change order\n      return 0\n    })\n\n  return [ownersWithNoConfirmationsSorted, currentUserNotConfirmed]\n}\n\nconst useStyles = makeStyles(styles)\n\ntype ownersColumnProps = {\n  tx: Transaction\n  cancelTx: Transaction\n  thresholdReached: boolean\n  cancelThresholdReached: boolean\n  onTxConfirm: () => void\n  onTxExecute: () => void\n  onTxReject: () => void\n  canExecute: boolean\n  canExecuteCancel: boolean\n}\n\nconst OwnersColumn = ({\n  tx,\n  cancelTx = makeTransaction({ isCancellationTx: true, status: TransactionStatus.AWAITING_YOUR_CONFIRMATION }),\n  thresholdReached,\n  cancelThresholdReached,\n  onTxConfirm,\n  onTxExecute,\n  onTxReject,\n  canExecute,\n  canExecuteCancel,\n}: ownersColumnProps): React.ReactElement => {\n  const classes = useStyles()\n  let showOlderTxAnnotation\n  if (tx.isExecuted || cancelTx.isExecuted) {\n    showOlderTxAnnotation = false\n  } else {\n    showOlderTxAnnotation = (thresholdReached && !canExecute) || (cancelThresholdReached && !canExecuteCancel)\n  }\n  const owners = useSelector(safeOwnersSelector) as List<SafeOwner>\n  const threshold = useSelector(safeThresholdSelector)\n  const userAddress = useSelector(userAccountSelector)\n  const [ownersWhoConfirmed, currentUserAlreadyConfirmed] = getOwnersConfirmations(tx, userAddress)\n  const [ownersUnconfirmed, userIsUnconfirmedOwner] = getPendingOwnersConfirmations(owners, tx, userAddress)\n  const [ownersWhoConfirmedCancel, currentUserAlreadyConfirmedCancel] = getOwnersConfirmations(cancelTx, userAddress)\n  const [ownersUnconfirmedCancel, userIsUnconfirmedCancelOwner] = getPendingOwnersConfirmations(\n    owners,\n    cancelTx,\n    userAddress,\n  )\n\n  let displayButtonRow = true\n  if (tx.executionTxHash) {\n    // One of owners already executed the tx\n    displayButtonRow = false\n  } else if (tx.status === 'cancelled') {\n    // tx is cancelled (replaced) by another one\n    displayButtonRow = false\n  } else if (currentUserAlreadyConfirmedCancel) {\n    displayButtonRow = false\n  }\n\n  // TODO: simplify this whole logic around tx status, it's getting hard to maintain and follow\n  const showConfirmBtn =\n    !tx.isExecuted &&\n    tx.status !== 'pending' &&\n    cancelTx.status !== 'pending' &&\n    !tx.cancelled &&\n    userIsUnconfirmedOwner &&\n    !currentUserAlreadyConfirmed &&\n    !thresholdReached\n\n  const showExecuteBtn =\n    canExecute && !tx.isExecuted && thresholdReached && tx.status !== 'pending' && cancelTx.status !== 'pending'\n\n  const showRejectBtn =\n    !cancelTx.isExecuted &&\n    !tx.isExecuted &&\n    tx.status !== 'pending' &&\n    cancelTx.status !== 'pending' &&\n    userIsUnconfirmedCancelOwner &&\n    !currentUserAlreadyConfirmedCancel &&\n    !cancelThresholdReached &&\n    displayButtonRow\n\n  const showExecuteRejectBtn =\n    !cancelTx.isExecuted &&\n    !tx.isExecuted &&\n    canExecuteCancel &&\n    cancelThresholdReached &&\n    tx.status !== 'pending' &&\n    cancelTx.status !== 'pending'\n\n  const txThreshold = cancelTx.isExecuted ? tx.confirmations.size : threshold\n  const cancelThreshold = tx.isExecuted ? cancelTx.confirmations.size : threshold\n\n  return (\n    <Col className={classes.rightCol} layout=\"block\" xs={6}>\n      <Block\n        className={cn(classes.ownerListTitle, (thresholdReached || tx.isExecuted) && classes.ownerListTitleDone)}\n        data-testid={`confirmed-${tx.confirmations.size}-out-of-${txThreshold}`}\n      >\n        <div className={classes.circleState}>\n          <Img\n            alt=\"\"\n            src={thresholdReached || tx.isExecuted ? CheckLargeFilledGreenCircle : ConfirmLargeGreenCircle}\n            data-testid={thresholdReached || tx.isExecuted ? 'confirmed-tx-check' : 'not-confirmed-tx-check'}\n          />\n        </div>\n        {tx.isExecuted\n          ? `Confirmed [${tx.confirmations.size}/${tx.confirmations.size}]`\n          : `Confirmed [${tx.confirmations.size}/${txThreshold}]`}\n      </Block>\n      <OwnersList\n        executor={tx.executor}\n        onTxConfirm={onTxConfirm}\n        onTxExecute={onTxExecute}\n        ownersUnconfirmed={ownersUnconfirmed}\n        ownersWhoConfirmed={ownersWhoConfirmed}\n        showConfirmBtn={showConfirmBtn}\n        showExecuteBtn={showExecuteBtn}\n        thresholdReached={thresholdReached}\n        userAddress={userAddress}\n      />\n      {/* Cancel TX thread - START */}\n      <Block\n        className={cn(\n          classes.ownerListTitle,\n          (cancelThresholdReached || cancelTx.isExecuted) && classes.ownerListTitleCancelDone,\n        )}\n        data-testid={`rejected-${cancelTx.confirmations.size}-out-of-${cancelThreshold}`}\n      >\n        <div\n          className={cn(classes.verticalLine, tx.isExecuted ? classes.verticalLineDone : classes.verticalLinePending)}\n        />\n        <div className={classes.circleState}>\n          <Img\n            alt=\"\"\n            src={cancelThresholdReached || cancelTx.isExecuted ? CheckLargeFilledRedCircle : ConfirmLargeRedCircle}\n          />\n        </div>\n        {cancelTx.isExecuted\n          ? `Rejected [${cancelTx.confirmations.size}/${cancelTx.confirmations.size}]`\n          : `Rejected [${cancelTx.confirmations.size}/${cancelThreshold}]`}\n      </Block>\n      <OwnersList\n        executor={cancelTx.executor}\n        isCancelTx\n        onTxReject={onTxReject}\n        ownersUnconfirmed={ownersUnconfirmedCancel}\n        ownersWhoConfirmed={ownersWhoConfirmedCancel}\n        showExecuteRejectBtn={showExecuteRejectBtn}\n        showRejectBtn={showRejectBtn}\n        thresholdReached={cancelThresholdReached}\n        userAddress={userAddress}\n      />\n      {/* Cancel TX thread - END */}\n      <Block\n        className={cn(\n          classes.ownerListTitle,\n          tx.isExecuted && classes.ownerListTitleDone,\n          cancelTx.isExecuted && classes.ownerListTitleCancelDone,\n        )}\n      >\n        <div\n          className={cn(\n            classes.verticalLine,\n            tx.isExecuted && classes.verticalLineDone,\n            cancelTx.isExecuted && classes.verticalLineCancel,\n          )}\n        />\n        <div className={classes.circleState}>\n          {!tx.isExecuted && !cancelTx.isExecuted && <Img alt=\"Confirm / Execute tx\" src={ConfirmLargeGreyCircle} />}\n          {tx.isExecuted && <Img alt=\"TX Executed icon\" src={CheckLargeFilledGreenCircle} />}\n          {cancelTx.isExecuted && <Img alt=\"TX Executed icon\" src={CheckLargeFilledRedCircle} />}\n        </div>\n        Executed\n      </Block>\n\n      {showOlderTxAnnotation && (\n        <Block className={classes.olderTxAnnotation}>\n          <Paragraph>There are older transactions that need to be executed first</Paragraph>\n        </Block>\n      )}\n    </Col>\n  )\n}\n\nexport default OwnersColumn\n","import { createStyles } from '@material-ui/core'\nimport { border, lg, md, sm } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  container: {\n    padding: `${md} ${lg}`,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    borderTop: `1px solid ${border}`,\n  },\n  nonceNumber: {\n    marginTop: sm,\n    fontSize: md,\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getNetworkInfo } from 'src/config'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Button from 'src/components/layout/Button'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\n\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  tx: Transaction\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst RejectTxModal = ({ isOpen, onClose, tx }: Props): React.ReactElement => {\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const dispatch = useDispatch()\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const classes = useStyles()\n\n  useEffect(() => {\n    let isCurrent = true\n    const estimateGasCosts = async () => {\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress, safeAddress, EMPTY_DATA)\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGasCosts()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress])\n\n  const sendReplacementTransaction = () => {\n    dispatch(\n      createTransaction({\n        safeAddress,\n        to: safeAddress,\n        valueInWei: '0',\n        notifiedTransaction: TX_NOTIFICATION_TYPES.CANCELLATION_TX,\n        txNonce: tx.nonce,\n        origin: tx.origin,\n      }),\n    )\n    onClose()\n  }\n\n  return (\n    <Modal description=\"Reject Transaction\" handleClose={onClose} open={isOpen} title=\"Reject Transaction\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n          Reject transaction\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <Row>\n          <Paragraph>\n            This action will cancel this transaction. A separate transaction will be performed to submit the rejection.\n          </Paragraph>\n          <Paragraph color=\"medium\" size=\"sm\">\n            Transaction nonce:\n            <br />\n            <Bold className={classes.nonceNumber}>{tx.nonce}</Bold>\n          </Paragraph>\n        </Row>\n        <Row>\n          <Paragraph>\n            {`You're about to create a transaction and will have to confirm it with your currently connected wallet. Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n          </Paragraph>\n        </Row>\n      </Block>\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClose}>\n          Exit\n        </Button>\n        <Button\n          color=\"secondary\"\n          minHeight={42}\n          minWidth={214}\n          onClick={sendReplacementTransaction}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Reject Transaction\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default RejectTxModal\n","import { createStyles } from '@material-ui/core/styles'\nimport { lg, md } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  txDataContainer: {\n    paddingTop: lg,\n    paddingLeft: md,\n    paddingBottom: md,\n  },\n  txData: {\n    wordBreak: 'break-all',\n  },\n  txDataParagraph: {\n    whiteSpace: 'normal',\n  },\n  linkTxData: {\n    textDecoration: 'underline',\n    cursor: 'pointer',\n  },\n  multiSendTxData: {\n    marginTop: `-${lg}`,\n    marginLeft: `-${md}`,\n  },\n  collapse: {\n    borderBottom: `2px solid rgb(232, 231, 230)`,\n  },\n  collapseHeaderWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'center',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '8px 8px 8px 16px',\n    borderBottom: '2px solid rgb(232, 231, 230)',\n\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  address: {\n    display: 'inline-flex',\n  },\n})\n","import { Transaction } from 'src/logic/safe/store/models/types/transaction'\nimport { SAFE_METHODS_NAMES } from 'src/routes/safe/store/models/types/transactions.d'\nimport { sameString } from 'src/utils/strings'\nimport { getNetworkInfo } from 'src/config'\n\nconst getSafeVersion = (data) => {\n  const contractAddress = data.substr(340, 40).toLowerCase()\n\n  return (\n    {\n      '34cfac646f301356faa8b21e94227e3583fe3f5f': '1.1.1',\n    }[contractAddress] || 'X.x.x'\n  )\n}\n\ninterface TxData {\n  data?: string | null\n  recipient?: string\n  module?: string\n  action?: string\n  addedOwner?: string\n  removedOwner?: string\n  newThreshold?: string\n  tokenId?: string\n  isTokenTransfer?: boolean\n  isCollectibleTransfer?: boolean\n  modifySettingsTx?: boolean\n  customTx?: boolean\n  cancellationTx?: boolean\n  creationTx?: boolean\n  upgradeTx?: boolean\n  tokenAddress?: string\n}\n\nconst getTxDataForModifySettingsTxs = (tx: Transaction): TxData => {\n  const txData: TxData = {}\n\n  if (!tx.modifySettingsTx || !tx.decodedParams) {\n    return txData\n  }\n\n  txData.recipient = tx.recipient\n  txData.modifySettingsTx = true\n\n  if (tx.decodedParams[SAFE_METHODS_NAMES.REMOVE_OWNER]) {\n    const { _threshold, owner } = tx.decodedParams[SAFE_METHODS_NAMES.REMOVE_OWNER]\n    txData.action = SAFE_METHODS_NAMES.REMOVE_OWNER\n    txData.removedOwner = owner\n    txData.newThreshold = _threshold\n\n    return txData\n  }\n  if (tx.decodedParams[SAFE_METHODS_NAMES.CHANGE_THRESHOLD]) {\n    const { _threshold } = tx.decodedParams[SAFE_METHODS_NAMES.CHANGE_THRESHOLD]\n    txData.action = SAFE_METHODS_NAMES.CHANGE_THRESHOLD\n    txData.newThreshold = _threshold\n    return txData\n  }\n  if (tx.decodedParams[SAFE_METHODS_NAMES.ADD_OWNER_WITH_THRESHOLD]) {\n    const { _threshold, owner } = tx.decodedParams[SAFE_METHODS_NAMES.ADD_OWNER_WITH_THRESHOLD]\n    txData.action = SAFE_METHODS_NAMES.ADD_OWNER_WITH_THRESHOLD\n    txData.addedOwner = owner\n    txData.newThreshold = _threshold\n    return txData\n  }\n\n  if (tx.decodedParams[SAFE_METHODS_NAMES.SWAP_OWNER]) {\n    const { newOwner, oldOwner } = tx.decodedParams[SAFE_METHODS_NAMES.SWAP_OWNER]\n    txData.action = SAFE_METHODS_NAMES.SWAP_OWNER\n    txData.removedOwner = oldOwner\n    txData.addedOwner = newOwner\n    return txData\n  }\n\n  if (tx.decodedParams[SAFE_METHODS_NAMES.ENABLE_MODULE]) {\n    const { module } = tx.decodedParams[SAFE_METHODS_NAMES.ENABLE_MODULE]\n    txData.action = SAFE_METHODS_NAMES.ENABLE_MODULE\n    txData.module = module\n    return txData\n  }\n\n  if (tx.decodedParams[SAFE_METHODS_NAMES.DISABLE_MODULE]) {\n    const { module } = tx.decodedParams[SAFE_METHODS_NAMES.DISABLE_MODULE]\n    txData.action = SAFE_METHODS_NAMES.DISABLE_MODULE\n    txData.module = module\n    return txData\n  }\n\n  return txData\n}\n\nconst getTxDataForTxsWithDecodedParams = (tx: Transaction): TxData => {\n  const txData: TxData = {}\n\n  if (!tx.decodedParams) {\n    return txData\n  }\n\n  if (tx.isTokenTransfer) {\n    const { to } = tx.decodedParams.transfer || {}\n    txData.recipient = to\n    txData.isTokenTransfer = true\n    txData.tokenAddress = tx.recipient\n    return txData\n  }\n\n  if (tx.isCollectibleTransfer) {\n    const { safeTransferFrom, transfer, transferFrom } = tx.decodedParams\n    const { to, value } = safeTransferFrom || transferFrom || transfer || {}\n    txData.recipient = to\n    txData.tokenId = value\n    txData.isCollectibleTransfer = true\n\n    return txData\n  }\n\n  if (tx.modifySettingsTx) {\n    return getTxDataForModifySettingsTxs(tx)\n  }\n\n  if (tx.multiSendTx) {\n    txData.recipient = tx.recipient\n    txData.data = tx.data\n    txData.customTx = true\n    return txData\n  }\n\n  txData.recipient = tx.recipient\n  txData.data = tx.data\n  txData.customTx = true\n\n  return txData\n}\n\n// @todo (agustin) this function does not makes much sense\n// it should be refactored to simplify unnecessary if's checks and re-asigning props to the txData object\nexport const getTxData = (tx: Transaction): TxData => {\n  const txData: TxData = {}\n\n  const { nativeCoin } = getNetworkInfo()\n  if (sameString(tx.type, 'outgoing') && tx.symbol && sameString(tx.symbol, nativeCoin.symbol)) {\n    txData.isTokenTransfer = true\n    txData.tokenAddress = nativeCoin.address\n  }\n\n  if (tx.decodedParams) {\n    return getTxDataForTxsWithDecodedParams(tx)\n  }\n\n  if (tx.customTx) {\n    txData.recipient = tx.recipient\n    txData.data = tx.data\n    txData.customTx = true\n    return txData\n  }\n  if (Number(tx.value) > 0) {\n    txData.recipient = tx.recipient\n    return txData\n  }\n\n  if (tx.isCancellationTx) {\n    txData.cancellationTx = true\n    return txData\n  }\n\n  if (tx.creationTx) {\n    txData.creationTx = true\n    return txData\n  }\n\n  if (tx.upgradeTx) {\n    txData.upgradeTx = true\n    txData.data = `The contract of this Safe is upgraded to Version ${getSafeVersion(tx.data)}`\n\n    return txData\n  }\n  txData.recipient = tx.recipient\n\n  return txData\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { EtherscanLink } from 'src/components/EtherscanLink'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\n\nimport { getNameFromAddressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport OwnerAddressTableCell from 'src/routes/safe/components/Settings/ManageOwners/OwnerAddressTableCell'\nimport { SAFE_METHODS_NAMES, SafeMethods } from 'src/routes/safe/store/models/types/transactions.d'\n\nexport const TRANSACTIONS_DESC_ADD_OWNER_TEST_ID = 'tx-description-add-owner'\nexport const TRANSACTIONS_DESC_REMOVE_OWNER_TEST_ID = 'tx-description-remove-owner'\nexport const TRANSACTIONS_DESC_CHANGE_THRESHOLD_TEST_ID = 'tx-description-change-threshold'\nexport const TRANSACTIONS_DESC_ADD_MODULE_TEST_ID = 'tx-description-add-module'\nexport const TRANSACTIONS_DESC_REMOVE_MODULE_TEST_ID = 'tx-description-remove-module'\nexport const TRANSACTIONS_DESC_NO_DATA = 'tx-description-no-data'\n\ninterface RemovedOwnerProps {\n  removedOwner: string\n}\n\nconst RemovedOwner = ({ removedOwner }: RemovedOwnerProps): React.ReactElement => {\n  const ownerChangedName = useSelector((state) => getNameFromAddressBookSelector(state, removedOwner))\n\n  return (\n    <Block data-testid={TRANSACTIONS_DESC_REMOVE_OWNER_TEST_ID}>\n      <Bold>Remove owner:</Bold>\n      {ownerChangedName ? (\n        <OwnerAddressTableCell address={removedOwner} knownAddress showLinks userName={ownerChangedName} />\n      ) : (\n        <EtherscanLink knownAddress={false} value={removedOwner} />\n      )}\n    </Block>\n  )\n}\n\ninterface AddedOwnerProps {\n  addedOwner: string\n}\n\nconst AddedOwner = ({ addedOwner }: AddedOwnerProps): React.ReactElement => {\n  const ownerChangedName = useSelector((state) => getNameFromAddressBookSelector(state, addedOwner))\n\n  return (\n    <Block data-testid={TRANSACTIONS_DESC_ADD_OWNER_TEST_ID}>\n      <Bold>Add owner:</Bold>\n      {ownerChangedName ? (\n        <OwnerAddressTableCell address={addedOwner} knownAddress showLinks userName={ownerChangedName} />\n      ) : (\n        <EtherscanLink knownAddress={false} value={addedOwner} />\n      )}\n    </Block>\n  )\n}\n\ninterface NewThresholdProps {\n  newThreshold: string\n}\n\nconst NewThreshold = ({ newThreshold }: NewThresholdProps): React.ReactElement => (\n  <Block data-testid={TRANSACTIONS_DESC_CHANGE_THRESHOLD_TEST_ID}>\n    <Bold>Change required confirmations:</Bold>\n    <Paragraph noMargin size=\"md\">\n      {newThreshold}\n    </Paragraph>\n  </Block>\n)\n\ninterface AddModuleProps {\n  module: string\n}\n\nconst AddModule = ({ module }: AddModuleProps): React.ReactElement => (\n  <Block data-testid={TRANSACTIONS_DESC_ADD_MODULE_TEST_ID}>\n    <Bold>Add module:</Bold>\n    <EtherscanLink value={module} knownAddress={false} />\n  </Block>\n)\n\ninterface RemoveModuleProps {\n  module: string\n}\n\nconst RemoveModule = ({ module }: RemoveModuleProps): React.ReactElement => (\n  <Block data-testid={TRANSACTIONS_DESC_REMOVE_MODULE_TEST_ID}>\n    <Bold>Remove module:</Bold>\n    <EtherscanLink value={module} knownAddress={false} />\n  </Block>\n)\n\ninterface SettingsDescriptionProps {\n  action: SafeMethods\n  addedOwner?: string\n  newThreshold?: string\n  removedOwner?: string\n  module?: string\n}\n\nconst SettingsDescription = ({\n  action,\n  addedOwner,\n  newThreshold,\n  removedOwner,\n  module,\n}: SettingsDescriptionProps): React.ReactElement => {\n  if (action === SAFE_METHODS_NAMES.REMOVE_OWNER && removedOwner && newThreshold) {\n    return (\n      <>\n        <RemovedOwner removedOwner={removedOwner} />\n        <NewThreshold newThreshold={newThreshold} />\n      </>\n    )\n  }\n\n  if (action === SAFE_METHODS_NAMES.CHANGE_THRESHOLD && newThreshold) {\n    return <NewThreshold newThreshold={newThreshold} />\n  }\n\n  if (action === SAFE_METHODS_NAMES.ADD_OWNER_WITH_THRESHOLD && addedOwner && newThreshold) {\n    return (\n      <>\n        <AddedOwner addedOwner={addedOwner} />\n        <NewThreshold newThreshold={newThreshold} />\n      </>\n    )\n  }\n\n  if (action === SAFE_METHODS_NAMES.SWAP_OWNER && removedOwner && addedOwner) {\n    return (\n      <>\n        <RemovedOwner removedOwner={removedOwner} />\n        <AddedOwner addedOwner={addedOwner} />\n      </>\n    )\n  }\n\n  if (action === SAFE_METHODS_NAMES.ENABLE_MODULE && module) {\n    return <AddModule module={module} />\n  }\n\n  if (action === SAFE_METHODS_NAMES.DISABLE_MODULE && module) {\n    return <RemoveModule module={module} />\n  }\n\n  return (\n    <Block data-testid={TRANSACTIONS_DESC_NO_DATA}>\n      <Bold>No data available for current transaction</Bold>\n    </Block>\n  )\n}\n\nexport default SettingsDescription\n","import { Text, EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport {\n  isAddress,\n  isArrayParameter,\n} from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport { getExplorerInfo } from 'src/config'\n\nconst NestedWrapper = styled.div`\n  padding-left: 4px;\n`\n\nconst StyledText = styled(Text)`\n  white-space: normal;\n`\n\ninterface RenderValueProps {\n  method: string\n  type: string\n  value: string | string[]\n}\n\nconst GenericValue = ({ method, type, value }: RenderValueProps): React.ReactElement => {\n  const getTextValue = (value: string) => <StyledText size=\"lg\">{value}</StyledText>\n\n  const getArrayValue = (parentId: string, value: string[] | string) => (\n    <div>\n      [\n      <NestedWrapper>\n        {(value as string[]).map((currentValue, index) => {\n          const key = `${parentId}-value-${index}`\n          return (\n            <div key={key}>\n              {Array.isArray(currentValue) ? getArrayValue(key, currentValue) : getTextValue(currentValue)}\n            </div>\n          )\n        })}\n      </NestedWrapper>\n      ]\n    </div>\n  )\n\n  if (isArrayParameter(type) || Array.isArray(value)) {\n    return getArrayValue(method, value)\n  }\n\n  return getTextValue(value as string)\n}\n\nconst Value = ({ type, ...props }: RenderValueProps): React.ReactElement => {\n  const explorerUrl = getExplorerInfo(props.value as string)\n  if (isAddress(type)) {\n    return <EthHashInfo hash={props.value as string} showCopyBtn explorerUrl={explorerUrl} shortenHash={4} />\n  }\n\n  return <GenericValue type={type} {...props} />\n}\n\nexport default Value\n","import { Transfer, TxConstants } from 'src/routes/safe/store/models/types/transactions.d'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { store } from 'src/store'\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport {\n  ERC20TransferDetails,\n  ERC721TransferDetails,\n  ETHTransferDetails,\n  UnknownTransferDetails,\n} from './transferDetails.d'\nimport { humanReadableValue } from 'src/logic/tokens/utils/humanReadableValue'\n\nconst isIncomingTransfer = (transfer: Transfer): boolean => {\n  // TODO: prevent using `store` here and receive `safeAddress` as a param\n  const state = store.getState()\n  const safeAddress = safeParamAddressFromStateSelector(state)\n  return sameAddress(transfer.to, safeAddress)\n}\n\nexport const extractERC20TransferDetails = (transfer: Transfer): ERC20TransferDetails => {\n  const erc20TransferDetails = {\n    tokenAddress: transfer.tokenInfo?.address || TxConstants.UNKNOWN,\n    value: humanReadableValue(transfer.value || 0, transfer.tokenInfo?.decimals),\n    name: transfer.tokenInfo?.name || transfer.tokenInfo?.symbol || TxConstants.UNKNOWN,\n    txHash: transfer.transactionHash,\n  }\n\n  if (isIncomingTransfer(transfer)) {\n    return {\n      ...erc20TransferDetails,\n      from: transfer.from,\n    }\n  }\n\n  return {\n    ...erc20TransferDetails,\n    to: transfer.to,\n  }\n}\n\nexport const extractERC721TransferDetails = (transfer: Transfer): ERC721TransferDetails => {\n  const erc721TransferDetails = {\n    tokenAddress: transfer.tokenAddress,\n    tokenId: transfer.tokenId,\n    txHash: transfer.transactionHash,\n  }\n  if (isIncomingTransfer(transfer)) {\n    return {\n      ...erc721TransferDetails,\n      from: transfer.from,\n    }\n  }\n\n  return {\n    ...erc721TransferDetails,\n    to: transfer.to,\n  }\n}\n\nexport const extractETHTransferDetails = (transfer: Transfer): ETHTransferDetails => {\n  const ethTransferDetails = {\n    value: humanReadableValue(transfer.value || 0),\n    txHash: transfer.transactionHash,\n  }\n  if (isIncomingTransfer(transfer)) {\n    return {\n      ...ethTransferDetails,\n      from: transfer.from,\n    }\n  }\n\n  return {\n    ...ethTransferDetails,\n    to: transfer.to,\n  }\n}\n\nexport const extractUnknownTransferDetails = (transfer: Transfer): UnknownTransferDetails => {\n  return {\n    value: transfer?.value || TxConstants.UNKNOWN,\n    txHash: transfer?.transactionHash || TxConstants.UNKNOWN,\n    to: transfer?.to || TxConstants.UNKNOWN,\n    from: transfer?.from || TxConstants.UNKNOWN,\n  }\n}\n","import { TransferDetails } from './transferDetails.d'\nimport {\n  DataDecoded,\n  Operation,\n  Parameter,\n  Transfer,\n  TransferType,\n} from 'src/logic/safe/store/models/types/transactions.d'\n\nimport {\n  extractERC20TransferDetails,\n  extractERC721TransferDetails,\n  extractETHTransferDetails,\n  extractUnknownTransferDetails,\n} from './transferDetails'\nimport { isMultiSendParameter } from './newTransactionHelpers'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nexport type MultiSendDetails = {\n  operation: Operation\n  to: string\n  data: DataDecoded | null\n  value: number\n}\n\nexport type MultiSendDataDecoded = {\n  txDetails?: MultiSendDetails[]\n  transfersDetails?: TransferDetails[]\n}\n\nexport const extractTransferDetails = (transfer: Transfer): TransferDetails => {\n  switch (TransferType[transfer.type]) {\n    case TransferType.ERC20_TRANSFER:\n      return extractERC20TransferDetails(transfer)\n    case TransferType.ERC721_TRANSFER:\n      return extractERC721TransferDetails(transfer)\n    case TransferType.ETHER_TRANSFER:\n      return extractETHTransferDetails(transfer)\n    default:\n      return extractUnknownTransferDetails(transfer)\n  }\n}\n\nexport const extractMultiSendDetails = (parameter: Parameter): MultiSendDetails[] | undefined => {\n  if (isMultiSendParameter(parameter)) {\n    return parameter.valueDecoded.map((valueDecoded) => {\n      return {\n        operation: valueDecoded.operation,\n        to: valueDecoded.to,\n        value: valueDecoded.value,\n        data: valueDecoded?.dataDecoded ?? null,\n      }\n    })\n  }\n}\n\nexport const extractMultiSendDataDecoded = (tx: Transaction): MultiSendDataDecoded => {\n  const transfersDetails = tx.transfers?.map(extractTransferDetails)\n  const txDetails = tx.dataDecoded?.parameters[0] ? extractMultiSendDetails(tx.dataDecoded?.parameters[0]) : undefined\n\n  return { txDetails, transfersDetails }\n}\n","import { IconText, Text, EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport styled from 'styled-components'\n\nimport { styles } from './styles'\nimport Value from './Value'\n\nimport Block from 'src/components/layout/Block'\nimport {\n  extractMultiSendDataDecoded,\n  MultiSendDetails,\n} from 'src/routes/safe/store/actions/transactions/utils/multiSendDecodedDetails'\nimport Bold from 'src/components/layout/Bold'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport Collapse from 'src/components/Collapse'\nimport { useSelector } from 'react-redux'\nimport { getNameFromAddressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport LinkWithRef from 'src/components/layout/Link'\nimport { shortVersionOf } from 'src/logic/wallets/ethAddresses'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\nimport { DataDecoded } from 'src/routes/safe/store/models/types/transactions.d'\nimport DividerLine from 'src/components/DividerLine'\nimport { isArrayParameter } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\n\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\n\nexport const TRANSACTIONS_DESC_CUSTOM_VALUE_TEST_ID = 'tx-description-custom-value'\nexport const TRANSACTIONS_DESC_CUSTOM_DATA_TEST_ID = 'tx-description-custom-data'\nexport const TRANSACTION_DESC_ACTION_TEST_ID = 'tx-description-action-data'\n\nconst useStyles = makeStyles(styles)\n\nconst TxDetailsMethodName = styled(Text)`\n  text-indent: 4px;\n`\nconst TxDetailsMethodParam = styled.div<{ isArrayParameter: boolean }>`\n  padding-left: 8px;\n  display: ${({ isArrayParameter }) => (isArrayParameter ? 'block' : 'flex')};\n  align-items: center;\n\n  p:first-of-type {\n    margin-right: ${({ isArrayParameter }) => (isArrayParameter ? '0' : '4px')};\n  }\n`\nconst TxDetailsContent = styled.div`\n  padding: 8px 8px 8px 16px;\n`\n\nconst TxInfo = styled.div`\n  padding: 8px 8px 8px 16px;\n`\n\nconst StyledMethodName = styled(Text)`\n  white-space: nowrap;\n`\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst TxInfoDetails = ({ data }: { data: DataDecoded }): React.ReactElement => (\n  <TxInfo>\n    <TxDetailsMethodName size=\"lg\" strong>\n      {data.method}\n    </TxDetailsMethodName>\n\n    {data.parameters.map((param, index) => (\n      <TxDetailsMethodParam key={`${data.method}_param-${index}`} isArrayParameter={isArrayParameter(param.type)}>\n        <StyledMethodName size=\"lg\" strong>\n          {param.name}({param.type}):\n        </StyledMethodName>\n        <Value method={data.method} type={param.type} value={param.value} />\n      </TxDetailsMethodParam>\n    ))}\n  </TxInfo>\n)\n\nconst MultiSendCustomDataAction = ({ tx, order }: { tx: MultiSendDetails; order: number }): React.ReactElement => {\n  const classes = useStyles()\n  const methodName = tx.data?.method ? ` (${tx.data.method})` : ''\n  const explorerUrl = getExplorerInfo(tx.to)\n  return (\n    <Collapse\n      collapseClassName={classes.collapse}\n      headerWrapperClassName={classes.collapseHeaderWrapper}\n      title={<IconText iconSize=\"sm\" iconType=\"code\" text={`Action ${order + 1}${methodName}`} textSize=\"lg\" />}\n    >\n      <TxDetailsContent>\n        <TxInfo>\n          <Bold>\n            Send {fromTokenUnit(tx.value, nativeCoin.decimals)} {nativeCoin.name} to:\n          </Bold>\n          <EthHashInfo hash={tx.to} showIdenticon showCopyBtn explorerUrl={explorerUrl} />\n        </TxInfo>\n\n        {!!tx.data && <TxInfoDetails data={tx.data} />}\n      </TxDetailsContent>\n    </Collapse>\n  )\n}\n\nconst MultiSendCustomData = ({ txDetails }: { txDetails: MultiSendDetails[] }): React.ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <Block className={classes.multiSendTxData} data-testid={TRANSACTIONS_DESC_CUSTOM_DATA_TEST_ID}>\n      {txDetails.map((tx, index) => (\n        <MultiSendCustomDataAction key={`${tx.to}-row-${index}`} tx={tx} order={index} />\n      ))}\n    </Block>\n  )\n}\n\nconst TxData = ({ data }: { data: string }): React.ReactElement => {\n  const classes = useStyles()\n  const [showTxData, setShowTxData] = React.useState(false)\n  const showExpandBtn = data.length > 20\n\n  return (\n    <Paragraph className={classes.txDataParagraph} noMargin size=\"md\">\n      {showExpandBtn ? (\n        <>\n          {showTxData ? (\n            <>\n              {data}{' '}\n              <LinkWithRef\n                aria-label=\"Hide details of the transaction\"\n                className={classes.linkTxData}\n                onClick={() => setShowTxData(false)}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Show Less\n              </LinkWithRef>\n            </>\n          ) : (\n            <>\n              {shortVersionOf(data, 20)}{' '}\n              <LinkWithRef\n                aria-label=\"Show details of the transaction\"\n                className={classes.linkTxData}\n                onClick={() => setShowTxData(true)}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Show More\n              </LinkWithRef>\n            </>\n          )}\n        </>\n      ) : (\n        data\n      )}\n    </Paragraph>\n  )\n}\n\nconst TxActionData = ({ dataDecoded }: { dataDecoded: DataDecoded }): React.ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <DividerLine withArrow={false} />\n\n      <Block className={classes.txData} data-testid={TRANSACTION_DESC_ACTION_TEST_ID}>\n        <Bold>Action</Bold>\n        <TxInfoDetails data={dataDecoded} />\n      </Block>\n\n      <DividerLine withArrow={false} />\n    </>\n  )\n}\n\ninterface GenericCustomDataProps {\n  amount?: string\n  data: string\n  recipient: string\n  storedTx: Transaction\n}\n\nconst GenericCustomData = ({ amount = '0', data, recipient, storedTx }: GenericCustomDataProps): React.ReactElement => {\n  const classes = useStyles()\n  const recipientName = useSelector((state) => getNameFromAddressBookSelector(state, recipient))\n  const explorerUrl = getExplorerInfo(recipient)\n  return (\n    <Block>\n      <Block data-testid={TRANSACTIONS_DESC_CUSTOM_VALUE_TEST_ID}>\n        <Bold>Send {amount} to:</Bold>\n\n        <EthHashInfo\n          hash={recipient}\n          name={recipientName === 'UNKNOWN' ? undefined : recipientName}\n          showIdenticon\n          showCopyBtn\n          explorerUrl={explorerUrl}\n        />\n      </Block>\n\n      {!!storedTx?.dataDecoded && <TxActionData dataDecoded={storedTx.dataDecoded} />}\n\n      <Block className={classes.txData} data-testid={TRANSACTIONS_DESC_CUSTOM_DATA_TEST_ID}>\n        <Bold>Data (hex encoded):</Bold>\n        <TxData data={data} />\n      </Block>\n    </Block>\n  )\n}\n\ninterface CustomDescriptionProps {\n  amount?: string\n  data: string\n  recipient: string\n  storedTx: Transaction\n}\n\nconst CustomDescription = ({ amount, data, recipient, storedTx }: CustomDescriptionProps): React.ReactElement => {\n  const txDetails = (storedTx.multiSendTx && extractMultiSendDataDecoded(storedTx).txDetails) ?? undefined\n\n  return txDetails ? (\n    <MultiSendCustomData txDetails={txDetails} />\n  ) : (\n    <GenericCustomData amount={amount} data={data} recipient={recipient} storedTx={storedTx} />\n  )\n}\n\nexport default CustomDescription\n","import {\n  EthereumTransaction,\n  ModuleTransaction,\n  MultiSendMethodParameter,\n  MultiSigTransaction,\n  Parameter,\n  Transaction,\n  TxType,\n} from 'src/routes/safe/store/models/types/transactions.d'\n\nexport const isMultiSigTx = (tx: Transaction): tx is MultiSigTransaction => {\n  return TxType[tx.txType] === TxType.MULTISIG_TRANSACTION\n}\n\nexport const isModuleTx = (tx: Transaction): tx is ModuleTransaction => {\n  return TxType[tx.txType] === TxType.MODULE_TRANSACTION\n}\n\nexport const isEthereumTx = (tx: Transaction): tx is EthereumTransaction => {\n  return TxType[tx.txType] === TxType.ETHEREUM_TRANSACTION\n}\n\nexport const isMultiSendParameter = (parameter: Parameter): parameter is MultiSendMethodParameter => {\n  return !!(parameter as MultiSendMethodParameter)?.valueDecoded\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { EtherscanLink } from 'src/components/EtherscanLink'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport { getNameFromAddressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport OwnerAddressTableCell from 'src/routes/safe/components/Settings/ManageOwners/OwnerAddressTableCell'\n\nimport { TRANSACTIONS_DESC_SEND_TEST_ID } from './index'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\n\ninterface TransferDescriptionProps {\n  amountWithSymbol: string\n  recipient: string\n  tokenAddress?: string\n  rawAmount?: string\n  isTokenTransfer: boolean\n}\n\nconst TransferDescription = ({\n  amountWithSymbol = '',\n  recipient,\n  tokenAddress,\n  rawAmount,\n  isTokenTransfer,\n}: TransferDescriptionProps): React.ReactElement => {\n  const recipientName = useSelector((state) => getNameFromAddressBookSelector(state, recipient))\n  const [sendModalOpen, setSendModalOpen] = React.useState(false)\n\n  const sendModalOpenHandler = () => {\n    setSendModalOpen(true)\n  }\n\n  return (\n    <>\n      <Block data-testid={TRANSACTIONS_DESC_SEND_TEST_ID}>\n        <Bold>Send {amountWithSymbol} to:</Bold>\n        {recipientName ? (\n          <OwnerAddressTableCell\n            address={recipient}\n            knownAddress\n            showLinks\n            userName={recipientName}\n            sendModalOpenHandler={isTokenTransfer ? sendModalOpenHandler : undefined}\n          />\n        ) : (\n          <EtherscanLink\n            knownAddress={false}\n            value={recipient}\n            sendModalOpenHandler={isTokenTransfer ? sendModalOpenHandler : undefined}\n          />\n        )}\n      </Block>\n      <SendModal\n        activeScreenType=\"sendFunds\"\n        isOpen={sendModalOpen}\n        onClose={() => setSendModalOpen(false)}\n        recipientAddress={recipient}\n        selectedToken={tokenAddress}\n        tokenAmount={rawAmount}\n      />\n    </>\n  )\n}\n\nexport default TransferDescription\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { styles } from './styles'\nimport { getTxData } from './utils'\nimport SettingsDescription from './SettingsDescription'\nimport CustomDescription from './CustomDescription'\nimport TransferDescription from './TransferDescription'\n\nimport { getRawTxAmount, getTxAmount } from 'src/routes/safe/components/Transactions/TxsTable/columns'\nimport Block from 'src/components/layout/Block'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nexport const TRANSACTIONS_DESC_SEND_TEST_ID = 'tx-description-send'\n\nconst useStyles = makeStyles(styles)\n\nconst TxDescription = ({ tx }: { tx: Transaction }): React.ReactElement => {\n  const classes = useStyles()\n  const {\n    action,\n    addedOwner,\n    cancellationTx,\n    creationTx,\n    customTx,\n    data,\n    modifySettingsTx,\n    module,\n    newThreshold,\n    recipient,\n    removedOwner,\n    upgradeTx,\n    tokenAddress,\n    isTokenTransfer,\n  }: any = getTxData(tx)\n\n  const amountWithSymbol = getTxAmount(tx, false)\n  const amount = getRawTxAmount(tx)\n  return (\n    <Block className={classes.txDataContainer}>\n      {modifySettingsTx && action && (\n        <SettingsDescription\n          action={action}\n          addedOwner={addedOwner}\n          newThreshold={newThreshold}\n          removedOwner={removedOwner}\n          module={module}\n        />\n      )}\n      {!upgradeTx && customTx && (\n        <CustomDescription amount={amountWithSymbol} data={data} recipient={recipient} storedTx={tx} />\n      )}\n      {upgradeTx && <div>{data}</div>}\n      {!cancellationTx && !modifySettingsTx && !customTx && !creationTx && !upgradeTx && (\n        <TransferDescription\n          amountWithSymbol={amountWithSymbol}\n          recipient={recipient}\n          tokenAddress={tokenAddress}\n          rawAmount={amount}\n          isTokenTransfer={isTokenTransfer}\n        />\n      )}\n    </Block>\n  )\n}\n\nexport default TxDescription\n","import React from 'react'\nimport { INCOMING_TX_TYPES } from 'src/logic/safe/store/models/incomingTransaction'\nimport { formatDate } from 'src/routes/safe/components/Transactions/TxsTable/columns'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\n\nexport const IncomingTx = ({ tx }) => {\n  if (!tx) {\n    return null\n  }\n\n  const isIncomingTx = !!INCOMING_TX_TYPES[tx.type]\n\n  return isIncomingTx ? (\n    <Paragraph noMargin>\n      <Bold>Created: </Bold>\n      {formatDate(tx.executionDate)}\n    </Paragraph>\n  ) : null\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nimport { formatDate } from 'src/routes/safe/components/Transactions/TxsTable/columns'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Block from 'src/components/layout/Block'\nimport { TransactionTypes } from 'src/logic/safe/store/models/types/transaction'\nimport { getExplorerInfo } from 'src/config'\n\nconst useStyles = makeStyles({\n  address: {\n    height: '20px',\n  },\n  txData: {\n    alignItems: 'center',\n    display: 'flex',\n    lineHeight: '1.6',\n  },\n  txHash: {\n    paddingRight: '3px',\n  },\n})\n\ntype Props = {\n  tx?: Transaction\n}\n\nexport const CreationTx = ({ tx }: Props): React.ReactElement | null => {\n  const classes = useStyles()\n  const isCreationTx = tx?.type === TransactionTypes.CREATION\n\n  if (!tx || !isCreationTx) {\n    return null\n  }\n  const explorerUrl = getExplorerInfo(tx.creator)\n  const scanBlockFactoryAddressUrl = getExplorerInfo(tx.factoryAddress)\n  const scanBlockMasterCopyUrl = getExplorerInfo(tx.masterCopy)\n\n  return isCreationTx ? (\n    <>\n      <Paragraph noMargin>\n        <Bold>Created: </Bold>\n        {formatDate(tx.created)}\n      </Paragraph>\n      <Block align=\"left\" className={classes.txData}>\n        <Bold className={classes.txHash}>Creator:</Bold>\n        {tx.creator ? <EthHashInfo hash={tx.creator} shortenHash={4} showCopyBtn explorerUrl={explorerUrl} /> : 'n/a'}\n      </Block>\n      <Block align=\"left\" className={classes.txData}>\n        <Bold className={classes.txHash}>Factory:</Bold>\n        {tx.factoryAddress ? (\n          <EthHashInfo hash={tx.factoryAddress} shortenHash={4} showCopyBtn explorerUrl={scanBlockFactoryAddressUrl} />\n        ) : (\n          'n/a'\n        )}\n      </Block>\n      <Block align=\"left\" className={classes.txData}>\n        <Bold className={classes.txHash}>Mastercopy:</Bold>\n        {tx.masterCopy ? (\n          <EthHashInfo hash={tx.masterCopy} shortenHash={4} showCopyBtn explorerUrl={scanBlockMasterCopyUrl} />\n        ) : (\n          'n/a'\n        )}\n      </Block>\n    </>\n  ) : null\n}\n","import React from 'react'\n\nimport { formatDate } from 'src/routes/safe/components/Transactions/TxsTable/columns'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { TransactionTypes } from 'src/logic/safe/store/models/types/transaction'\n\nexport const OutgoingTx = ({ tx }) => {\n  if (!tx) {\n    return null\n  }\n\n  const isOutgoingTx = [\n    TransactionTypes.OUTGOING,\n    TransactionTypes.UPGRADE,\n    TransactionTypes.CUSTOM,\n    TransactionTypes.SETTINGS,\n    TransactionTypes.COLLECTIBLE,\n    TransactionTypes.TOKEN,\n  ].includes(tx.type)\n\n  return isOutgoingTx ? (\n    <>\n      <Paragraph noMargin>\n        <Bold>Created: </Bold>\n        {formatDate(tx.submissionDate)}\n      </Paragraph>\n      {tx.executionDate && (\n        <Paragraph noMargin>\n          <Bold>Executed: </Bold>\n          {formatDate(tx.executionDate)}\n        </Paragraph>\n      )}\n      {tx.refundParams && (\n        <Paragraph noMargin>\n          <Bold>Refund: </Bold>\n          max. {tx.refundParams.fee} {tx.refundParams.symbol}\n        </Paragraph>\n      )}\n      {tx.operation === 1 && (\n        <Paragraph noMargin>\n          <Bold>Delegate Call</Bold>\n        </Paragraph>\n      )}\n      {tx.operation === 2 && (\n        <Paragraph noMargin>\n          <Bold>Contract Creation</Bold>\n        </Paragraph>\n      )}\n    </>\n  ) : null\n}\n","import { border, lg, md } from 'src/theme/variables'\n\nconst cssStyles = {\n  col: {\n    wordBreak: 'break-word',\n    whiteSpace: 'normal',\n  },\n  expandedTxBlock: {\n    borderBottom: `2px solid ${border}`,\n  },\n  txDataContainer: {\n    padding: `${lg} ${md}`,\n  },\n  txHash: {\n    paddingRight: '3px',\n  },\n  incomingTxBlock: {\n    borderRight: '2px solid rgb(232, 231, 230)',\n  },\n  emptyRowDataContainer: {\n    paddingTop: lg,\n    paddingLeft: md,\n    paddingBottom: md,\n    borderRight: '2px solid rgb(232, 231, 230)',\n  },\n}\n\nexport const styles = (): typeof cssStyles => cssStyles\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { EtherscanLink } from 'src/components/EtherscanLink'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport { getNameFromAddressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport OwnerAddressTableCell from 'src/routes/safe/components/Settings/ManageOwners/OwnerAddressTableCell'\nimport { getIncomingTxAmount } from 'src/routes/safe/components/Transactions/TxsTable/columns'\nimport { lg, md } from 'src/theme/variables'\n\nexport const TRANSACTIONS_DESC_INCOMING_TEST_ID = 'tx-description-incoming'\n\nconst useStyles = makeStyles({\n  txDataContainer: {\n    paddingTop: lg,\n    paddingLeft: md,\n    paddingBottom: md,\n    borderRight: '2px solid rgb(232, 231, 230)',\n  },\n})\n\nconst TransferDescription = ({ from, txFromName, value = '' }) => (\n  <Block data-testid={TRANSACTIONS_DESC_INCOMING_TEST_ID}>\n    <Bold>Received {value} from:</Bold>\n    <br />\n    {txFromName ? (\n      <OwnerAddressTableCell address={from} knownAddress showLinks userName={txFromName} />\n    ) : (\n      <EtherscanLink knownAddress={false} value={from} />\n    )}\n  </Block>\n)\n\nconst IncomingTxDescription = ({ tx }) => {\n  const classes = useStyles()\n  const txFromName = useSelector((state) => getNameFromAddressBookSelector(state, tx.from))\n  return (\n    <Block className={classes.txDataContainer}>\n      <TransferDescription from={tx.from} txFromName={txFromName} value={getIncomingTxAmount(tx, false)} />\n    </Block>\n  )\n}\n\nexport default IncomingTxDescription\n","import { makeStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport ApproveTxModal from './ApproveTxModal'\nimport OwnersColumn from './OwnersColumn'\nimport RejectTxModal from './RejectTxModal'\nimport TxDescription from './TxDescription'\nimport { IncomingTx } from './IncomingTx'\nimport { CreationTx } from './CreationTx'\nimport { OutgoingTx } from './OutgoingTx'\nimport { styles } from './style'\n\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Span from 'src/components/layout/Span'\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { INCOMING_TX_TYPES } from 'src/logic/safe/store/models/incomingTransaction'\nimport { safeNonceSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\nimport { Transaction, TransactionTypes } from 'src/logic/safe/store/models/types/transaction'\nimport IncomingTxDescription from './IncomingTxDescription'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\n\nconst useStyles = makeStyles(styles as any)\n\ninterface ExpandedTxProps {\n  cancelTx: Transaction\n  tx: Transaction\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ExpandedTx = ({ cancelTx, tx }: ExpandedTxProps): React.ReactElement => {\n  const { fromWei, toBN } = getWeb3().utils\n  const classes = useStyles()\n  const nonce = useSelector(safeNonceSelector)\n  const threshold = useSelector(safeThresholdSelector) as number\n  const [openModal, setOpenModal] = useState<'approveTx' | 'executeRejectTx' | 'rejectTx'>()\n  const openApproveModal = () => setOpenModal('approveTx')\n  const closeModal = () => setOpenModal(undefined)\n  const isIncomingTx = !!INCOMING_TX_TYPES[tx.type]\n  const isCreationTx = tx.type === TransactionTypes.CREATION\n\n  const thresholdReached = !isIncomingTx && threshold <= tx.confirmations.size\n  const canExecute = !isIncomingTx && nonce === tx.nonce\n  const cancelThresholdReached = !!cancelTx && threshold <= cancelTx.confirmations.size\n  const canExecuteCancel = nonce === tx.nonce\n\n  const openRejectModal = () => {\n    if (!!cancelTx && nonce === cancelTx.nonce) {\n      setOpenModal('executeRejectTx')\n    } else {\n      setOpenModal('rejectTx')\n    }\n  }\n\n  const explorerUrl = tx.executionTxHash ? getExplorerInfo(tx.executionTxHash) : null\n\n  return (\n    <>\n      <Block className={classes.expandedTxBlock}>\n        <Row>\n          <Col layout=\"column\" xs={6} className={classes.col}>\n            <Block className={cn(classes.txDataContainer, (isIncomingTx || isCreationTx) && classes.incomingTxBlock)}>\n              <div style={{ display: 'flex' }}>\n                <Bold className={classes.txHash}>Hash:</Bold>\n                {tx.executionTxHash ? (\n                  <EthHashInfo hash={tx.executionTxHash} shortenHash={4} showCopyBtn explorerUrl={explorerUrl} />\n                ) : (\n                  'n/a'\n                )}\n              </div>\n              {!isIncomingTx && !isCreationTx && (\n                <Paragraph noMargin>\n                  <Bold>Nonce: </Bold>\n                  <Span>{tx.nonce}</Span>\n                </Paragraph>\n              )}\n              {!isCreationTx ? (\n                <Paragraph noMargin>\n                  <Bold>Fee: </Bold>\n                  {tx.fee ? fromWei(toBN(tx.fee)) + ` ${nativeCoin.name}` : 'n/a'}\n                </Paragraph>\n              ) : null}\n              <CreationTx tx={tx} />\n              <IncomingTx tx={tx} />\n              <OutgoingTx tx={tx} />\n            </Block>\n            <Hairline />\n            {isIncomingTx && <IncomingTxDescription tx={tx} />}\n            {!isIncomingTx && !isCreationTx && <TxDescription tx={tx} />}\n            {isCreationTx && <Block className={classes.emptyRowDataContainer} />}\n          </Col>\n          {!isIncomingTx && !isCreationTx && (\n            <OwnersColumn\n              cancelThresholdReached={cancelThresholdReached}\n              cancelTx={cancelTx}\n              canExecute={canExecute}\n              canExecuteCancel={canExecuteCancel}\n              onTxConfirm={openApproveModal}\n              onTxExecute={openApproveModal}\n              onTxReject={openRejectModal}\n              thresholdReached={thresholdReached}\n              tx={tx}\n            />\n          )}\n        </Row>\n      </Block>\n      {openModal === 'approveTx' && (\n        <ApproveTxModal\n          canExecute={canExecute}\n          isOpen\n          onClose={closeModal}\n          thresholdReached={thresholdReached}\n          tx={tx}\n        />\n      )}\n      {openModal === 'rejectTx' && <RejectTxModal isOpen onClose={closeModal} tx={tx} />}\n      {openModal === 'executeRejectTx' && (\n        <ApproveTxModal\n          canExecute={canExecuteCancel}\n          isCancelTx\n          isOpen\n          onClose={closeModal}\n          thresholdReached={cancelThresholdReached}\n          tx={cancelTx}\n        />\n      )}\n    </>\n  )\n}\n\nexport default ExpandedTx\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { boldFont, disabled, error, extraSmallFontSize, lg, secondary, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    container: {\n      display: 'flex',\n      fontSize: extraSmallFontSize,\n      fontWeight: boldFont,\n      padding: sm,\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      height: lg,\n      marginTop: sm,\n      marginBottom: sm,\n      borderRadius: '3px',\n    },\n    success: {\n      backgroundColor: '#A1D2CA',\n      color: secondary,\n    },\n    cancelled: {\n      backgroundColor: 'transparent',\n      color: error,\n      border: `1px solid ${error}`,\n    },\n    failed: {\n      backgroundColor: 'transparent',\n      color: error,\n      border: `1px solid ${error}`,\n    },\n    awaiting_your_confirmation: {\n      backgroundColor: '#d4d5d3',\n      color: disabled,\n    },\n    awaiting_confirmations: {\n      backgroundColor: '#d4d5d3',\n      color: disabled,\n    },\n    awaiting_execution: {\n      backgroundColor: '#d4d5d3',\n      color: disabled,\n    },\n    pending: {\n      backgroundColor: '#fff3e2',\n      color: '#e8673c',\n    },\n    statusText: {\n      padding: '0 7px',\n    },\n  }),\n)\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport React, { ReactElement } from 'react'\n\nimport AwaitingIcon from './assets/awaiting.svg'\nimport ErrorIcon from './assets/error.svg'\nimport OkIcon from './assets/ok.svg'\nimport { useStyles } from './style'\n\nimport Block from 'src/components/layout/Block'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph/'\n\nconst statusToIcon = {\n  success: OkIcon,\n  cancelled: ErrorIcon,\n  failed: ErrorIcon,\n  awaiting_your_confirmation: AwaitingIcon,\n  awaiting_confirmations: AwaitingIcon,\n  awaiting_execution: AwaitingIcon,\n  pending: <CircularProgress size={14} />,\n} as const\n\nconst statusToLabel = {\n  success: 'Success',\n  cancelled: 'Cancelled',\n  failed: 'Failed',\n  awaiting_your_confirmation: 'Awaiting your confirmation',\n  awaiting_confirmations: 'Awaiting confirmations',\n  awaiting_execution: 'Awaiting execution',\n  pending: 'Pending',\n} as const\n\nconst statusIconStyle = {\n  height: '14px',\n  width: '14px',\n}\n\nconst Status = ({ status }: { status: keyof typeof statusToLabel }): ReactElement => {\n  const classes = useStyles()\n  const Icon: typeof statusToIcon[keyof typeof statusToIcon] = statusToIcon[status]\n\n  return (\n    <Block className={`${classes.container} ${classes[status]}`}>\n      {typeof Icon === 'object' ? Icon : <Img alt={statusToLabel[status]} src={Icon} style={statusIconStyle} />}\n      <Paragraph className={classes.statusText} noMargin data-testid={`tx-status-${statusToLabel[status]}`}>\n        {statusToLabel[status]}\n      </Paragraph>\n    </Block>\n  )\n}\n\nexport default Status\n","import { List } from 'immutable'\nimport { createSelector } from 'reselect'\n\nimport { safeIncomingTransactionsSelector, safeTransactionsSelector } from 'src/logic/safe/store/selectors'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\n\nexport const extendedTransactionsSelector = createSelector(\n  safeTransactionsSelector,\n  safeIncomingTransactionsSelector,\n  (transactions, incomingTransactions): List<Transaction> => List([...transactions, ...incomingTransactions]),\n)\n","import Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { withStyles } from '@material-ui/core/styles'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport cn from 'classnames'\nimport React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ExpandedTxComponent from './ExpandedTx'\nimport Status from './Status'\nimport { TX_TABLE_ID, TX_TABLE_RAW_CANCEL_TX_ID, TX_TABLE_RAW_TX_ID, generateColumns, getTxTableData } from './columns'\nimport { styles } from './style'\n\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport { safeCancellationTransactionsSelector } from 'src/logic/safe/store/selectors'\nimport { extendedTransactionsSelector } from 'src/logic/safe/store/selectors/transactions'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\n\nexport const TRANSACTION_ROW_TEST_ID = 'transaction-row'\n\nconst TxsTable = ({ classes }) => {\n  const [expandedTx, setExpandedTx] = useState(null)\n  const cancellationTransactions = useSelector(safeCancellationTransactionsSelector)\n  const transactions = useSelector(extendedTransactionsSelector)\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Transactions' })\n  }, [trackEvent])\n\n  const handleTxExpand = (safeTxHash) => {\n    setExpandedTx((prevTx) => (prevTx === safeTxHash ? null : safeTxHash))\n  }\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const filteredData = getTxTableData(transactions, cancellationTransactions)\n    .sort((tx1, tx2) => {\n      // First order by nonce\n      const aNonce = tx1.tx?.nonce\n      const bNonce = tx1.tx?.nonce\n      if (aNonce && bNonce) {\n        const difference = aNonce - bNonce\n        if (difference !== 0) {\n          return difference\n        }\n      }\n      // If can't be ordered by nonce, order by date\n      const aDateOrder = tx1.dateOrder\n      const bDateOrder = tx2.dateOrder\n      // Second by date\n      if (!aDateOrder || !bDateOrder) {\n        return 0\n      }\n      return aDateOrder - bDateOrder\n    })\n    .map((tx, id) => {\n      return {\n        ...tx,\n        id,\n      }\n    })\n\n  return (\n    <Block className={classes.container}>\n      <TableContainer>\n        <Table\n          columns={columns}\n          data={filteredData}\n          defaultFixed\n          defaultOrder=\"desc\"\n          defaultOrderBy={TX_TABLE_ID}\n          defaultRowsPerPage={25}\n          label=\"Transactions\"\n          size={filteredData.size}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <React.Fragment key={index}>\n                <TableRow\n                  className={cn(classes.row, expandedTx === row.tx.safeTxHash && classes.expandedRow)}\n                  data-testid={TRANSACTION_ROW_TEST_ID}\n                  onClick={() => handleTxExpand(row.tx.safeTxHash)}\n                  tabIndex={-1}\n                >\n                  {autoColumns.map((column) => (\n                    <TableCell\n                      align={column.align}\n                      className={cn(classes.cell, ['cancelled', 'failed'].includes(row.status) && classes.cancelledRow)}\n                      component=\"td\"\n                      key={column.id}\n                      style={cellWidth(column.width)}\n                    >\n                      {row[column.id]}\n                    </TableCell>\n                  ))}\n                  <TableCell component=\"td\">\n                    <Row align=\"end\" className={classes.actions}>\n                      <Status status={row.status} />\n                    </Row>\n                  </TableCell>\n                  <TableCell className={classes.expandCellStyle}>\n                    <IconButton disableRipple>\n                      {expandedTx === row.tx.safeTxHash ? <ExpandLess /> : <ExpandMore />}\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell\n                    className={classes.extendedTxContainer}\n                    colSpan={6}\n                    style={{ paddingBottom: 0, paddingTop: 0 }}\n                  >\n                    <Collapse\n                      component={() => (\n                        <ExpandedTxComponent cancelTx={row[TX_TABLE_RAW_CANCEL_TX_ID]} tx={row[TX_TABLE_RAW_TX_ID]} />\n                      )}\n                      in={expandedTx === row.tx.safeTxHash}\n                      timeout=\"auto\"\n                      unmountOnExit\n                    />\n                  </TableCell>\n                </TableRow>\n              </React.Fragment>\n            ))\n          }\n        </Table>\n      </TableContainer>\n    </Block>\n  )\n}\n\nexport default withStyles(styles as any)(TxsTable)\n","export const styles = () => ({\n  container: {\n    marginTop: '56px',\n  },\n  row: {\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: '#fff3e2',\n    },\n  },\n  expandedRow: {\n    backgroundColor: '#fff3e2',\n  },\n  cancelledRow: {\n    opacity: 0.4,\n  },\n  extendedTxContainer: {\n    padding: 0,\n    border: 0,\n    '&:last-child': {\n      padding: 0,\n    },\n    backgroundColor: '#fffaf4',\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  expandCellStyle: {\n    paddingLeft: 0,\n    paddingRight: 15,\n  },\n})\n"],"sourceRoot":""}