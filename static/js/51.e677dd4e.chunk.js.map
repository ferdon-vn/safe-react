{"version":3,"sources":["components/ScanQRModal/ScanQRWrapper/index.tsx","routes/load/components/DetailsForm/index.tsx","routes/load/components/fields.ts","routes/load/components/OwnerList/styles.ts","routes/load/components/OwnerList/index.tsx","routes/load/components/ReviewInformation/styles.ts","routes/load/components/ReviewInformation/index.tsx","routes/load/components/Layout.tsx","routes/load/container/Load.tsx"],"names":["useStyles","makeStyles","qrCodeBtn","cursor","ScanQRWrapper","handleScan","classes","useState","qrModalOpen","setQrModalOpen","closeQrModal","alt","className","height","onClick","role","src","QRIcon","testId","isOpen","onClose","onScan","value","root","display","maxWidth","marginTop","check","color","links","secondary","safeFieldsValidation","values","a","errors","web3","getWeb3","safeAddress","undefined","mustBeEthereumAddress","validateProxy","eth","getStorageAt","proxyAddressFromStorage","checksummedProxyAddress","utils","toChecksumAddress","substr","length","getSafeMasterContract","safeMaster","masterCopy","options","address","SAFE_MASTER_COPY_ADDRESS_V10","DetailsForm","form","Block","margin","Paragraph","noMargin","size","Col","xs","Field","component","TextField","name","placeholder","text","type","validate","composeValidators","required","minMaxLength","AddressInput","fieldMutator","val","mutators","setValue","inputAdornment","noErrorsOn","endAdornment","InputAdornment","position","data-testid","center","middle","href","rel","target","DetailsPage","controls","OpenPaper","styles","createStyles","details","padding","lg","borderRight","border","owners","justifyContent","ownerName","marginBottom","minWidth","screenSm","ownerAddresses","alignItems","marginLeft","sm","paddingLeft","marginRight","open","width","title","md","owner","header","disabled","fontSize","extraSmallFontSize","calculateSafeValues","threshold","initialValues","i","getOwnerAddressBy","OwnerListComponent","props","setOwners","updateInitialProps","ownersWithNames","ownersList","addressBook","useSelector","addressBookSelector","formatAddressListToAddressBookNames","useAddressBookForOwnersNames","useEffect","isCurrent","getGnosisSafeInstanceAt","gnosisSafe","methods","getOwners","call","safeOwners","getThreshold","sortedOwners","slice","sort","fetchSafe","Hairline","TableContainer","Row","map","index","key","initialValue","getOwnerNameBy","Identicon","diameter","CopyBtn","content","explorerUrl","getExplorerInfo","OwnerList","network","flexDirection","minHeight","detailsColumn","ownersColumn","textOverflow","overflow","userName","whiteSpace","user","container","ReviewComponent","userAddress","isOwner","getNumOwnersFrom","checkIfUserAddressIsAnOwner","getAccountsFrom","layout","weight","shortVersionOf","align","classNames","justify","Review","steps","buttonLabels","iconStyle","back","history","goBack","formMutators","state","field","changeValue","Layout","onLoadSafeSubmit","provider","IconButton","disableRipple","style","Heading","tag","Stepper","onSubmit","ReviewInformation","loadSafe","safeName","addSafe","buildSafe","safeProps","loadStoredSafes","storedSafes","saveSafes","Load","dispatch","useDispatch","providerNameSelector","networkSelector","userAccountSelector","addSafeHandler","safe","addOrUpdateSafe","console","error","JSON","stringify","checksumAddress","ownerNames","getNamesFrom","getOwnersFrom","url","SAFELIST_ADDRESS","push","Page","ETHEREUM_NETWORK"],"mappings":"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","file":"static/js/51.e677dd4e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport * as React from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport * as React from 'react'\nimport { FormApi } from 'final-form'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\nimport { StepperPageFormProps } from 'src/components/Stepper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  mustBeEthereumAddress,\n  noErrorsOn,\n  required,\n  composeValidators,\n  minMaxLength,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { SAFE_MASTER_COPY_ADDRESS_V10, getSafeMasterContract, validateProxy } from 'src/logic/contracts/safeContracts'\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { FIELD_LOAD_ADDRESS, FIELD_LOAD_NAME } from 'src/routes/load/components/fields'\nimport { secondary } from 'src/theme/variables'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    maxWidth: '460px',\n    marginTop: '12px',\n  },\n  check: {\n    color: '#03AE60',\n    height: '20px',\n  },\n  links: {\n    '&>a': {\n      color: secondary,\n    },\n  },\n})\n\nexport const SAFE_INSTANCE_ERROR = 'Address given is not a Safe instance'\nexport const SAFE_MASTERCOPY_ERROR = 'Address is not a Safe or mastercopy is not supported'\n\n// In case of an error here, it will be swallowed by final-form\n// So if you're experiencing any strang behaviours like freeze or hanging\n// Don't mind to check if everything is OK inside this function :)\nexport const safeFieldsValidation = async (values): Promise<Record<string, string>> => {\n  const errors = {}\n  const web3 = getWeb3()\n  const safeAddress = values[FIELD_LOAD_ADDRESS]\n\n  if (!safeAddress || mustBeEthereumAddress(safeAddress) !== undefined) {\n    return errors\n  }\n\n  const isValidProxy = await validateProxy(safeAddress)\n  if (!isValidProxy) {\n    errors[FIELD_LOAD_ADDRESS] = SAFE_INSTANCE_ERROR\n    return errors\n  }\n\n  // check mastercopy\n  const proxyAddressFromStorage = await web3.eth.getStorageAt(safeAddress, 0)\n  // https://www.reddit.com/r/ethereum/comments/6l3da1/how_long_are_ethereum_addresses/\n  // ganache returns plain address\n  // rinkeby returns 0x0000000000000+{40 address charachers}\n  // address comes last so we just get last 40 charachers (1byte = 2hex chars)\n  const checksummedProxyAddress = web3.utils.toChecksumAddress(\n    `0x${proxyAddressFromStorage.substr(proxyAddressFromStorage.length - 40)}`,\n  )\n  const safeMaster = await getSafeMasterContract()\n  const masterCopy = safeMaster.options.address\n  const sameMasterCopy =\n    checksummedProxyAddress === masterCopy || checksummedProxyAddress === SAFE_MASTER_COPY_ADDRESS_V10\n  if (!sameMasterCopy) {\n    errors[FIELD_LOAD_ADDRESS] = SAFE_MASTERCOPY_ERROR\n  }\n\n  return errors\n}\n\ninterface DetailsFormProps {\n  errors: Record<string, string>\n  form: FormApi\n}\n\nconst DetailsForm = ({ errors, form }: DetailsFormProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const handleScan = (value: string, closeQrModal: () => void): void => {\n    form.mutators.setValue(FIELD_LOAD_ADDRESS, value)\n    closeQrModal()\n  }\n\n  return (\n    <>\n      <Block margin=\"md\">\n        <Paragraph color=\"primary\" noMargin size=\"md\">\n          You are about to load an existing Gnosis Safe. First, choose a name and enter the Safe address. The name is\n          only stored locally and will never be shared with Gnosis or any third parties.\n          <br />\n          Your connected wallet does not have to be the owner of this Safe. In this case, the interface will provide you\n          a read-only view.\n        </Paragraph>\n      </Block>\n      <Block className={classes.root}>\n        <Col xs={11}>\n          <Field\n            component={TextField}\n            name={FIELD_LOAD_NAME}\n            placeholder=\"Name of the Safe\"\n            text=\"Safe name\"\n            type=\"text\"\n            validate={composeValidators(required, minMaxLength(1, 50))}\n            testId=\"load-safe-name-field\"\n          />\n        </Col>\n      </Block>\n      <Block className={classes.root} margin=\"lg\">\n        <Col xs={11}>\n          <AddressInput\n            fieldMutator={(val) => {\n              form.mutators.setValue(FIELD_LOAD_ADDRESS, val)\n            }}\n            // eslint-disable-next-line\n            // @ts-ignore\n            inputAdornment={\n              noErrorsOn(FIELD_LOAD_ADDRESS, errors) && {\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <CheckCircle className={classes.check} data-testid=\"valid-address\" />\n                  </InputAdornment>\n                ),\n              }\n            }\n            name={FIELD_LOAD_ADDRESS}\n            placeholder=\"Safe Address*\"\n            text=\"Safe Address\"\n            testId=\"load-safe-address-field\"\n          />\n        </Col>\n        <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n          <ScanQRWrapper handleScan={handleScan} />\n        </Col>\n      </Block>\n      <Block margin=\"sm\">\n        <Paragraph className={classes.links} color=\"primary\" noMargin size=\"md\">\n          By continuing you consent to the{' '}\n          <a href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            terms of use\n          </a>{' '}\n          and{' '}\n          <a href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\n            privacy policy\n          </a>\n          .\n        </Paragraph>\n      </Block>\n    </>\n  )\n}\n\nconst DetailsPage = () =>\n  function LoadSafeDetails(controls: React.ReactNode, { errors, form }: StepperPageFormProps): React.ReactElement {\n    return (\n      <>\n        <OpenPaper controls={controls}>\n          <DetailsForm errors={errors} form={form} />\n        </OpenPaper>\n      </>\n    )\n  }\n\nexport default DetailsPage\n","export const FIELD_LOAD_NAME = 'name'\nexport const FIELD_LOAD_ADDRESS = 'address'\nexport const THRESHOLD = 'threshold'\n","import { border, disabled, extraSmallFontSize, lg, md, screenSm, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  details: {\n    padding: lg,\n    borderRight: `solid 1px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  ownerName: {\n    marginBottom: '15px',\n    minWidth: '100%',\n    [`@media (min-width: ${screenSm}px)`]: {\n      marginBottom: '0',\n      minWidth: '0',\n    },\n  },\n  ownerAddresses: {\n    alignItems: 'center',\n    marginLeft: `${sm}`,\n  },\n  address: {\n    paddingLeft: '6px',\n    marginRight: sm,\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  title: {\n    padding: `${md} ${lg}`,\n  },\n  owner: {\n    padding: `0 ${lg}`,\n    marginBottom: '12px',\n  },\n  header: {\n    padding: `${sm} ${lg}`,\n    color: disabled,\n    fontSize: extraSmallFontSize,\n  },\n  name: {\n    marginRight: `${sm}`,\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport React, { useEffect, useState } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, minMaxLength, required } from 'src/components/forms/validator'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\n\nimport { formatAddressListToAddressBookNames } from 'src/logic/addressBook/utils'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { FIELD_LOAD_ADDRESS, THRESHOLD } from 'src/routes/load/components/fields'\nimport { getOwnerAddressBy, getOwnerNameBy } from 'src/routes/open/components/fields'\nimport { styles } from './styles'\nimport { getExplorerInfo } from 'src/config'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst calculateSafeValues = (owners, threshold, values) => {\n  const initialValues = { ...values }\n  for (let i = 0; i < owners.length; i += 1) {\n    initialValues[getOwnerAddressBy(i)] = owners[i]\n  }\n  initialValues[THRESHOLD] = threshold\n  return initialValues\n}\n\nconst useAddressBookForOwnersNames = (ownersList: string[]): AddressBookEntry[] => {\n  const addressBook = useSelector(addressBookSelector)\n\n  return formatAddressListToAddressBookNames(addressBook, ownersList)\n}\n\nconst useStyles = makeStyles(styles)\n\nconst OwnerListComponent = (props) => {\n  const [owners, setOwners] = useState<string[]>([])\n  const classes = useStyles()\n  const { updateInitialProps, values } = props\n\n  const ownersWithNames = useAddressBookForOwnersNames(owners)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const fetchSafe = async () => {\n      const safeAddress = values[FIELD_LOAD_ADDRESS]\n      const gnosisSafe = await getGnosisSafeInstanceAt(safeAddress)\n      const safeOwners = await gnosisSafe.methods.getOwners().call()\n      const threshold = await gnosisSafe.methods.getThreshold().call()\n\n      if (isCurrent) {\n        const sortedOwners = safeOwners.slice().sort()\n        const initialValues = calculateSafeValues(sortedOwners, threshold, values)\n        updateInitialProps(initialValues)\n        setOwners(sortedOwners)\n      }\n    }\n\n    fetchSafe()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [updateInitialProps, values])\n\n  return (\n    <>\n      <Block className={classes.title}>\n        <Paragraph color=\"primary\" noMargin size=\"md\" data-testid=\"load-safe-step-two\">\n          {`This Safe has ${owners.length} owners. Optional: Provide a name for each owner.`}\n        </Paragraph>\n      </Block>\n      <Hairline />\n      <TableContainer>\n        <Row className={classes.header}>\n          <Col xs={4}>NAME</Col>\n          <Col xs={8}>ADDRESS</Col>\n        </Row>\n        <Hairline />\n        <Block margin=\"md\" padding=\"md\">\n          {ownersWithNames.map(({ address, name }, index) => {\n            const ownerName = name || `Owner #${index + 1}`\n            return (\n              <Row className={classes.owner} key={address} data-testid=\"owner-row\">\n                <Col className={classes.ownerName} xs={4}>\n                  <Field\n                    className={classes.name}\n                    component={TextField}\n                    initialValue={ownerName}\n                    name={getOwnerNameBy(index)}\n                    placeholder=\"Owner Name*\"\n                    text=\"Owner Name\"\n                    type=\"text\"\n                    validate={composeValidators(required, minMaxLength(1, 50))}\n                    testId={`load-safe-owner-name-${index}`}\n                  />\n                </Col>\n                <Col xs={8}>\n                  <Row className={classes.ownerAddresses}>\n                    <Identicon address={address} diameter={32} />\n                    <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                      {address}\n                    </Paragraph>\n                    <CopyBtn content={address} />\n                    <ExplorerButton explorerUrl={getExplorerInfo(address)} />\n                  </Row>\n                </Col>\n              </Row>\n            )\n          })}\n        </Block>\n      </TableContainer>\n    </>\n  )\n}\n\nconst OwnerList = ({ updateInitialProps }, network) =>\n  function LoadSafeOwnerList(controls, { values }): React.ReactElement {\n    return (\n      <>\n        <OpenPaper controls={controls} padding={false}>\n          <OwnerListComponent network={network} updateInitialProps={updateInitialProps} values={values} />\n        </OpenPaper>\n      </>\n    )\n  }\n\nexport default OwnerList\n","import { makeStyles } from '@material-ui/core/styles'\nimport { border, lg, screenSm, sm, xs } from 'src/theme/variables'\n\nexport const useStyles = makeStyles({\n  root: {\n    flexDirection: 'column',\n    minHeight: '300px',\n    [`@media (min-width: ${screenSm}px)`]: {\n      flexDirection: 'row',\n    },\n  },\n  detailsColumn: {\n    minWidth: '100%',\n    [`@media (min-width: ${screenSm}px)`]: {\n      minWidth: '0',\n    },\n  },\n  ownersColumn: {\n    minWidth: '100%',\n    [`@media (min-width: ${screenSm}px)`]: {\n      minWidth: '0',\n    },\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 1px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    padding: lg,\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  owner: {\n    alignItems: 'center',\n    minWidth: 'fit-content',\n    padding: sm,\n    paddingLeft: lg,\n  },\n  user: {\n    justifyContent: 'left',\n    '& > p': {\n      marginRight: sm,\n    },\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  container: {\n    marginTop: xs,\n    alignItems: 'center',\n  },\n  address: {\n    paddingLeft: '6px',\n    marginRight: sm,\n  },\n})\n","import TableContainer from '@material-ui/core/TableContainer'\nimport classNames from 'classnames'\nimport React from 'react'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport OpenPaper from 'src/components/Stepper/OpenPaper'\nimport { shortVersionOf } from 'src/logic/wallets/ethAddresses'\nimport { FIELD_LOAD_ADDRESS, FIELD_LOAD_NAME, THRESHOLD } from 'src/routes/load/components/fields'\nimport { getNumOwnersFrom, getOwnerAddressBy, getOwnerNameBy } from 'src/routes/open/components/fields'\nimport { getAccountsFrom } from 'src/routes/open/utils/safeDataExtractor'\nimport { useStyles } from './styles'\nimport { getExplorerInfo } from 'src/config'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst checkIfUserAddressIsAnOwner = (values: Record<string, string>, userAddress: string): boolean => {\n  let isOwner = false\n\n  for (let i = 0; i < getNumOwnersFrom(values); i += 1) {\n    if (values[getOwnerAddressBy(i)] === userAddress) {\n      isOwner = true\n      break\n    }\n  }\n\n  return isOwner\n}\n\ninterface Props {\n  userAddress: string\n  values: Record<string, string>\n}\n\nconst ReviewComponent = ({ userAddress, values }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const isOwner = checkIfUserAddressIsAnOwner(values, userAddress)\n  const owners = getAccountsFrom(values)\n  const safeAddress = values[FIELD_LOAD_ADDRESS]\n\n  return (\n    <>\n      <Row className={classes.root}>\n        <Col className={classes.detailsColumn} layout=\"column\" xs={4}>\n          <Block className={classes.details}>\n            <Block margin=\"lg\">\n              <Paragraph color=\"primary\" noMargin size=\"lg\" data-testid=\"load-safe-step-three\">\n                Review details\n              </Paragraph>\n            </Block>\n            <Block margin=\"lg\">\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                Name of the Safe\n              </Paragraph>\n              <Paragraph\n                className={classes.name}\n                color=\"primary\"\n                noMargin\n                size=\"lg\"\n                weight=\"bolder\"\n                data-testid=\"load-form-review-safe-name\"\n              >\n                {values[FIELD_LOAD_NAME]}\n              </Paragraph>\n            </Block>\n            <Block margin=\"lg\">\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                Safe address\n              </Paragraph>\n              <Row className={classes.container}>\n                <Identicon address={safeAddress} diameter={32} />\n                <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                  {shortVersionOf(safeAddress, 4)}\n                </Paragraph>\n                <CopyBtn content={safeAddress} />\n                <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n              </Row>\n            </Block>\n            <Block margin=\"lg\">\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                Connected wallet client is owner?\n              </Paragraph>\n              <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                {isOwner ? 'Yes' : 'No (read-only)'}\n              </Paragraph>\n            </Block>\n            <Block margin=\"lg\">\n              <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                Any transaction requires the confirmation of:\n              </Paragraph>\n              <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                {`${values[THRESHOLD]} out of ${getNumOwnersFrom(values)} owners`}\n              </Paragraph>\n            </Block>\n          </Block>\n        </Col>\n        <Col className={classes.ownersColumn} layout=\"column\" xs={8}>\n          <TableContainer>\n            <Block className={classes.owners}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${getNumOwnersFrom(values)} Safe owners`}\n              </Paragraph>\n            </Block>\n            <Hairline />\n            {owners.map((address, index) => (\n              <>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={1}>\n                    <Identicon address={address} diameter={32} />\n                  </Col>\n                  <Col xs={11}>\n                    <Block className={classNames(classes.name, classes.userName)}>\n                      <Paragraph noMargin size=\"lg\" data-testid=\"load-safe-review-owner-name\">\n                        {values[getOwnerNameBy(index)]}\n                      </Paragraph>\n                      <Block className={classes.user} justify=\"center\">\n                        <Paragraph color=\"disabled\" noMargin size=\"md\">\n                          {address}\n                        </Paragraph>\n                        <CopyBtn content={address} />\n                        <ExplorerButton explorerUrl={getExplorerInfo(address)} />\n                      </Block>\n                    </Block>\n                  </Col>\n                </Row>\n                {index !== owners.length - 1 && <Hairline />}\n              </>\n            ))}\n          </TableContainer>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst Review = ({ userAddress }: { userAddress: string }) =>\n  function ReviewPage(controls: React.ReactNode, { values }: { values: Record<string, string> }): React.ReactElement {\n    return (\n      <>\n        <OpenPaper controls={controls} padding={false}>\n          <ReviewComponent userAddress={userAddress} values={values} />\n        </OpenPaper>\n      </>\n    )\n  }\n\nexport default Review\n","import IconButton from '@material-ui/core/IconButton'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport * as React from 'react'\n\nimport Stepper, { StepperPage } from 'src/components/Stepper'\nimport Block from 'src/components/layout/Block'\nimport Heading from 'src/components/layout/Heading'\nimport Row from 'src/components/layout/Row'\nimport DetailsForm, { safeFieldsValidation } from 'src/routes/load/components/DetailsForm'\nimport OwnerList from 'src/routes/load/components/OwnerList'\nimport ReviewInformation from 'src/routes/load/components/ReviewInformation'\n\nimport { history } from 'src/store'\nimport { secondary, sm } from 'src/theme/variables'\nimport { LoadFormValues } from '../container/Load'\n\nconst steps = ['Name and address', 'Owners', 'Review']\nconst buttonLabels = ['Next', 'Review', 'Load']\n\nconst iconStyle = {\n  color: secondary,\n  padding: sm,\n  marginRight: '5px',\n}\n\nconst back = () => {\n  history.goBack()\n}\n\nconst formMutators = {\n  setValue: ([field, value], state, { changeValue }) => {\n    changeValue(state, field, () => value)\n  },\n}\n\ninterface LayoutProps {\n  network: string\n  provider?: string\n  userAddress: string\n  onLoadSafeSubmit: (values: LoadFormValues) => void\n}\n\nconst Layout = ({ network, onLoadSafeSubmit, provider, userAddress }: LayoutProps): React.ReactElement => (\n  <>\n    {provider ? (\n      <Block>\n        <Row align=\"center\">\n          <IconButton disableRipple onClick={back} style={iconStyle}>\n            <ChevronLeft />\n          </IconButton>\n          <Heading tag=\"h2\">Load existing Safe</Heading>\n        </Row>\n        <Stepper<LoadFormValues>\n          buttonLabels={buttonLabels}\n          mutators={formMutators}\n          onSubmit={onLoadSafeSubmit}\n          steps={steps}\n          testId=\"load-safe-form\"\n        >\n          <StepperPage validate={safeFieldsValidation} component={DetailsForm} />\n          <StepperPage network={network} component={OwnerList} />\n          <StepperPage network={network} userAddress={userAddress} component={ReviewInformation} />\n        </Stepper>\n      </Block>\n    ) : (\n      <div>No account detected</div>\n    )}\n  </>\n)\n\nexport default Layout\n","import * as React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ETHEREUM_NETWORK } from 'src/config/networks/network.d'\n\nimport Layout from 'src/routes/load/components/Layout'\nimport { FIELD_LOAD_ADDRESS, FIELD_LOAD_NAME } from '../components/fields'\n\nimport Page from 'src/components/layout/Page'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { saveSafes, loadStoredSafes } from 'src/logic/safe/utils'\nimport { getNamesFrom, getOwnersFrom } from 'src/routes/open/utils/safeDataExtractor'\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\nimport { history } from 'src/store'\nimport { SafeOwner, SafeRecordProps } from 'src/logic/safe/store/models/safe'\nimport { List } from 'immutable'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { networkSelector, providerNameSelector, userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\n\nexport const loadSafe = async (\n  safeName: string,\n  safeAddress: string,\n  owners: List<SafeOwner>,\n  addSafe: (safe: SafeRecordProps) => void,\n): Promise<void> => {\n  const safeProps = await buildSafe(safeAddress, safeName)\n  safeProps.owners = owners\n\n  const storedSafes = (await loadStoredSafes()) || {}\n\n  storedSafes[safeAddress] = safeProps\n\n  await saveSafes(storedSafes)\n  await addSafe(safeProps)\n}\n\nexport interface LoadFormValues {\n  name: string\n  address: string\n  threshold: string\n}\n\nconst Load = (): React.ReactElement => {\n  const dispatch = useDispatch()\n  const provider = useSelector(providerNameSelector)\n  const network = useSelector(networkSelector)\n  const userAddress = useSelector(userAccountSelector)\n\n  const addSafeHandler = async (safe: SafeRecordProps) => {\n    await dispatch(addOrUpdateSafe(safe))\n  }\n  const onLoadSafeSubmit = async (values: LoadFormValues) => {\n    let safeAddress = values[FIELD_LOAD_ADDRESS]\n    // TODO: review this check. It doesn't seems to be necessary at this point\n    if (!safeAddress) {\n      console.error('failed to load Safe address', JSON.stringify(values))\n      return\n    }\n\n    try {\n      const safeName = values[FIELD_LOAD_NAME]\n      safeAddress = checksumAddress(safeAddress)\n      const ownerNames = getNamesFrom(values)\n\n      const gnosisSafe = getGnosisSafeInstanceAt(safeAddress)\n      const ownerAddresses = await gnosisSafe.methods.getOwners().call()\n      const owners = getOwnersFrom(ownerNames, ownerAddresses.slice().sort())\n\n      await loadSafe(safeName, safeAddress, owners, addSafeHandler)\n\n      const url = `${SAFELIST_ADDRESS}/${safeAddress}/balances`\n      history.push(url)\n    } catch (error) {\n      console.error('Error while loading the Safe', error)\n    }\n  }\n\n  return (\n    <Page>\n      <Layout\n        onLoadSafeSubmit={onLoadSafeSubmit}\n        network={ETHEREUM_NETWORK[network]}\n        userAddress={userAddress}\n        provider={provider}\n      />\n    </Page>\n  )\n}\n\nexport default Load\n"],"sourceRoot":""}