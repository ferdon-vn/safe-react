{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ReviewCollectible/style.ts","routes/safe/components/Balances/SendModal/screens/ReviewCollectible/index.tsx","components/layout/Bold/index.tsx","components/AddressInfo/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/utils/setCollectibleImageToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg"],"names":["styles","createStyles","heading","padding","md","lg","justifyContent","boxSizing","maxHeight","annotation","letterSpacing","color","secondaryText","marginRight","marginLeft","headingText","fontSize","closeIcon","height","width","container","amount","sm","address","buttonRow","fontFamily","submitButton","boxShadow","nativeCoin","getNetworkInfo","useStyles","makeStyles","ReviewCollectible","onClose","onPrev","tx","classes","shortener","textShortener","dispatch","useDispatch","safeAddress","useSelector","safeSelector","nftTokens","nftTokensSelector","useState","gasCosts","setGasCosts","txToken","find","assetAddress","tokenId","nftTokenId","data","setData","useEffect","isCurrent","a","generateERC721TransferTxData","txData","estimateTxGasCosts","recipientAddress","estimatedGasCosts","fromTokenUnit","decimals","formattedGasCosts","formatAmount","console","error","estimateGas","submitTx","createTransaction","to","valueInWei","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","Row","align","className","grow","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","Block","SafeInfo","margin","Col","xs","alt","src","ArrowDown","style","center","layout","size","Identicon","diameter","justify","CopyBtn","content","explorerUrl","getExplorerInfo","charsStart","charsEnd","assetName","Img","name","onError","setImageToPlaceholder","image","position","bottom","Button","minWidth","data-testid","disabled","type","variant","Bold","this","props","children","React","Wrapper","styled","div","StyledBlock","border","AddressInfo","ethBalance","safeName","symbol","currentTarget","onerror","TokenPlaceholder","setCollectibleImageToPlaceholder","NFTIcon","module","exports"],"mappings":"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","file":"static/js/41.d0d0740a.chunk.js","sourcesContent":["import { lg, md, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  container: {\n    padding: `${md} ${lg}`,\n  },\n  amount: {\n    marginLeft: sm,\n  },\n  address: {\n    marginRight: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    '& > button': {\n      fontFamily: 'Averta',\n      fontSize: md,\n    },\n  },\n  submitButton: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginLeft: '15px',\n  },\n})\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\n\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { nftTokensSelector } from 'src/logic/collectibles/store/selectors'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { sm } from 'src/theme/variables'\nimport { textShortener } from 'src/utils/strings'\nimport { generateERC721TransferTxData } from 'src/logic/collectibles/utils'\n\nimport ArrowDown from '../assets/arrow-down.svg'\n\nimport { styles } from './style'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst useStyles = makeStyles(styles)\n\nexport type CollectibleTx = {\n  recipientAddress: string\n  assetAddress: string\n  assetName: string\n  nftTokenId: string\n}\n\ntype Props = {\n  onClose: () => void\n  onPrev: () => void\n  tx: CollectibleTx\n}\n\nconst ReviewCollectible = ({ onClose, onPrev, tx }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const shortener = textShortener()\n  const dispatch = useDispatch()\n  const { address: safeAddress } = useSelector(safeSelector) || {}\n  const nftTokens = useSelector(nftTokensSelector)\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const txToken = nftTokens.find(\n    ({ assetAddress, tokenId }) => assetAddress === tx.assetAddress && tokenId === tx.nftTokenId,\n  )\n  const [data, setData] = useState('')\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const estimateGas = async () => {\n      try {\n        const txData = await generateERC721TransferTxData(tx, safeAddress)\n        const estimatedGasCosts = await estimateTxGasCosts(safeAddress ?? '', tx.recipientAddress, txData)\n        const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n        const formattedGasCosts = formatAmount(gasCosts)\n\n        if (isCurrent) {\n          setGasCosts(formattedGasCosts)\n          setData(txData)\n        }\n      } catch (error) {\n        console.error('Error while calculating estimated gas:', error)\n      }\n    }\n\n    estimateGas()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, tx])\n\n  const submitTx = async () => {\n    try {\n      if (safeAddress) {\n        dispatch(\n          createTransaction({\n            safeAddress,\n            to: tx.assetAddress,\n            valueInWei: '0',\n            txData: data,\n            notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n          }),\n        )\n      } else {\n        console.error('There was an error trying to submit the transaction, the safeAddress was not found')\n      }\n    } catch (error) {\n      console.error('Error creating sendCollectible Tx:', error)\n    } finally {\n      onClose()\n    }\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n          Send Funds\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <SafeInfo />\n        <Row margin=\"md\">\n          <Col xs={1}>\n            <img alt=\"Arrow Down\" src={ArrowDown} style={{ marginLeft: sm }} />\n          </Col>\n          <Col center=\"xs\" layout=\"column\" xs={11}>\n            <Hairline />\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Recipient\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Col xs={1}>\n            <Identicon address={tx.recipientAddress} diameter={32} />\n          </Col>\n          <Col layout=\"column\" xs={11}>\n            <Block justify=\"left\">\n              <Paragraph className={classes.address} noMargin weight=\"bolder\">\n                {tx.recipientAddress}\n              </Paragraph>\n              <CopyBtn content={tx.recipientAddress} />\n              <ExplorerButton explorerUrl={getExplorerInfo(tx.recipientAddress)} />\n            </Block>\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            {textShortener({ charsStart: 40, charsEnd: 0 })(tx.assetName)}\n          </Paragraph>\n        </Row>\n        {txToken && (\n          <Row align=\"center\" margin=\"md\">\n            <Img alt={txToken.name} height={28} onError={setImageToPlaceholder} src={txToken.image} />\n            <Paragraph className={classes.amount} noMargin size=\"md\">\n              {shortener(txToken.name)} (Token ID: {shortener(txToken.tokenId as string)})\n            </Paragraph>\n          </Row>\n        )}\n        <Row>\n          <Paragraph>\n            {`You're about to create a transaction and will have to confirm it with your currently connected wallet. Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n          </Paragraph>\n        </Row>\n      </Block>\n      <Hairline style={{ position: 'absolute', bottom: 85 }} />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minWidth={140} onClick={onPrev}>\n          Back\n        </Button>\n        <Button\n          className={classes.submitButton}\n          color=\"primary\"\n          data-testid=\"submit-tx-btn\"\n          disabled={!data}\n          minWidth={140}\n          onClick={submitTx}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default ReviewCollectible\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = TokenPlaceholder\n}\n","import { SyntheticEvent } from 'react'\n\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\n\nexport const setCollectibleImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = NFTIcon\n}\n","module.exports = __webpack_public_path__ + \"static/media/token_placeholder.a8034531.svg\";","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport AddressInfo from 'src/components/AddressInfo'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\n\nconst SafeInfo = () => {\n  const { address: safeAddress = '', ethBalance, name: safeName } = useSelector(safeSelector) || {}\n  return <AddressInfo ethBalance={ethBalance} safeAddress={safeAddress} safeName={safeName} />\n}\n\nexport default SafeInfo\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";"],"sourceRoot":""}