{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","assets/icons/qrcode.svg","logic/safe/transactions/gas.ts","components/ScanQRModal/style.ts","components/ScanQRModal/utils.ts","components/ScanQRModal/index.tsx","logic/contracts/methodIds.ts","logic/safe/store/actions/createTransaction.ts","components/ScanQRModal/ScanQRWrapper/index.tsx","components/Table/TableHead.tsx","components/forms/SelectField/index.tsx","components/forms/AddressInput/index.tsx","components/Table/index.tsx","components/EtherscanLink/style.ts","routes/safe/components/AddressBook/EllipsisTransactionDetails/index.tsx","components/EtherscanLink/index.tsx","routes/safe/store/models/types/transactions.d.ts","components/layout/Span/index.tsx","logic/hooks/useWindowDimensions.tsx","routes/safe/components/Settings/ManageOwners/OwnerAddressTableCell/index.tsx","logic/safe/safeTxSigner.ts","logic/safe/store/actions/transactions/pendingTransactions.ts","logic/safe/store/actions/utils.ts","test/utils/ethereumErrors.ts","routes/safe/components/Settings/assets/icons/bin.svg","routes/safe/components/Settings/ManageOwners/assets/icons/rename-owner.svg","routes/safe/components/Settings/ManageOwners/assets/icons/replace-owner.svg","routes/safe/components/Settings/Advanced/style.ts","routes/safe/components/Settings/Advanced/RemoveModuleModal.tsx","routes/safe/components/Settings/Advanced/ModulesTable.tsx","routes/safe/components/Settings/Advanced/dataFetcher.ts","routes/safe/components/Settings/Advanced/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/RemoveSafeModal/style.ts","routes/safe/components/Settings/RemoveSafeModal/index.tsx","routes/safe/components/Settings/SafeDetails/style.ts","logic/safe/utils/upgradeSafe.ts","routes/safe/components/Settings/UpdateSafeModal/index.tsx","routes/safe/components/Settings/UpdateSafeModal/style.ts","routes/safe/components/Settings/SafeDetails/index.tsx","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/index.tsx","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/style.ts","routes/safe/components/Settings/ThresholdSettings/style.ts","routes/safe/components/Settings/ThresholdSettings/index.tsx","routes/safe/components/Settings/style.ts","routes/safe/components/Settings/index.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","TextField","this","classes","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","root","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","React","PureComponent","withStyles","paddingTop","lg","paddingBottom","lineHeight","stylesBasedOn","padding","flexDirection","flex","GnoForm","children","decorators","formMutators","initialValues","onSubmit","subscription","validation","mutators","render","handleSubmit","data-testid","submitting","validating","form","validate","module","exports","estimateDataGasCosts","data","match","reduce","accumulator","currentValue","EMPTY_DATA","estimateTxGasCosts","safeAddress","to","tx","preApprovingOwner","a","web3","getWeb3","getAccountFrom","from","safeInstance","eth","Contract","GnosisSafeSol","abi","methods","nonce","call","getThreshold","threshold","confirmations","size","Number","signatures","generateSignaturesFromTxConfirmations","replace","execTransaction","CALL","safeTxGas","ZERO_ADDRESS","encodeABI","txData","getTransactionHash","txHash","approveHash","calculateGasOf","gas","calculateGasPrice","gasPrice","parseInt","console","getDataFromNodeErrorMessage","split","errorAsJSON","JSON","parse","join","originalError","getGasEstimationTxResponse","txConfig","result","sameString","BigNumber","substring","toNumber","estimationData","message","Error","calculateMinimumGasForTransaction","additionalGasBatches","estimateData","txGasEstimation","dataGasEstimation","additionalGas","amountOfGasToTryTx","log","estimateSafeTxGas","safe","valueInWei","operation","getGnosisSafeInstanceAt","requiredTxGas","gasEstimationResponse","styles","createStyles","heading","justifyContent","maxHeight","boxSizing","loaderContainer","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","navigatorCp","navigator","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","useState","useWebcam","setUseWebcam","fileUploadModalOpen","setFileUploadModalOpen","setError","scannerRef","openImageDialog","current","useEffect","success","err","video","onFileScannedResolve","successData","Modal","description","handleClose","open","title","Row","align","grow","Paragraph","noMargin","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","justify","CircularProgress","legacyMode","onError","ref","Button","minWidth","variant","decodeMethods","length","slice","methodId","params","METHOD_TO_ID","isSafeMethod","decodedParameters","decodeParameters","method","parameters","type","decodeParamsFromSafeMethod","createTransaction","onUserConfirm","notifiedTransaction","txNonce","navigateToTransactionsTab","origin","safeTxGasArg","dispatch","getState","state","push","SAFELIST_ADDRESS","onboardUser","providerSelector","account","hardwareWallet","smartContractWallet","getLastTx","lastTx","getNewTxNonce","toString","shouldExecuteTransaction","isExecution","getCurrentSafeVersion","safeVersion","sigs","notificationsQueue","getNotificationsFromTxType","beforeExecutionKey","enqueueSnackbar","beforeExecution","txArgs","baseGas","gasToken","refundReceiver","sender","safeTxHash","generateSafeTxHash","semverSatisfies","SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES","tryOffchainSigning","signature","closeSnackbarAction","key","afterExecution","moreConfirmationsNeeded","fetchTransactions","saveTxToHistory","getExecutionTransaction","getApprovalTransaction","sendParams","txToMock","dataDecoded","submissionDate","Date","toISOString","mockTransaction","mockedTx","send","once","hash","pendingExecutionKey","pendingExecution","Promise","all","storeSignedTx","transaction","removeTxFromStore","on","then","receipt","noMoreConfirmationsNeeded","storeExecutedTx","transactionHash","errorMsg","afterExecutionError","executeDataUsedSignatures","getErrorMessage","options","address","errMsg","qrCodeBtn","cursor","ScanQRWrapper","handleScan","qrModalOpen","setQrModalOpen","closeQrModal","alt","role","src","QRIcon","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","columns","order","orderBy","map","column","id","disablePadding","sortDirection","static","label","direction","SelectInput","disableError","formControlProps","renderValue","dirtySinceLastSubmit","htmlFor","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","component","composeValidators","required","mustBeEthereumAddress","trimSpaces","isValidEnsName","getAddressFromENS","resolverAddr","formattedAddress","checksumAddress","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","xxl","white","paginationRoot","marginBottom","xl","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","orderProp","defaultOrder","newOrder","setState","fixed","getEmptyStyle","emptyRows","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","target","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","sortedData","stableSort","getSorting","Math","min","isEmpty","aria-labelledby","backIconButtonProps","count","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","etherscanLink","fill","flexShrink","textOverflow","whiteSpace","addressParagraph","fontSize","margin","firstButton","container","xs","borderRadius","transition","outline","increasedPopperZindex","zIndex","EllipsisTransactionDetails","knownAddress","sendModalOpenHandler","anchorEl","setAnchorEl","useDispatch","currentSafeAddress","useSelector","safeParamAddressFromStateSelector","handleClick","event","currentTarget","closeMenuHandler","addOrEditEntryHandler","ClickAwayListener","onClickAway","tabIndex","onKeyDown","Menu","keepMounted","Boolean","MenuItem","Divider","EtherscanLink","cut","cn","Span","shortVersionOf","CopyBtn","content","explorerUrl","getExplorerInfo","TxConstants","Operation","TransferMethods","SettingsChangeMethods","ConfirmationType","SignatureType","TokenType","TransferType","TxType","SAFE_METHODS_NAMES","ADD_OWNER_WITH_THRESHOLD","CHANGE_THRESHOLD","REMOVE_OWNER","SWAP_OWNER","ENABLE_MODULE","DISABLE_MODULE","getWindowDimensions","window","innerWidth","innerHeight","OwnerAddressTableCell","showLinks","userName","setCut","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","Identicon","diameter","getValidAddressBookName","confirmationsMap","obj","owner","toLowerCase","Object","keys","sort","forEach","addr","conf","setTxStatusAsPending","withMutations","updateIn","isCancellationTx","previous","set","TransactionStatus","PENDING","updateTxBasedOnReceipt","blockNumber","web3ReadOnly","utils","toWei","gasUsed","status","SUCCESS","FAILED","AWAITING_CONFIRMATIONS","findIndex","sameAddress","update","makeConfirmation","prev","clear","storeTx","AWAITING_YOUR_CONFIRMATION","cancelled","CANCELLED","safeTransactions","safeTransactionsSelector","transactions","txs","txIndex","batch","addOrUpdateCancellationTransactions","Map","addOrUpdateTransactions","List","removeCancellationTransaction","removeTransaction","url","buildTxServiceUrl","axios","get","limit","response","results","isFirstTransaction","canExecuteCurrentTransaction","isExecuted","returnData","returnBuffer","Buffer","rawDecode","hide","visibility","actions","noBorderBottom","borderBottom","annotation","paddingLeft","ownersText","fontColor","position","left","bottom","borderTop","border","modifyBtn","smallFontSize","removeModuleIcon","modalHeading","modalContainer","minHeight","modalManage","modalClose","modalButtonRow","modalButtonRemove","modalName","modalUserName","modalOwner","md","modalUser","modalDescription","modalOpen","modal","FooterWrapper","styled","div","openIconStyle","secondary","RemoveModuleModal","selectedModule","explorerInfo","removeSelectedModule","getDisableModuleTxData","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","paperClassName","weight","Link","AddressText","Text","TableActionButton","ModulesTable","moduleData","addressColumn","custom","actionsColumn","generateColumns","autoColumns","filter","granted","grantedSelector","viewRemoveModuleModal","setViewRemoveModuleModal","setSelectedModule","TableContainer","Table","row","index","TableRow","columnId","rowElement","Fragment","TableCell","iconType","triggerRemoveSelectedModule","InfoText","Bold","strong","theme","colors","NoModuleLegend","LoadingModules","Advanced","modulesList","safeNonceSelector","modules","safeModulesSelector","trackEvent","useAnalytics","category","SAFE_NAVIGATION_EVENT","action","withoutMargin","href","rel","marginRight","manage","closeIcon","formContainer","setOwnerAddress","args","changeValue","OwnerForm","owners","safeOwnersAddressesListSelector","ownerDoesntExist","uniqueAddress","values","scannedAddress","startsWith","Field","minMaxLength","center","nativeCoin","getNetworkInfo","info","textAlign","details","borderRight","ownersTitle","selectedOwner","user","gasCostsContainer","onClickBack","gasCosts","setGasCosts","safeName","safeNameSelector","safeOwnersSelector","isCurrent","addOwnerWithThreshold","ownerAddress","estimatedGasCosts","fromTokenUnit","decimals","formattedGasCosts","formatAmount","estimateGas","classNames","ownerName","headingText","inputRow","errorText","safeThresholdSelector","SelectField","Array","x","mustBeInteger","minValue","maxValue","biggerModalWindow","sendAddOwner","gnosisSafe","addSafeOwner","AddOwner","activeScreen","setActiveScreen","setValues","onAddOwner","addOrUpdateAddressBookEntry","makeAddressBookEntry","newValues","stateValues","Review","buttonEdit","smallerModalWindow","EditOwnerComponent","selectedOwnerName","editSafeOwner","NOTIFICATIONS","OWNER_NAME_CHANGE_EXECUTED_MSG","initialValue","addressBook","addressBookSelector","ownersWithAddressBookName","getOwnersWithNameFromAddressBook","getOwners","safeOwners","prevAddress","SENTINEL_ADDRESS","removeOwner","ThresholdForm","defaultThreshold","numOptions","sendRemoveOwner","ownerAddressToRemove","ownerNameToRemove","removeSafeOwner","RemoveOwner","addressInput","selectedOwnerRemoved","selectedOwnerAdded","swapOwner","sendReplaceOwner","replaceSafeOwner","oldOwnerAddress","ReplaceOwner","onReplaceOwner","checksumAddr","editOwnerIcon","replaceOwnerIcon","controlsRow","removeOwnerIcon","ManageOwners","selectedOwnerAddress","setSelectedOwnerAddress","setSelectedOwnerName","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","prevState","onHide","nameColumn","c","ownerData","getOwnerData","Heading","tag","Img","RenameOwnerIcon","ReplaceOwnerIcon","RemoveOwnerIcon","end","AddOwnerModal","RemoveOwnerModal","ReplaceOwnerModal","EditOwnerModal","buttonRemove","RemoveSafeModal","removeSafe","location","saveBtn","fontWeight","boldFont","versionNumber","link","connected","textDecoration","getEncodedMultiSendCallData","constant","payable","stateMutability","inputs","outputs","MULTI_SEND_ADDRESS","multiSend","encodeParameter","hexToBytes","upgradeSafeToLatestVersion","fallbackHandlerTxData","setFallbackHandler","DEFAULT_FALLBACK_HANDLER_ADDRESS","updateSafeTxData","changeMasterCopy","SAFE_MASTER_COPY_ADDRESS","encodeMultiSendCallData","closeSnackbar","DELEGATE_CALL","letterSpacing","modalContent","bindActionCreators","SafeDetails","isUserOwner","latestMasterContractVersion","latestMasterContractVersionSelector","safeNeedsUpdate","safeNeedsUpdateSelector","safeCurrentVersion","safeCurrentVersionSelector","isModalOpen","setModalOpen","toggleModal","prevOpen","handleUpdateSafe","updateSafe","notification","SAFE_NAME_CHANGE_TX","enhanceSnackbarForAction","onChangeThreshold","changeThreshold","gasCostsAsEth","estimateGasCosts","newThreshold","differentFrom","ThresholdSettings","screenSm","settings","menuWrapper","flexGrow","menu","menuOption","largeFontSize","bolderFont","contents","hairline","links","removeSafeBtn","marginTop","removeSafeIcon","counter","OWNERS_SETTINGS_TAB_TEST_ID","INITIAL_STATE","showRemoveSafe","menuOptionIndex","Settings","needsUpdate","handleChange","ButtonLink","RemoveSafeIcon","Badge","badgeContent","invisible","paddingRight","iconSize","textSize","Loader"],"mappings":"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","file":"static/js/25.514f609d.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import MuiTextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () => ({\n  root: {\n    paddingTop: lg,\n    paddingBottom: '12px',\n    lineHeight: 0,\n  },\n})\n\nclass TextField extends React.PureComponent<any> {\n  render() {\n    const {\n      classes,\n      input: { name, onChange, value, ...restInput },\n      inputAdornment,\n      meta,\n      multiline,\n      rows,\n      testId,\n      text,\n      ...rest\n    } = this.props\n    const helperText = value ? text : undefined\n    const showError = (meta.touched || !meta.pristine) && !meta.valid\n    const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n    const errorMessage = meta.error || meta.submitError\n    const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n    const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n    const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n    const inputRoot = helperText ? classes.root : ''\n    const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n    const inputProps = {\n      ...restInput,\n      autoComplete: 'off',\n      'data-testid': testId,\n    }\n    const inputRootProps = {\n      ...inputAdornment,\n      className: `${inputRoot} ${statusClasses}`,\n      disableUnderline: disableUnderline,\n    }\n\n    return (\n      <MuiTextField\n        error={hasError && showError}\n        helperText={hasError && showError ? errorMessage : helperText || ' '}\n        inputProps={inputProps} // blank in order to force to have helper text\n        InputProps={inputRootProps}\n        multiline={multiline}\n        name={name}\n        onChange={onChange}\n        rows={rows}\n        style={overflowStyle}\n        value={value}\n        {...rest}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles as any)(TextField)\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","module.exports = __webpack_public_path__ + \"static/media/qrcode.6dd6e2b4.svg\";","import GnosisSafeSol from '@gnosis.pm/safe-contracts/build/contracts/GnosisSafe.json'\nimport { BigNumber } from 'bignumber.js'\nimport { AbiItem } from 'web3-utils'\n\nimport { CALL } from '.'\n\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { generateSignaturesFromTxConfirmations } from 'src/logic/safe/safeTxSigner'\nimport { Transaction } from 'src/logic/safe/store/models/types/transaction'\nimport { ZERO_ADDRESS } from 'src/logic/wallets/ethAddresses'\nimport { EMPTY_DATA, calculateGasOf, calculateGasPrice } from 'src/logic/wallets/ethTransactions'\nimport { getAccountFrom, getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { GnosisSafe } from 'src/types/contracts/GnosisSafe.d'\nimport { sameString } from 'src/utils/strings'\n\nconst estimateDataGasCosts = (data: string): number => {\n  const reducer = (accumulator, currentValue) => {\n    if (currentValue === EMPTY_DATA) {\n      return accumulator + 0\n    }\n\n    if (currentValue === '00') {\n      return accumulator + 4\n    }\n\n    return accumulator + 16\n  }\n\n  return data.match(/.{2}/g)?.reduce(reducer, 0)\n}\n\nexport const estimateTxGasCosts = async (\n  safeAddress: string,\n  to: string,\n  data: string,\n  tx?: Transaction,\n  preApprovingOwner?: string,\n): Promise<number> => {\n  try {\n    const web3 = getWeb3()\n    const from = await getAccountFrom(web3)\n\n    if (!from) {\n      return 0\n    }\n\n    const safeInstance = (new web3.eth.Contract(GnosisSafeSol.abi as AbiItem[], safeAddress) as unknown) as GnosisSafe\n    const nonce = await safeInstance.methods.nonce().call()\n    const threshold = await safeInstance.methods.getThreshold().call()\n    const isExecution = tx?.confirmations.size === Number(threshold) || !!preApprovingOwner || threshold === '1'\n\n    let txData\n    if (isExecution) {\n      // https://docs.gnosis.io/safe/docs/docs5/#pre-validated-signatures\n      const signatures = tx?.confirmations\n        ? generateSignaturesFromTxConfirmations(tx.confirmations, preApprovingOwner)\n        : `0x000000000000000000000000${from.replace(\n            EMPTY_DATA,\n            '',\n          )}000000000000000000000000000000000000000000000000000000000000000001`\n      txData = await safeInstance.methods\n        .execTransaction(\n          to,\n          tx?.value || 0,\n          data,\n          CALL,\n          tx?.safeTxGas || 0,\n          0,\n          0,\n          ZERO_ADDRESS,\n          ZERO_ADDRESS,\n          signatures,\n        )\n        .encodeABI()\n    } else {\n      const txHash = await safeInstance.methods\n        .getTransactionHash(to, tx?.value || 0, data, CALL, 0, 0, 0, ZERO_ADDRESS, ZERO_ADDRESS, nonce)\n        .call({\n          from,\n        })\n      txData = await safeInstance.methods.approveHash(txHash).encodeABI()\n    }\n\n    const gas = await calculateGasOf(txData, from, safeAddress)\n    const gasPrice = await calculateGasPrice()\n\n    return gas * parseInt(gasPrice, 10)\n  } catch (err) {\n    console.error('Error while estimating transaction execution gas costs:')\n    console.error(err)\n\n    return 10000\n  }\n}\n\n// Parses the result from the error message (GETH, OpenEthereum/Parity and Nethermind) and returns the data value\nexport const getDataFromNodeErrorMessage = (errorMessage: string): string | undefined => {\n  // Extracts JSON object from the error message\n  const [, ...error] = errorMessage.split('\\n')\n  try {\n    const errorAsJSON = JSON.parse(error.join(''))\n\n    // For new GETH nodes they will return the data as error in the format:\n    // {\n    //   \"originalError\": {\n    //     \"code\": number,\n    //     \"data\": string,\n    //     \"message\": \"execution reverted: ...\"\n    //   }\n    // }\n    if (errorAsJSON.originalError && errorAsJSON.originalError.data) {\n      return errorAsJSON.originalError.data\n    }\n\n    // OpenEthereum/Parity nodes will return the data as error in the format:\n    // {\n    //     \"error\": {\n    //         \"code\": number,\n    //         \"message\": string,\n    //         \"data\": \"revert: 0x...\" -> this is the result data that should be extracted from the message\n    //      },\n    //     \"id\": number\n    // }\n    if (errorAsJSON?.data) {\n      const [, dataResult] = errorAsJSON.data.split(' ')\n      return dataResult\n    }\n  } catch (error) {\n    console.error(`Error trying to extract data from node error message: ${errorMessage}`)\n  }\n}\n\nconst getGasEstimationTxResponse = async (txConfig: {\n  to: string\n  from: string\n  data: string\n  gasPrice?: number\n  gas?: number\n}): Promise<number> => {\n  const web3 = getWeb3()\n  try {\n    const result = await web3.eth.call(txConfig)\n\n    // GETH Nodes (geth version < v1.9.24)\n    // In case that the gas is not enough we will receive an EMPTY data\n    // Otherwise we will receive the gas amount as hash data -> this is valid for old versions of GETH nodes ( < v1.9.24)\n\n    if (!sameString(result, EMPTY_DATA)) {\n      return new BigNumber(result.substring(138), 16).toNumber()\n    }\n  } catch (error) {\n    // So we try to extract the estimation result within the error in case is possible\n    const estimationData = getDataFromNodeErrorMessage(error.message)\n\n    if (!estimationData || sameString(estimationData, EMPTY_DATA)) {\n      throw error\n    }\n\n    return new BigNumber(estimationData.substring(138), 16).toNumber()\n  }\n\n  // This will fail in case that we receive an EMPTY_DATA on the GETH node gas estimation (for version < v1.9.24 of geth nodes)\n  // We cannot throw this error above because it will be captured again on the catch block bellow\n  throw new Error('Error while estimating the gas required for tx')\n}\n\nconst calculateMinimumGasForTransaction = async (\n  additionalGasBatches: number[],\n  safeAddress: string,\n  estimateData: string,\n  txGasEstimation: number,\n  dataGasEstimation: number,\n): Promise<number> => {\n  for (const additionalGas of additionalGasBatches) {\n    const amountOfGasToTryTx = txGasEstimation + dataGasEstimation + additionalGas\n    try {\n      await getGasEstimationTxResponse({\n        to: safeAddress,\n        from: safeAddress,\n        data: estimateData,\n        gasPrice: 0,\n        gas: amountOfGasToTryTx,\n      })\n      return txGasEstimation + additionalGas\n    } catch (error) {\n      console.log(`Error trying to estimate gas with amount: ${amountOfGasToTryTx}`)\n    }\n  }\n\n  return 0\n}\n\nexport const estimateSafeTxGas = async (\n  safe: GnosisSafe | undefined,\n  safeAddress: string,\n  data: string,\n  to: string,\n  valueInWei: string,\n  operation: number,\n): Promise<number> => {\n  try {\n    let safeInstance = safe\n    if (!safeInstance) {\n      safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n    }\n\n    const estimateData = safeInstance.methods.requiredTxGas(to, valueInWei, data, operation).encodeABI()\n    const gasEstimationResponse = await getGasEstimationTxResponse({\n      to: safeAddress,\n      from: safeAddress,\n      data: estimateData,\n    })\n\n    const txGasEstimation = gasEstimationResponse + 10000\n\n    // 21000 - additional gas costs (e.g. base tx costs, transfer costs)\n    const dataGasEstimation = estimateDataGasCosts(estimateData) + 21000\n    const additionalGasBatches = [0, 10000, 20000, 40000, 80000, 160000, 320000, 640000, 1280000, 2560000, 5120000]\n\n    return await calculateMinimumGasForTransaction(\n      additionalGasBatches,\n      safeAddress,\n      estimateData,\n      txGasEstimation,\n      dataGasEstimation,\n    )\n  } catch (error) {\n    console.error('Error calculating tx gas estimation', error)\n    return 0\n  }\n}\n","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '420px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","const navigatorCp: any = navigator\n\nnavigatorCp.getMedia =\n  navigatorCp.getUserMedia || // use the proper vendor prefix\n  navigatorCp.webkitGetUserMedia ||\n  navigatorCp.mozGetUserMedia ||\n  navigatorCp.msGetUserMedia\n\nexport const checkWebcam = (success, err) =>\n  navigatorCp.getMedia(\n    { video: true },\n    () => {\n      success()\n    },\n    () => {\n      err()\n    },\n  )\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\nimport { checkWebcam } from './utils'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [useWebcam, setUseWebcam] = useState<boolean | null>(null)\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    checkWebcam(\n      () => {\n        setUseWebcam(true)\n      },\n      () => {\n        setUseWebcam(false)\n      },\n    )\n  }, [])\n\n  useEffect(() => {\n    if (useWebcam === false && !fileUploadModalOpen && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [useWebcam, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: string | null, successData: string | null) => {\n    if (successData) {\n      onScan(successData)\n    }\n    if (error) {\n      console.error('Error uploading file', error)\n      setError(`The QR could not be read`)\n    }\n    if (!useWebcam) {\n      setError(`The QR could not be read`)\n    }\n\n    setFileUploadModalOpen(false)\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error}\n        {useWebcam === null ? (\n          <Block className={classes.loaderContainer} justify=\"center\">\n            <CircularProgress />\n          </Block>\n        ) : (\n          <QrReader\n            legacyMode={!useWebcam}\n            onError={(err) => onFileScannedResolve(err, null)}\n            onScan={(data) => onFileScannedResolve(null, data)}\n            ref={scannerRef}\n            style={{ width: '400px', height: '400px' }}\n          />\n        )}\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setUseWebcam(false)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { web3ReadOnly as web3 } from 'src/logic/wallets/getWeb3'\nimport { DataDecoded, METHOD_TO_ID } from 'src/routes/safe/store/models/types/transactions.d'\n\nexport const decodeParamsFromSafeMethod = (data: string): DataDecoded | null => {\n  const [methodId, params] = [data.slice(0, 10) as keyof typeof METHOD_TO_ID | string, data.slice(10)]\n\n  switch (methodId) {\n    // swapOwner\n    case '0xe318b52b': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['uint', 'address', 'address'], params) as string[]\n      return {\n        method: METHOD_TO_ID[methodId],\n        parameters: [\n          { name: 'oldOwner', type: 'address', value: decodedParameters[1] },\n          { name: 'newOwner', type: 'address', value: decodedParameters[2] },\n        ],\n      }\n    }\n\n    // addOwnerWithThreshold\n    case '0x0d582f13': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['address', 'uint'], params)\n      return {\n        method: METHOD_TO_ID[methodId],\n        parameters: [\n          { name: 'owner', type: 'address', value: decodedParameters[0] },\n          { name: '_threshold', type: 'uint', value: decodedParameters[1] },\n        ],\n      }\n    }\n\n    // removeOwner\n    case '0xf8dc5dd9': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['address', 'address', 'uint'], params)\n      return {\n        method: METHOD_TO_ID[methodId],\n        parameters: [\n          { name: 'owner', type: 'address', value: decodedParameters[1] },\n          { name: '_threshold', type: 'uint', value: decodedParameters[2] },\n        ],\n      }\n    }\n\n    // changeThreshold\n    case '0x694e80c3': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['uint'], params)\n      return {\n        method: METHOD_TO_ID[methodId],\n        parameters: [\n          { name: '_threshold', type: 'uint', value: decodedParameters[0] },\n        ],\n      }\n    }\n\n    // enableModule\n    case '0x610b5925': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['address'], params)\n      return {\n        method: METHOD_TO_ID[methodId],\n        parameters: [\n          { name: 'module', type: 'address', value: decodedParameters[0] },\n        ],\n      }\n    }\n\n    // disableModule\n    case '0xe009cfde': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['address', 'address'], params)\n      return {\n        method: METHOD_TO_ID[methodId],\n        parameters: [\n          { name: 'prevModule', type: 'address', value: decodedParameters[0] },\n          { name: 'module', type: 'address', value: decodedParameters[1] },\n        ],\n      }\n    }\n\n    default:\n      return null\n  }\n}\n\nconst isSafeMethod = (methodId: string): boolean => {\n  return !!METHOD_TO_ID[methodId]\n}\n\nexport const decodeMethods = (data: string): DataDecoded | null => {\n  if(!data.length) {\n    return null\n  }\n\n  const [methodId, params] = [data.slice(0, 10), data.slice(10)]\n\n  if (isSafeMethod(methodId)) {\n    return decodeParamsFromSafeMethod(data)\n  }\n\n  switch (methodId) {\n    // a9059cbb - transfer(address,uint256)\n    case '0xa9059cbb': {\n      const decodeParameters = web3.eth.abi.decodeParameters(['address', 'uint'], params)\n      return {\n        method: 'transfer',\n        parameters: [\n          { name: 'to', type: '', value: decodeParameters[0] },\n          { name: 'value', type: '', value: decodeParameters[1] },\n        ],\n      }\n    }\n\n    // 23b872dd - transferFrom(address,address,uint256)\n    case '0x23b872dd': {\n      const decodeParameters = web3.eth.abi.decodeParameters(['address', 'address', 'uint'], params)\n      return {\n        method: 'transferFrom',\n        parameters: [\n          { name: 'from', type: '', value: decodeParameters[0] },\n          { name: 'to', type: '', value: decodeParameters[1] },\n          { name: 'value', type: '', value: decodeParameters[2] },\n        ],\n      }\n    }\n\n    // 42842e0e - safeTransferFrom(address,address,uint256)\n    case '0x42842e0e': {\n      const decodedParameters = web3.eth.abi.decodeParameters(['address', 'address', 'uint'], params)\n      return {\n        method: 'safeTransferFrom',\n        parameters: [\n          { name: 'from', type: '', value: decodedParameters[0] },\n          { name: 'to', type: '', value: decodedParameters[1] },\n          { name: 'value', type: '', value: decodedParameters[2] },\n        ],\n      }\n    }\n\n    default:\n      return null\n  }\n}\n","import { push } from 'connected-react-router'\nimport semverSatisfies from 'semver/functions/satisfies'\nimport { ThunkAction } from 'redux-thunk'\n\nimport { onboardUser } from 'src/components/ConnectButton'\nimport { decodeMethods } from 'src/logic/contracts/methodIds'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { getNotificationsFromTxType } from 'src/logic/notifications'\nimport {\n  CALL,\n  getApprovalTransaction,\n  getExecutionTransaction,\n  SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES,\n  saveTxToHistory,\n  tryOffchainSigning,\n} from 'src/logic/safe/transactions'\nimport { estimateSafeTxGas } from 'src/logic/safe/transactions/gas'\nimport { getCurrentSafeVersion } from 'src/logic/safe/utils/safeVersion'\nimport { ZERO_ADDRESS } from 'src/logic/wallets/ethAddresses'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport { providerSelector } from 'src/logic/wallets/store/selectors'\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport closeSnackbarAction from 'src/logic/notifications/store/actions/closeSnackbar'\nimport {\n  removeTxFromStore,\n  storeSignedTx,\n  storeExecutedTx,\n} from 'src/logic/safe/store/actions/transactions/pendingTransactions'\nimport {\n  generateSafeTxHash,\n  mockTransaction,\n  TxToMock,\n} from 'src/logic/safe/store/actions/transactions/utils/transactionHelpers'\nimport { getLastTx, getNewTxNonce, shouldExecuteTransaction } from 'src/logic/safe/store/actions/utils'\nimport { getErrorMessage } from 'src/test/utils/ethereumErrors'\nimport fetchTransactions from './transactions/fetchTransactions'\nimport { TxArgs } from 'src/logic/safe/store/models/types/transaction'\nimport { AnyAction } from 'redux'\nimport { PayableTx } from 'src/types/contracts/types.d'\nimport { AppReduxState } from 'src/store'\nimport { Dispatch, DispatchReturn } from './types'\n\ninterface CreateTransactionArgs {\n  navigateToTransactionsTab?: boolean\n  notifiedTransaction: string\n  operation?: number\n  origin?: string | null\n  safeAddress: string\n  to: string\n  txData?: string\n  txNonce?: number | string\n  valueInWei: string\n  safeTxGas?: number\n}\n\ntype CreateTransactionAction = ThunkAction<Promise<void | string>, AppReduxState, DispatchReturn, AnyAction>\ntype ConfirmEventHandler = (safeTxHash: string) => void\ntype ErrorEventHandler = () => void\n\nconst createTransaction = (\n  {\n    safeAddress,\n    to,\n    valueInWei,\n    txData = EMPTY_DATA,\n    notifiedTransaction,\n    txNonce,\n    operation = CALL,\n    navigateToTransactionsTab = true,\n    origin = null,\n    safeTxGas: safeTxGasArg,\n  }: CreateTransactionArgs,\n  onUserConfirm?: ConfirmEventHandler,\n  onError?: ErrorEventHandler,\n): CreateTransactionAction => async (dispatch: Dispatch, getState: () => AppReduxState): Promise<DispatchReturn> => {\n  const state = getState()\n\n  if (navigateToTransactionsTab) {\n    dispatch(push(`${SAFELIST_ADDRESS}/${safeAddress}/transactions`))\n  }\n\n  const ready = await onboardUser()\n  if (!ready) return\n\n  const { account: from, hardwareWallet, smartContractWallet } = providerSelector(state)\n  const safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n  const lastTx = await getLastTx(safeAddress)\n  const nonce = await getNewTxNonce(txNonce?.toString(), lastTx, safeInstance)\n  const isExecution = await shouldExecuteTransaction(safeInstance, nonce, lastTx)\n  const safeVersion = await getCurrentSafeVersion(safeInstance)\n  const safeTxGas =\n    safeTxGasArg || (await estimateSafeTxGas(safeInstance, safeAddress, txData, to, valueInWei, operation))\n\n  // https://docs.gnosis.io/safe/docs/docs5/#pre-validated-signatures\n  const sigs = `0x000000000000000000000000${from.replace(\n    '0x',\n    '',\n  )}000000000000000000000000000000000000000000000000000000000000000001`\n\n  const notificationsQueue = getNotificationsFromTxType(notifiedTransaction, origin)\n  const beforeExecutionKey = dispatch(enqueueSnackbar(notificationsQueue.beforeExecution))\n\n  let pendingExecutionKey\n\n  let txHash\n  const txArgs: TxArgs = {\n    safeInstance,\n    to,\n    valueInWei,\n    data: txData,\n    operation,\n    nonce: Number.parseInt(nonce),\n    safeTxGas,\n    baseGas: 0,\n    gasPrice: '0',\n    gasToken: ZERO_ADDRESS,\n    refundReceiver: ZERO_ADDRESS,\n    sender: from,\n    sigs,\n  }\n  const safeTxHash = generateSafeTxHash(safeAddress, txArgs)\n\n  try {\n    // Here we're checking that safe contract version is greater or equal 1.1.1, but\n    // theoretically EIP712 should also work for 1.0.0 contracts\n    const canTryOffchainSigning =\n      !isExecution && !smartContractWallet && semverSatisfies(safeVersion, SAFE_VERSION_FOR_OFFCHAIN_SIGNATURES)\n    if (canTryOffchainSigning) {\n      const signature = await tryOffchainSigning(safeTxHash, { ...txArgs, safeAddress }, hardwareWallet)\n\n      if (signature) {\n        dispatch(closeSnackbarAction({ key: beforeExecutionKey }))\n        dispatch(enqueueSnackbar(notificationsQueue.afterExecution.moreConfirmationsNeeded))\n        dispatch(fetchTransactions(safeAddress))\n\n        await saveTxToHistory({ ...txArgs, signature, origin })\n        onUserConfirm?.(safeTxHash)\n        return\n      }\n    }\n\n    const tx = isExecution\n      ? await getExecutionTransaction(txArgs)\n      : await getApprovalTransaction(safeInstance, safeTxHash)\n    const sendParams: PayableTx = { from, value: 0 }\n\n    // if not set owner management tests will fail on ganache\n    if (process.env.NODE_ENV === 'test') {\n      sendParams.gas = '7000000'\n    }\n\n    const txToMock: TxToMock = {\n      ...txArgs,\n      confirmations: [], // this is used to determine if a tx is pending or not. See `calculateTransactionStatus` helper\n      value: txArgs.valueInWei,\n      safeTxHash,\n      dataDecoded: decodeMethods(txArgs.data),\n      submissionDate: new Date().toISOString(),\n    }\n    const mockedTx = await mockTransaction(txToMock, safeAddress, state)\n\n    await tx\n      .send(sendParams)\n      .once('transactionHash', async (hash) => {\n        onUserConfirm?.(safeTxHash)\n        try {\n          txHash = hash\n          dispatch(closeSnackbarAction({ key: beforeExecutionKey }))\n\n          pendingExecutionKey = dispatch(enqueueSnackbar(notificationsQueue.pendingExecution))\n\n          await Promise.all([\n            saveTxToHistory({ ...txArgs, txHash, origin }),\n            storeSignedTx({ transaction: mockedTx, from, isExecution, safeAddress, dispatch, state }),\n          ])\n          dispatch(fetchTransactions(safeAddress))\n        } catch (e) {\n          removeTxFromStore(mockedTx, safeAddress, dispatch, state)\n        }\n      })\n      .on('error', (error) => {\n        dispatch(closeSnackbarAction({ key: pendingExecutionKey }))\n        removeTxFromStore(mockedTx, safeAddress, dispatch, state)\n        console.error('Tx error: ', error)\n\n        onError?.()\n      })\n      .then(async (receipt) => {\n        if (pendingExecutionKey) {\n          dispatch(closeSnackbarAction({ key: pendingExecutionKey }))\n        }\n\n        dispatch(\n          enqueueSnackbar(\n            isExecution\n              ? notificationsQueue.afterExecution.noMoreConfirmationsNeeded\n              : notificationsQueue.afterExecution.moreConfirmationsNeeded,\n          ),\n        )\n\n        await storeExecutedTx({ transaction: mockedTx, from, safeAddress, isExecution, receipt, dispatch, state })\n\n        dispatch(fetchTransactions(safeAddress))\n\n        return receipt.transactionHash\n      })\n  } catch (err) {\n    const errorMsg = err.message\n      ? `${notificationsQueue.afterExecutionError.message} - ${err.message}`\n      : notificationsQueue.afterExecutionError.message\n\n    console.error(`Error creating the TX: `, err)\n    dispatch(closeSnackbarAction({ key: beforeExecutionKey }))\n\n    if (pendingExecutionKey) {\n      dispatch(closeSnackbarAction({ key: pendingExecutionKey }))\n    }\n\n    dispatch(enqueueSnackbar(errorMsg))\n\n    const executeDataUsedSignatures = safeInstance.methods\n      .execTransaction(to, valueInWei, txData, operation, 0, 0, 0, ZERO_ADDRESS, ZERO_ADDRESS, sigs)\n      .encodeABI()\n    const errMsg = await getErrorMessage(safeInstance.options.address, 0, executeDataUsedSignatures, from)\n    console.error(`Error creating the TX - an attempt to get the error message: ${errMsg}`)\n  }\n\n  return txHash\n}\n\nexport default createTransaction\n","import { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport * as React from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import * as React from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromENS } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\n// an idea for second field was taken from here\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => (\n  <>\n    <Field\n      className={className}\n      component={TextField as any}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      inputAdornment={inputAdornment}\n      name={name}\n      placeholder={placeholder}\n      testId={testId}\n      text={text}\n      type=\"text\"\n      validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\n    />\n    <OnChange name={name}>\n      {async (value) => {\n        const address = trimSpaces(value)\n        if (isValidEnsName(address)) {\n          try {\n            const resolverAddr = await getAddressFromENS(address)\n            const formattedAddress = checksumAddress(resolverAddr)\n            fieldMutator(formattedAddress)\n          } catch (err) {\n            console.error('Failed to resolve address for ENS name: ', err)\n          }\n        } else {\n          const formattedAddress = checksumAddress(address)\n          fieldMutator(formattedAddress)\n        }\n      }}\n    </OnChange>\n  </>\n)\n\nexport default AddressInput\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xl, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: xl,\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_HEIGHT = 49\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = (emptyRows) => ({\n    height: FIXED_HEIGHT * emptyRows,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n\n    let sortedData = stableSort(data, getSorting(orderParam, orderByParam, orderProp), fixedParam)\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const emptyRows = displayRows - Math.min(displayRows, data.size - page * displayRows)\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle(emptyRows + 1)}>\n            <CircularProgress size={60} />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { createStyles } from '@material-ui/core/styles'\nimport { secondaryText } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  etherscanLink: {\n    display: 'flex',\n    alignItems: 'center',\n\n    '& svg': {\n      fill: secondaryText,\n    },\n  },\n  address: {\n    display: 'block',\n    flexShrink: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  addressParagraph: {\n    fontSize: '13px',\n  },\n  button: {\n    height: '24px',\n    margin: '0',\n    width: '24px',\n  },\n  firstButton: {\n    marginLeft: '8px',\n  },\n})\n","import { ClickAwayListener, createStyles, Divider } from '@material-ui/core'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport { push } from 'connected-react-router'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { xs } from 'src/theme/variables'\n\nconst useStyles = makeStyles(\n  createStyles({\n    container: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      cursor: 'pointer',\n      margin: `0 ${xs}`,\n      borderRadius: '50%',\n      transition: 'background-color .2s ease-in-out',\n      '&:hover': {\n        backgroundColor: '#F0EFEE',\n      },\n      outline: 'none',\n    },\n    increasedPopperZindex: {\n      zIndex: 2001,\n    },\n  }),\n)\n\ntype EllipsisTransactionDetailsProps = {\n  address: string\n  knownAddress?: boolean\n  sendModalOpenHandler?: () => void\n}\n\nexport const EllipsisTransactionDetails = ({\n  address,\n  knownAddress,\n  sendModalOpenHandler,\n}: EllipsisTransactionDetailsProps): React.ReactElement => {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const dispatch = useDispatch()\n  const currentSafeAddress = useSelector(safeParamAddressFromStateSelector)\n\n  const handleClick = (event) => setAnchorEl(event.currentTarget)\n\n  const closeMenuHandler = () => setAnchorEl(null)\n\n  const addOrEditEntryHandler = () => {\n    dispatch(push(`${SAFELIST_ADDRESS}/${currentSafeAddress}/address-book?entryAddress=${address}`))\n    closeMenuHandler()\n  }\n\n  return (\n    <ClickAwayListener onClickAway={closeMenuHandler}>\n      <div className={classes.container} role=\"menu\" tabIndex={0}>\n        <MoreHorizIcon onClick={handleClick} onKeyDown={handleClick} />\n        <Menu anchorEl={anchorEl} id=\"simple-menu\" keepMounted onClose={closeMenuHandler} open={Boolean(anchorEl)}>\n          {sendModalOpenHandler ? (\n            <>\n              <MenuItem onClick={sendModalOpenHandler}>Send Again</MenuItem>\n              <Divider />\n            </>\n          ) : null}\n          {knownAddress ? (\n            <MenuItem onClick={addOrEditEntryHandler}>Edit Address book Entry</MenuItem>\n          ) : (\n            <MenuItem onClick={addOrEditEntryHandler}>Add to address book</MenuItem>\n          )}\n        </Menu>\n      </div>\n    </ClickAwayListener>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport React from 'react'\n\nimport { styles } from './style'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Block from 'src/components/layout/Block'\nimport Span from 'src/components/layout/Span'\nimport { shortVersionOf } from 'src/logic/wallets/ethAddresses'\nimport { EllipsisTransactionDetails } from 'src/routes/safe/components/AddressBook/EllipsisTransactionDetails'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\nimport { getExplorerInfo } from 'src/config'\n\nconst useStyles = makeStyles(styles)\n\ninterface EtherscanLinkProps {\n  className?: string\n  cut?: number\n  knownAddress?: boolean\n  value: string\n  sendModalOpenHandler?: () => void\n}\n\nexport const EtherscanLink = ({\n  className,\n  cut,\n  knownAddress,\n  value,\n  sendModalOpenHandler,\n}: EtherscanLinkProps): React.ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <Block className={cn(classes.etherscanLink, className)}>\n      <Span className={cn(knownAddress && classes.addressParagraph, classes.address)} size=\"md\">\n        {cut ? shortVersionOf(value, cut) : value}\n      </Span>\n      <CopyBtn className={cn(classes.button, classes.firstButton)} content={value} />\n      <ExplorerButton explorerUrl={getExplorerInfo(value)} />\n      {knownAddress !== undefined ? (\n        <EllipsisTransactionDetails\n          address={value}\n          knownAddress={knownAddress}\n          sendModalOpenHandler={sendModalOpenHandler}\n        />\n      ) : null}\n    </Block>\n  )\n}\n","// TODO this file is duplicated with src/logic/safe/store/model/types/transaction.d.ts, we should remove it\nexport enum TxConstants {\n  MULTI_SEND = 'multiSend',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport enum Operation {\n  CALL,\n  DELEGATE_CALL,\n  CREATE,\n}\n\n// types comes from: https://github.com/gnosis/safe-client-gateway/blob/752e76b6d1d475791dbd7917b174bb41d2d9d8be/src/utils.rs\nexport enum TransferMethods {\n  TRANSFER = 'transfer',\n  TRANSFER_FROM = 'transferFrom',\n  SAFE_TRANSFER_FROM = 'safeTransferFrom',\n}\n\nexport enum SettingsChangeMethods {\n  SETUP = 'setup',\n  SET_FALLBACK_HANDLER = 'setFallbackHandler',\n  ADD_OWNER_WITH_THRESHOLD = 'addOwnerWithThreshold',\n  REMOVE_OWNER = 'removeOwner',\n  REMOVE_OWNER_WITH_THRESHOLD = 'removeOwnerWithThreshold',\n  SWAP_OWNER = 'swapOwner',\n  CHANGE_THRESHOLD = 'changeThreshold',\n  CHANGE_MASTER_COPY = 'changeMasterCopy',\n  ENABLE_MODULE = 'enableModule',\n  DISABLE_MODULE = 'disableModule',\n  EXEC_TRANSACTION_FROM_MODULE = 'execTransactionFromModule',\n  APPROVE_HASH = 'approveHash',\n  EXEC_TRANSACTION = 'execTransaction',\n}\n\n// note: this extends SAFE_METHODS_NAMES in /logic/contracts/methodIds.ts, we need to figure out which one we are going to use\nexport type DataDecodedMethod = TransferMethods | SettingsChangeMethods | string\n\nexport interface ValueDecoded {\n  operation: Operation\n  to: string\n  value: number\n  data: string\n  dataDecoded: DataDecoded\n}\n\nexport interface SingleTransactionMethodParameter {\n  name: string\n  type: string\n  value: string\n}\n\nexport interface MultiSendMethodParameter extends SingleTransactionMethodParameter {\n  valueDecoded: ValueDecoded[]\n}\n\nexport type Parameter = MultiSendMethodParameter | SingleTransactionMethodParameter\n\nexport interface DataDecoded {\n  method: DataDecodedMethod\n  parameters: Parameter[]\n}\n\nexport enum ConfirmationType {\n  CONFIRMATION = 'CONFIRMATION',\n  EXECUTION = 'EXECUTION',\n}\n\nexport enum SignatureType {\n  CONTRACT_SIGNATURE = 'CONTRACT_SIGNATURE',\n  APPROVED_HASH = 'APPROVED_HASH',\n  EOA = 'EOA',\n  ETH_SIGN = 'ETH_SIGN',\n}\n\nexport interface Confirmation {\n  owner: string\n  submissionDate: string\n  transactionHash: string | null\n  confirmationType: ConfirmationType\n  signature: string\n  signatureType: SignatureType\n}\n\nexport enum TokenType {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  OTHER = 'OTHER',\n}\n\nexport interface TokenInfo {\n  type: TokenType\n  address: string\n  name: string\n  symbol: string\n  decimals: number\n  logoUri: string\n}\n\nexport enum TransferType {\n  ETHER_TRANSFER = 'ETHER_TRANSFER',\n  ERC20_TRANSFER = 'ERC20_TRANSFER',\n  ERC721_TRANSFER = 'ERC721_TRANSFER',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface Transfer {\n  type: TransferType\n  executionDate: string\n  blockNumber: number\n  transactionHash: string | null\n  to: string\n  value: string | null\n  tokenId: string | null\n  tokenAddress: string\n  tokenInfo: TokenInfo | null\n  from: string\n}\n\nexport enum TxType {\n  MULTISIG_TRANSACTION = 'MULTISIG_TRANSACTION',\n  ETHEREUM_TRANSACTION = 'ETHEREUM_TRANSACTION',\n  MODULE_TRANSACTION = 'MODULE_TRANSACTION',\n}\n\nexport interface MultiSigTransaction {\n  safe: string\n  to: string\n  value: string\n  data: string | null\n  operation: number\n  gasToken: string\n  safeTxGas: number\n  baseGas: number\n  gasPrice: string\n  refundReceiver: string\n  nonce: number\n  executionDate: string | null\n  submissionDate: string\n  modified: string\n  blockNumber: number | null\n  transactionHash: string | null\n  safeTxHash: string\n  executor: string | null\n  isExecuted: boolean\n  isSuccessful: boolean | null\n  ethGasPrice: string | null\n  gasUsed: number | null\n  fee: string | null\n  origin: string | null\n  dataDecoded: DataDecoded | null\n  confirmationsRequired: number | null\n  confirmations: Confirmation[]\n  signatures: string | null\n  transfers: Transfer[]\n  txType: TxType.MULTISIG_TRANSACTION\n}\n\nexport interface ModuleTransaction {\n  created: string\n  executionDate: string\n  blockNumber: number\n  transactionHash: string\n  safe: string\n  module: string\n  to: string\n  value: string\n  data: string\n  operation: Operation\n  transfers: Transfer[]\n  txType: TxType.MODULE_TRANSACTION\n}\n\nexport interface EthereumTransaction {\n  executionDate: string\n  to: string\n  data: string | null\n  txHash: string\n  blockNumber: number\n  transfers: Transfer[]\n  txType: TxType.ETHEREUM_TRANSACTION\n  from: string\n}\n\nexport type Transaction = MultiSigTransaction | ModuleTransaction | EthereumTransaction\n\n// SAFE METHODS TO ITS ID\n// https://github.com/gnosis/safe-contracts/blob/development/test/safeMethodNaming.js\n// https://github.com/gnosis/safe-contracts/blob/development/contracts/GnosisSafe.sol\n//  [\n//   { name: \"addOwnerWithThreshold\", id: \"0x0d582f13\" },\n//   { name: \"DOMAIN_SEPARATOR_TYPEHASH\", id: \"0x1db61b54\" },\n//   { name: \"isOwner\", id: \"0x2f54bf6e\" },\n//   { name: \"execTransactionFromModule\", id: \"0x468721a7\" },\n//   { name: \"signedMessages\", id: \"0x5ae6bd37\" },\n//   { name: \"enableModule\", id: \"0x610b5925\" },\n//   { name: \"changeThreshold\", id: \"0x694e80c3\" },\n//   { name: \"approvedHashes\", id: \"0x7d832974\" },\n//   { name: \"changeMasterCopy\", id: \"0x7de7edef\" },\n//   { name: \"SENTINEL_MODULES\", id: \"0x85e332cd\" },\n//   { name: \"SENTINEL_OWNERS\", id: \"0x8cff6355\" },\n//   { name: \"getOwners\", id: \"0xa0e67e2b\" },\n//   { name: \"NAME\", id: \"0xa3f4df7e\" },\n//   { name: \"nonce\", id: \"0xaffed0e0\" },\n//   { name: \"getModules\", id: \"0xb2494df3\" },\n//   { name: \"SAFE_MSG_TYPEHASH\", id: \"0xc0856ffc\" },\n//   { name: \"SAFE_TX_TYPEHASH\", id: \"0xccafc387\" },\n//   { name: \"disableModule\", id: \"0xe009cfde\" },\n//   { name: \"swapOwner\", id: \"0xe318b52b\" },\n//   { name: \"getThreshold\", id: \"0xe75235b8\" },\n//   { name: \"domainSeparator\", id: \"0xf698da25\" },\n//   { name: \"removeOwner\", id: \"0xf8dc5dd9\" },\n//   { name: \"VERSION\", id: \"0xffa1ad74\" },\n//   { name: \"setup\", id: \"0xa97ab18a\" },\n//   { name: \"execTransaction\", id: \"0x6a761202\" },\n//   { name: \"requiredTxGas\", id: \"0xc4ca3a9c\" },\n//   { name: \"approveHash\", id: \"0xd4d9bdcd\" },\n//   { name: \"signMessage\", id: \"0x85a5affe\" },\n//   { name: \"isValidSignature\", id: \"0x20c13b0b\" },\n//   { name: \"getMessageHash\", id: \"0x0a1028c4\" },\n//   { name: \"encodeTransactionData\", id: \"0xe86637db\" },\n//   { name: \"getTransactionHash\", id: \"0xd8d11f78\" }\n// ]\n\nexport const SAFE_METHODS_NAMES = {\n  ADD_OWNER_WITH_THRESHOLD: 'addOwnerWithThreshold',\n  CHANGE_THRESHOLD: 'changeThreshold',\n  REMOVE_OWNER: 'removeOwner',\n  SWAP_OWNER: 'swapOwner',\n  ENABLE_MODULE: 'enableModule',\n  DISABLE_MODULE: 'disableModule',\n}\n\nexport const METHOD_TO_ID = {\n  '0xe318b52b': SAFE_METHODS_NAMES.SWAP_OWNER,\n  '0x0d582f13': SAFE_METHODS_NAMES.ADD_OWNER_WITH_THRESHOLD,\n  '0xf8dc5dd9': SAFE_METHODS_NAMES.REMOVE_OWNER,\n  '0x694e80c3': SAFE_METHODS_NAMES.CHANGE_THRESHOLD,\n  '0x610b5925': SAFE_METHODS_NAMES.ENABLE_MODULE,\n  '0xe009cfde': SAFE_METHODS_NAMES.DISABLE_MODULE,\n}\n\nexport type SafeMethods = typeof SAFE_METHODS_NAMES[keyof typeof SAFE_METHODS_NAMES]\n\ntype TokenMethods = 'transfer' | 'transferFrom' | 'safeTransferFrom'\n\ntype SafeDecodedParams = {\n  [key in SafeMethods]?: Record<string, string>\n}\n\ntype TokenDecodedParams = {\n  [key in TokenMethods]?: Record<string, string>\n}\n\nexport type DecodedParams = SafeDecodedParams | TokenDecodedParams | null\n","import * as React from 'react'\n\nclass Span extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <span {...props}>{children}</span>\n  }\n}\n\nexport default Span\n","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport const useWindowDimensions = (): { width: number; height: number } => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { getValidAddressBookName } from 'src/logic/addressBook/utils'\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\nimport { EtherscanLink } from 'src/components/EtherscanLink'\n\ntype OwnerAddressTableCellProps = {\n  address: string\n  knownAddress?: boolean\n  showLinks: boolean\n  userName?: string\n  sendModalOpenHandler?: () => void\n}\n\nconst OwnerAddressTableCell = (props: OwnerAddressTableCellProps): React.ReactElement => {\n  const { address, knownAddress, showLinks, userName, sendModalOpenHandler } = props\n  const [cut, setCut] = useState(0)\n  const { width } = useWindowDimensions()\n\n  useEffect(() => {\n    if (width <= 900) {\n      setCut(6)\n    } else if (width <= 1024) {\n      setCut(12)\n    } else {\n      setCut(0)\n    }\n  }, [width])\n\n  return (\n    <Block justify=\"left\">\n      <Identicon address={address} diameter={32} />\n      {showLinks ? (\n        <div style={{ marginLeft: 10, flexShrink: 1, minWidth: 0 }}>\n          {userName && getValidAddressBookName(userName)}\n          <EtherscanLink\n            knownAddress={knownAddress}\n            value={address}\n            cut={cut}\n            sendModalOpenHandler={sendModalOpenHandler}\n          />\n        </div>\n      ) : (\n        <Paragraph style={{ marginLeft: 10 }}>{address}</Paragraph>\n      )}\n    </Block>\n  )\n}\n\nexport default OwnerAddressTableCell\n","// https://docs.gnosis.io/safe/docs/docs5/#pre-validated-signatures\n// https://github.com/gnosis/safe-contracts/blob/master/test/gnosisSafeTeamEdition.js#L26\nexport const generateSignaturesFromTxConfirmations = (confirmations, preApprovingOwner) => {\n  // The constant parts need to be sorted so that the recovered signers are sorted ascending\n  // (natural order) by address (not checksummed).\n  const confirmationsMap = confirmations.reduce((map, obj) => {\n    map[obj.owner.toLowerCase()] = obj // eslint-disable-line no-param-reassign\n    return map\n  }, {})\n\n  if (preApprovingOwner) {\n    confirmationsMap[preApprovingOwner.toLowerCase()] = { owner: preApprovingOwner }\n  }\n\n  let sigs = '0x'\n  Object.keys(confirmationsMap)\n    .sort()\n    .forEach((addr) => {\n      const conf = confirmationsMap[addr]\n      if (conf.signature) {\n        sigs += conf.signature.slice(2)\n      } else {\n        // https://docs.gnosis.io/safe/docs/docs5/#pre-validated-signatures\n        sigs += `000000000000000000000000${addr.replace(\n          '0x',\n          '',\n        )}000000000000000000000000000000000000000000000000000000000000000001`\n      }\n    })\n  return sigs\n}\n","import { List, Map } from 'immutable'\nimport { batch } from 'react-redux'\nimport { TransactionReceipt } from 'web3-core'\n\nimport { addOrUpdateCancellationTransactions } from 'src/logic/safe/store/actions/transactions/addOrUpdateCancellationTransactions'\nimport { addOrUpdateTransactions } from 'src/logic/safe/store/actions/transactions/addOrUpdateTransactions'\nimport { removeCancellationTransaction } from 'src/logic/safe/store/actions/transactions/removeCancellationTransaction'\nimport { removeTransaction } from 'src/logic/safe/store/actions/transactions/removeTransaction'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { makeConfirmation } from 'src/logic/safe/store/models/confirmation'\nimport { Transaction, TransactionStatus } from 'src/logic/safe/store/models/types/transaction'\nimport { safeTransactionsSelector } from 'src/logic/safe/store/selectors'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { web3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { AppReduxState } from 'src/store'\n\ntype SetPendingTransactionParams = {\n  transaction: Transaction\n  from: string\n}\n\nconst setTxStatusAsPending = ({ transaction, from }: SetPendingTransactionParams): Transaction =>\n  transaction.withMutations((transaction) => {\n    transaction\n      // setting user as the one who has triggered the tx\n      // this allows to display the owner's \"pending\" status\n      .updateIn(['ownersWithPendingActions', transaction.isCancellationTx ? 'reject' : 'confirm'], (previous) =>\n        previous.push(from),\n      )\n      // global transaction status\n      .set('status', TransactionStatus.PENDING)\n  })\n\ntype SetOptimisticTransactionParams = {\n  transaction: Transaction\n  from: string\n  isExecution: boolean\n  receipt: TransactionReceipt\n}\n\nconst updateTxBasedOnReceipt = ({\n  transaction,\n  from,\n  isExecution,\n  receipt,\n}: SetOptimisticTransactionParams): Transaction => {\n  const txToStore = isExecution\n    ? transaction.withMutations((tx) => {\n        tx.set('executionTxHash', receipt.transactionHash)\n          .set('blockNumber', receipt.blockNumber)\n          .set('executionDate', tx.submissionDate)\n          .set('fee', web3ReadOnly.utils.toWei(`${receipt.gasUsed}`, 'gwei'))\n          .set('executor', from)\n          .set('isExecuted', true)\n          .set('isSuccessful', receipt.status)\n          .set('status', receipt.status ? TransactionStatus.SUCCESS : TransactionStatus.FAILED)\n      })\n    : transaction.set('status', TransactionStatus.AWAITING_CONFIRMATIONS)\n\n  return txToStore.withMutations((tx) => {\n    const senderHasAlreadyConfirmed = tx.confirmations.findIndex(({ owner }) => sameAddress(owner, from)) !== -1\n\n    if (!senderHasAlreadyConfirmed) {\n      // updates confirmations status\n      tx.update('confirmations', (confirmations) => confirmations.push(makeConfirmation({ owner: from })))\n    }\n\n    tx.updateIn(['ownersWithPendingActions', 'reject'], (prev) => prev.clear()).updateIn(\n      ['ownersWithPendingActions', 'confirm'],\n      (prev) => prev.clear(),\n    )\n  })\n}\n\ntype StoreTxParams = {\n  transaction: Transaction\n  safeAddress: string\n  dispatch: Dispatch\n  state: AppReduxState\n}\n\nexport const storeTx = async ({ transaction, safeAddress, dispatch, state }: StoreTxParams): Promise<void> => {\n  if (transaction.isCancellationTx) {\n    // `transaction` is the Cancellation tx\n    // So we need to decide the `status` for the main transaction this `transaction` is cancelling\n    let status: TransactionStatus = TransactionStatus.AWAITING_YOUR_CONFIRMATION\n    // `cancelled`, will become true if its corresponding Cancellation tx was successfully executed\n    let cancelled = false\n\n    switch (transaction.status) {\n      case TransactionStatus.SUCCESS:\n        status = TransactionStatus.CANCELLED\n        cancelled = true\n        break\n      case TransactionStatus.PENDING:\n        status = TransactionStatus.PENDING\n        break\n      default:\n        break\n    }\n\n    const safeTransactions = safeTransactionsSelector(state)\n\n    const transactions = safeTransactions.withMutations((txs) => {\n      const txIndex = txs.findIndex(({ nonce }) => Number(nonce) === Number(transaction.nonce))\n      txs.update(txIndex, (tx) => tx.set('status', status).set('cancelled', cancelled))\n    })\n\n    batch(() => {\n      dispatch(\n        addOrUpdateCancellationTransactions({\n          safeAddress,\n          transactions: Map({ [`${transaction.nonce}`]: transaction }),\n        }),\n      )\n      dispatch(addOrUpdateTransactions({ safeAddress, transactions }))\n    })\n  } else {\n    dispatch(addOrUpdateTransactions({ safeAddress, transactions: List([transaction]) }))\n  }\n}\n\ntype StoreSignedTxParams = StoreTxParams & {\n  from: string\n  isExecution: boolean\n}\n\nexport const storeSignedTx = ({ transaction, from, isExecution, ...rest }: StoreSignedTxParams): Promise<void> =>\n  storeTx({\n    transaction: isExecution ? setTxStatusAsPending({ transaction, from }) : transaction,\n    ...rest,\n  })\n\ntype StoreExecParams = StoreTxParams & {\n  from: string\n  isExecution: boolean\n  safeAddress: string\n  receipt: TransactionReceipt\n}\n\nexport const storeExecutedTx = ({ safeAddress, dispatch, state, ...rest }: StoreExecParams): Promise<void> =>\n  storeTx({\n    transaction: updateTxBasedOnReceipt({ ...rest }),\n    safeAddress,\n    dispatch,\n    state,\n  })\n\nexport const removeTxFromStore = (\n  transaction: Transaction,\n  safeAddress: string,\n  dispatch: Dispatch,\n  state: AppReduxState,\n): void => {\n  if (transaction.isCancellationTx) {\n    const safeTransactions = safeTransactionsSelector(state)\n    const transactions = safeTransactions.withMutations((txs) => {\n      const txIndex = txs.findIndex(({ nonce }) => Number(nonce) === Number(transaction.nonce))\n      txs[txIndex].set('status', TransactionStatus.AWAITING_YOUR_CONFIRMATION)\n    })\n\n    batch(() => {\n      dispatch(addOrUpdateTransactions({ safeAddress, transactions }))\n      dispatch(removeCancellationTransaction({ safeAddress, transaction }))\n    })\n  } else {\n    dispatch(removeTransaction({ safeAddress, transaction }))\n  }\n}\n","import { GnosisSafe } from 'src/types/contracts/GnosisSafe.d'\nimport { TxServiceModel } from './transactions/fetchTransactions/loadOutgoingTransactions'\nimport axios from 'axios'\n\nimport { buildTxServiceUrl } from 'src/logic/safe/transactions/txHistory'\n\nexport const getLastTx = async (safeAddress: string): Promise<TxServiceModel | null> => {\n  try {\n    const url = buildTxServiceUrl(safeAddress)\n    const response = await axios.get(url, { params: { limit: 1 } })\n\n    return response.data.results[0] || null\n  } catch (e) {\n    console.error('failed to retrieve last Tx from server', e)\n    return null\n  }\n}\n\nexport const getNewTxNonce = async (\n  txNonce: string | undefined,\n  lastTx: TxServiceModel | null,\n  safeInstance: GnosisSafe,\n): Promise<string> => {\n  if (txNonce) {\n    return txNonce\n  }\n\n  // use current's safe nonce as fallback\n  return lastTx ? `${lastTx.nonce + 1}` : (await safeInstance.methods.nonce().call()).toString()\n}\n\nexport const shouldExecuteTransaction = async (\n  safeInstance: GnosisSafe,\n  nonce: string,\n  lastTx: TxServiceModel | null,\n): Promise<boolean> => {\n  const threshold = await safeInstance.methods.getThreshold().call()\n\n  // Tx will automatically be executed if and only if the threshold is 1\n  if (Number.parseInt(threshold) === 1) {\n    const isFirstTransaction = Number.parseInt(nonce) === 0\n    // if the previous tx is not executed, it's delayed using the approval mechanisms,\n    // once the previous tx is executed, the current tx will be available to be executed\n    // by the user using the exec button.\n    const canExecuteCurrentTransaction = lastTx && lastTx.isExecuted\n\n    return isFirstTransaction || !!canExecuteCurrentTransaction\n  }\n\n  return false\n}\n","// \nimport abi from 'ethereumjs-abi'\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\n\nexport const getErrorMessage = async (to, value, data, from) => {\n  const web3 = getWeb3()\n  const returnData: any = await web3.eth.call({\n    to,\n    from,\n    value,\n    data,\n  })\n  const returnBuffer = Buffer.from(returnData.slice(2), 'hex')\n\n  return abi.rawDecode(['string'], returnBuffer.slice(4))[0]\n}\n","module.exports = __webpack_public_path__ + \"static/media/bin.b8582027.svg\";","module.exports = __webpack_public_path__ + \"static/media/rename-owner.fa996910.svg\";","module.exports = __webpack_public_path__ + \"static/media/replace-owner.69b7ee42.svg\";","import { createStyles } from '@material-ui/core'\nimport { background, border, error, fontColor, lg, md, secondaryText, sm, smallFontSize, xl } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  title: {\n    padding: lg,\n    paddingBottom: 0,\n  },\n  hide: {\n    '&:hover': {\n      backgroundColor: '#fff3e2',\n    },\n    '&:hover $actions': {\n      visibility: 'initial',\n    },\n  },\n  actions: {\n    justifyContent: 'flex-end',\n    visibility: 'hidden',\n    minWidth: '100px',\n  },\n  noBorderBottom: {\n    '& > td': {\n      borderBottom: 'none',\n    },\n  },\n  annotation: {\n    paddingLeft: lg,\n  },\n  ownersText: {\n    color: secondaryText,\n    '& b': {\n      color: fontColor,\n    },\n  },\n  container: {\n    padding: lg,\n  },\n  buttonRow: {\n    padding: lg,\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    boxSizing: 'border-box',\n    width: '100%',\n    justifyContent: 'flex-end',\n    borderTop: `2px solid ${border}`,\n  },\n  modifyBtn: {\n    height: xl,\n    fontSize: smallFontSize,\n  },\n  removeModuleIcon: {\n    marginLeft: lg,\n    cursor: 'pointer',\n  },\n  modalHeading: {\n    boxSizing: 'border-box',\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    padding: `${sm} ${lg}`,\n  },\n  modalContainer: {\n    minHeight: '369px',\n  },\n  modalManage: {\n    fontSize: lg,\n  },\n  modalClose: {\n    height: '35px',\n    width: '35px',\n  },\n  modalButtonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  modalButtonRemove: {\n    color: '#fff',\n    backgroundColor: error,\n    height: '42px',\n  },\n  modalName: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  modalUserName: {\n    whiteSpace: 'nowrap',\n  },\n  modalOwner: {\n    backgroundColor: background,\n    padding: md,\n    alignItems: 'center',\n  },\n  modalUser: {\n    justifyContent: 'left',\n  },\n  modalDescription: {\n    padding: md,\n  },\n  modalOpen: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  modal: {\n    height: 'auto',\n    maxWidth: 'calc(100% - 30px)',\n    overflow: 'hidden',\n  },\n})\n","import { Button } from '@gnosis.pm/safe-react-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport OpenInNew from '@material-ui/icons/OpenInNew'\nimport cn from 'classnames'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Link from 'src/components/layout/Link'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal from 'src/components/Modal'\nimport { getExplorerInfo } from 'src/config'\nimport { getDisableModuleTxData } from 'src/logic/safe/utils/modules'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\n\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { md, secondary } from 'src/theme/variables'\n\nimport { styles } from './style'\n\nconst useStyles = makeStyles(styles)\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`\n\nconst openIconStyle = {\n  height: md,\n  color: secondary,\n}\n\ninterface RemoveModuleModalProps {\n  onClose: () => void\n  selectedModule: ModulePair\n}\n\nconst RemoveModuleModal = ({ onClose, selectedModule }: RemoveModuleModalProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n  const dispatch = useDispatch()\n\n  const explorerInfo = getExplorerInfo(selectedModule[0])\n  const { url } = explorerInfo()\n\n  const removeSelectedModule = async (): Promise<void> => {\n    try {\n      const txData = getDisableModuleTxData(selectedModule, safeAddress)\n\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: safeAddress,\n          valueInWei: '0',\n          txData,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n        }),\n      )\n    } catch (e) {\n      console.error(`failed to remove the module ${selectedModule}`, e.message)\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        description=\"Remove the selected Module\"\n        handleClose={onClose}\n        paperClassName={classes.modal}\n        title=\"Remove Module\"\n        open\n      >\n        <Row align=\"center\" className={classes.modalHeading} grow>\n          <Paragraph className={classes.modalManage} noMargin weight=\"bolder\">\n            Remove Module\n          </Paragraph>\n          <IconButton disableRipple onClick={onClose}>\n            <Close className={classes.modalClose} />\n          </IconButton>\n        </Row>\n        <Hairline />\n        <Block className={classes.modalContainer}>\n          <Row className={classes.modalOwner}>\n            <Col align=\"center\" xs={1}>\n              <Identicon address={selectedModule[0]} diameter={32} />\n            </Col>\n            <Col xs={11}>\n              <Block className={cn(classes.modalName, classes.modalUserName)}>\n                <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                  {selectedModule[0]}\n                </Paragraph>\n                <Block className={classes.modalUser} justify=\"center\">\n                  <Paragraph color=\"disabled\" noMargin size=\"md\">\n                    {selectedModule[0]}\n                  </Paragraph>\n                  <Link className={classes.modalOpen} target=\"_blank\" to={url}>\n                    <OpenInNew style={openIconStyle} />\n                  </Link>\n                </Block>\n              </Block>\n            </Col>\n          </Row>\n          <Hairline />\n          <Row className={classes.modalDescription}>\n            <Paragraph noMargin>\n              After removing this module, any feature or app that uses this module might no longer work. If this Safe\n              requires more then one signature, the module removal will have to be confirmed by other owners as well.\n            </Paragraph>\n          </Row>\n        </Block>\n        <Hairline />\n        <Row align=\"center\" className={classes.modalButtonRow}>\n          <FooterWrapper>\n            <Button size=\"md\" color=\"secondary\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button color=\"error\" size=\"md\" variant=\"contained\" onClick={removeSelectedModule}>\n              Remove\n            </Button>\n          </FooterWrapper>\n        </Row>\n      </Modal>\n    </>\n  )\n}\n\nexport default RemoveModuleModal\n","import { Button, Text } from '@gnosis.pm/safe-react-components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport styled from 'styled-components'\nimport cn from 'classnames'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { generateColumns, ModuleAddressColumn, MODULES_TABLE_ADDRESS_ID } from './dataFetcher'\nimport RemoveModuleModal from './RemoveModuleModal'\nimport { styles } from './style'\n\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\nimport Table from 'src/components/Table'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Block from 'src/components/layout/Block'\nimport Identicon from 'src/components/Identicon'\nimport Row from 'src/components/layout/Row'\n\nconst REMOVE_MODULE_BTN_TEST_ID = 'remove-module-btn'\nconst MODULES_ROW_TEST_ID = 'owners-row'\n\nconst useStyles = makeStyles(styles)\n\nconst AddressText = styled(Text)`\n  margin-left: 12px;\n`\n\nconst TableActionButton = styled(Button)`\n  background-color: transparent;\n\n  &:hover {\n    background-color: transparent;\n  }\n`\n\ninterface ModulesTableProps {\n  moduleData: ModuleAddressColumn | null\n}\n\nconst ModulesTable = ({ moduleData }: ModulesTableProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const granted = useSelector(grantedSelector)\n\n  const [viewRemoveModuleModal, setViewRemoveModuleModal] = React.useState(false)\n  const hideRemoveModuleModal = () => setViewRemoveModuleModal(false)\n\n  const [selectedModule, setSelectedModule] = React.useState<ModulePair>()\n  const triggerRemoveSelectedModule = (module: ModulePair): void => {\n    setSelectedModule(module)\n    setViewRemoveModuleModal(true)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table\n          columns={columns}\n          data={moduleData}\n          defaultFixed\n          defaultOrderBy={MODULES_TABLE_ADDRESS_ID}\n          disablePagination\n          label=\"Modules\"\n          noBorder\n          size={moduleData?.length}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid={MODULES_ROW_TEST_ID}\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  const rowElement = row[columnId]\n\n                  return (\n                    <React.Fragment key={`${columnId}-${index}`}>\n                      <TableCell align={column.align} component=\"td\" key={columnId}>\n                        {columnId === MODULES_TABLE_ADDRESS_ID ? (\n                          <Block justify=\"left\">\n                            <Identicon address={rowElement[0]} diameter={32} />\n                            <AddressText size=\"lg\">{rowElement[0]}</AddressText>\n                          </Block>\n                        ) : (\n                          rowElement\n                        )}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        <Row align=\"end\" className={classes.actions}>\n                          {granted && (\n                            <TableActionButton\n                              size=\"md\"\n                              iconType=\"delete\"\n                              color=\"error\"\n                              variant=\"outlined\"\n                              onClick={() => triggerRemoveSelectedModule(rowElement)}\n                              data-testid={REMOVE_MODULE_BTN_TEST_ID}\n                            >\n                              {null}\n                            </TableActionButton>\n                          )}\n                        </Row>\n                      </TableCell>\n                    </React.Fragment>\n                  )\n                })}\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {viewRemoveModuleModal && selectedModule && (\n        <RemoveModuleModal onClose={hideRemoveModuleModal} selectedModule={selectedModule} />\n      )}\n    </>\n  )\n}\n\nexport default ModulesTable\n","import { List } from 'immutable'\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\n\nexport const MODULES_TABLE_ADDRESS_ID = 'address'\nexport const MODULES_TABLE_ACTIONS_ID = 'actions'\n\nexport type ModuleAddressColumn = { [MODULES_TABLE_ADDRESS_ID]: ModulePair }[]\n\nexport const getModuleData = (modulesList: ModulePair[] | null): ModuleAddressColumn | undefined => {\n  return modulesList?.map((modules) => ({\n    [MODULES_TABLE_ADDRESS_ID]: modules,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const addressColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: MODULES_TABLE_ADDRESS_ID,\n    label: 'Address',\n    order: false,\n  }\n\n  const actionsColumn: TableColumn = {\n    custom: true,\n    disablePadding: false,\n    id: MODULES_TABLE_ACTIONS_ID,\n    label: '',\n    order: false,\n  }\n\n  return List([addressColumn, actionsColumn])\n}\n","import { Loader, Text, theme, Title } from '@gnosis.pm/safe-react-components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { getModuleData } from './dataFetcher'\nimport { styles } from './style'\nimport ModulesTable from './ModulesTable'\n\nimport Block from 'src/components/layout/Block'\nimport { safeModulesSelector, safeNonceSelector } from 'src/logic/safe/store/selectors'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\n\nconst useStyles = makeStyles(styles)\n\nconst InfoText = styled(Text)`\n  margin-top: 16px;\n`\n\nconst Bold = styled.strong`\n  color: ${theme.colors.text};\n`\n\nconst NoModuleLegend = (): React.ReactElement => (\n  <InfoText color=\"secondaryLight\" size=\"xl\">\n    No modules enabled\n  </InfoText>\n)\n\nconst LoadingModules = (): React.ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <Block className={classes.container}>\n      <Loader size=\"md\" />\n    </Block>\n  )\n}\n\nconst Advanced = (): React.ReactElement => {\n  const classes = useStyles()\n  const nonce = useSelector(safeNonceSelector)\n  const modules = useSelector(safeModulesSelector)\n  const moduleData = modules ? getModuleData(modules) ?? null : null\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Advanced' })\n  }, [trackEvent])\n\n  return (\n    <>\n      {/* Nonce */}\n      <Block className={classes.container}>\n        <Title size=\"xs\" withoutMargin>\n          Safe Nonce\n        </Title>\n        <InfoText size=\"lg\">\n          For security reasons, transactions made with the Safe need to be executed in order. The nonce shows you which\n          transaction was executed most recently. You can find the nonce for a transaction in the transaction details.\n        </InfoText>\n        <InfoText color=\"secondaryLight\" size=\"xl\">\n          Current Nonce: <Bold>{nonce}</Bold>\n        </InfoText>\n      </Block>\n\n      {/* Modules */}\n      <Block className={classes.container}>\n        <Title size=\"xs\" withoutMargin>\n          Safe Modules\n        </Title>\n        <InfoText size=\"lg\">\n          Modules allow you to customize the access-control logic of your Safe. Modules are potentially risky, so make\n          sure to only use modules from trusted sources. Learn more about modules{' '}\n          <a\n            href=\"https://docs.gnosis.io/safe/docs/contracts_architecture/#3-module-management\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            here\n          </a>\n          .\n        </InfoText>\n\n        {!moduleData ? (\n          <NoModuleLegend />\n        ) : moduleData?.length === 0 ? (\n          <LoadingModules />\n        ) : (\n          <ModulesTable moduleData={moduleData} />\n        )}\n      </Block>\n    </>\n  )\n}\n\nexport default Advanced\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, minMaxLength, required, uniqueAddress } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { safeOwnersAddressesListSelector } from 'src/logic/safe/store/selectors'\n\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\n\nconst formMutators = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values) => void\n}\n\nexport const OwnerForm = ({ onClose, onSubmit }: OwnerFormProps): React.ReactElement => {\n  const classes = useStyles()\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const owners = useSelector(safeOwnersAddressesListSelector)\n  const ownerDoesntExist = uniqueAddress(owners)\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Add new owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm formMutators={formMutators} onSubmit={handleSubmit}>\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row margin=\"md\">\n                  <Paragraph>Add a new owner to the active Safe</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, minMaxLength(1, 50))}\n                    />\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button minWidth={140} onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button\n                  color=\"primary\"\n                  minWidth={140}\n                  testId={ADD_OWNER_NEXT_BTN_TEST_ID}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Next\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport classNames from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { safeNameSelector, safeOwnersSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\n\nimport { styles } from './style'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nexport const ADD_OWNER_SUBMIT_BTN_TEST_ID = 'add-owner-submit-btn'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ReviewAddOwner = ({ classes, onClickBack, onClose, onSubmit, values }) => {\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const safeName = useSelector(safeNameSelector)\n  const owners = useSelector(safeOwnersSelector)\n  useEffect(() => {\n    let isCurrent = true\n    const estimateGas = async () => {\n      const safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n\n      const txData = safeInstance.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress, safeAddress, txData)\n\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGas()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, values.ownerAddress, values.threshold])\n\n  const handleSubmit = () => {\n    onSubmit()\n  }\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Add new owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>3 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${values.threshold} out of ${(owners?.size || 0) + 1} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${(owners?.size || 0) + 1} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map((owner) => (\n              <React.Fragment key={owner.address}>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={1}>\n                    <Identicon address={owner.address} diameter={32} />\n                  </Col>\n                  <Col xs={11}>\n                    <Block className={classNames(classes.name, classes.userName)}>\n                      <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                        {owner.name}\n                      </Paragraph>\n                      <Block className={classes.user} justify=\"center\">\n                        <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                          {owner.address}\n                        </Paragraph>\n                        <CopyBtn content={owner.address} />\n                        <ExplorerButton explorerUrl={getExplorerInfo(owner.address)} />\n                      </Block>\n                    </Block>\n                  </Col>\n                </Row>\n                <Hairline />\n              </React.Fragment>\n            ))}\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                ADDING NEW OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwner}>\n              <Col align=\"center\" xs={1}>\n                <Identicon address={values.ownerAddress} diameter={32} />\n              </Col>\n              <Col xs={11}>\n                <Block className={classNames(classes.name, classes.userName)}>\n                  <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                    {values.ownerName}\n                  </Paragraph>\n                  <Block className={classes.user} justify=\"center\">\n                    <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                      {values.ownerAddress}\n                    </Paragraph>\n                    <CopyBtn content={values.ownerAddress} />\n                    <ExplorerButton explorerUrl={getExplorerInfo(values.ownerAddress)} />\n                  </Block>\n                </Block>\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n      </Block>\n      <Hairline />\n      <Block className={classes.gasCostsContainer}>\n        <Paragraph>\n          You&apos;re about to create a transaction and will have to confirm it with your currently connected wallet.\n          <br />\n          {`Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n        </Paragraph>\n      </Block>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClickBack}>\n          Back\n        </Button>\n        <Button\n          color=\"primary\"\n          minHeight={42}\n          minWidth={140}\n          onClick={handleSubmit}\n          testId={ADD_OWNER_SUBMIT_BTN_TEST_ID}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(ReviewAddOwner)\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  root: {\n    height: '372px',\n  },\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 2px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: lg,\n  },\n  address: {\n    marginRight: sm,\n  },\n  owner: {\n    padding: sm,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  selectedOwner: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#fff3e2',\n  },\n  user: {\n    justifyContent: 'left',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  gasCostsContainer: {\n    padding: `0 ${lg}`,\n    textAlign: 'center',\n    width: '100%',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { safeOwnersSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\n\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\n\nconst ThresholdForm = ({ classes, onClickBack, onClose, onSubmit }) => {\n  const threshold = useSelector(safeThresholdSelector) as number\n  const owners = useSelector(safeOwnersSelector)\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Add new owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm initialValues={{ threshold: threshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.formContainer}>\n              <Row>\n                <Paragraph className={classes.headingText} weight=\"bolder\">\n                  Set the required owner confirmations:\n                </Paragraph>\n              </Row>\n              <Row>\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n              </Row>\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                <Col xs={2}>\n                  <Field\n                    data-testid=\"threshold-select-input\"\n                    name=\"threshold\"\n                    render={(props) => (\n                      <>\n                        <SelectField {...props} disableError>\n                          {[...Array(Number(owners ? owners.size + 1 : 0))].map((x, index) => (\n                            <MenuItem key={index} value={`${index + 1}`}>\n                              {index + 1}\n                            </MenuItem>\n                          ))}\n                        </SelectField>\n                        {props.meta.error && props.meta.touched && (\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                            {props.meta.error}\n                          </Paragraph>\n                        )}\n                      </>\n                    )}\n                    validate={composeValidators(\n                      required,\n                      mustBeInteger,\n                      minValue(1),\n                      maxValue(owners ? owners.size + 1 : 0),\n                    )}\n                  />\n                </Col>\n                <Col xs={10}>\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                    out of {owners ? owners.size + 1 : 0} owner(s)\n                  </Paragraph>\n                </Col>\n              </Row>\n            </Block>\n            <Hairline />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Button minHeight={42} minWidth={140} onClick={onClickBack}>\n                Back\n              </Button>\n              <Button\n                color=\"primary\"\n                minHeight={42}\n                minWidth={140}\n                testId={ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Review\n              </Button>\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(ThresholdForm)\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  headingText: {\n    fontSize: md,\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { OwnerForm } from './screens/OwnerForm'\nimport ReviewAddOwner from './screens/Review'\nimport ThresholdForm from './screens/ThresholdForm'\n\nimport Modal from 'src/components/Modal'\nimport { addOrUpdateAddressBookEntry } from 'src/logic/addressBook/store/actions/addOrUpdateAddressBookEntry'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport addSafeOwner from 'src/logic/safe/store/actions/addSafeOwner'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\n\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nconst styles = createStyles({\n  biggerModalWindow: {\n    width: '775px',\n    minHeight: '500px',\n    height: 'auto',\n  },\n})\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendAddOwner = async (values: OwnerValues, safeAddress: string, dispatch: Dispatch): Promise<void> => {\n  const gnosisSafe = await getGnosisSafeInstanceAt(safeAddress)\n  const txData = gnosisSafe.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash) {\n    dispatch(addSafeOwner({ safeAddress, ownerName: values.ownerName, ownerAddress: values.ownerAddress }))\n  }\n}\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst AddOwner = ({ isOpen, onClose }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\n  const [values, setValues] = useState<any>({})\n  const dispatch = useDispatch()\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('selectOwner')\n      setValues({})\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewAddOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('selectOwner')\n    }\n  }\n\n  const ownerSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      ownerName: newValues.ownerName,\n      ownerAddress: checksumAddress(newValues.ownerAddress),\n    }))\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      threshold: newValues.threshold,\n    }))\n    setActiveScreen('reviewAddOwner')\n  }\n\n  const onAddOwner = async () => {\n    onClose()\n\n    try {\n      await sendAddOwner(values, safeAddress, dispatch)\n      dispatch(\n        addOrUpdateAddressBookEntry(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress })),\n      )\n    } catch (error) {\n      console.error('Error while removing an owner', error)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Add owner to Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName={classes.biggerModalWindow}\n      title=\"Add owner to Safe\"\n    >\n      <>\n        {activeScreen === 'selectOwner' && <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} />}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm onClickBack={onClickBack} onClose={onClose} onSubmit={thresholdSubmitted} />\n        )}\n        {activeScreen === 'reviewAddOwner' && (\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\n        )}\n      </>\n    </Modal>\n  )\n}\n\nexport default AddOwner\n","import { error, lg, md, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  container: {\n    padding: `${md} ${lg}`,\n  },\n  close: {\n    height: '35px',\n    width: '35px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  buttonEdit: {\n    color: '#fff',\n    backgroundColor: error,\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  smallerModalWindow: {\n    height: 'auto',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, minMaxLength, required } from 'src/components/forms/validator'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal from 'src/components/Modal'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addOrUpdateAddressBookEntry } from 'src/logic/addressBook/store/actions/addOrUpdateAddressBookEntry'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport editSafeOwner from 'src/logic/safe/store/actions/editSafeOwner'\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { sm } from 'src/theme/variables'\n\nimport { styles } from './style'\nimport { getExplorerInfo } from 'src/config'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype OwnProps = {\n  isOpen: boolean\n  onClose: () => void\n  ownerAddress: string\n  selectedOwnerName: string\n}\n\nconst EditOwnerComponent = ({ isOpen, onClose, ownerAddress, selectedOwnerName }: OwnProps): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const handleSubmit = (values) => {\n    const { ownerName } = values\n\n    dispatch(editSafeOwner({ safeAddress, ownerAddress, ownerName }))\n    dispatch(addOrUpdateAddressBookEntry(makeAddressBookEntry({ address: ownerAddress, name: ownerName })))\n    dispatch(enqueueSnackbar(NOTIFICATIONS.OWNER_NAME_CHANGE_EXECUTED_MSG))\n\n    onClose()\n  }\n\n  return (\n    <Modal\n      description=\"Edit owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName={classes.smallerModalWindow}\n      title=\"Edit owner from Safe\"\n    >\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Edit owner name\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.container}>\n              <Row margin=\"md\">\n                <Field\n                  component={TextField}\n                  initialValue={selectedOwnerName}\n                  name=\"ownerName\"\n                  placeholder=\"Owner name*\"\n                  testId={RENAME_OWNER_INPUT_TEST_ID}\n                  text=\"Owner name*\"\n                  type=\"text\"\n                  validate={composeValidators(required, minMaxLength(1, 50))}\n                />\n              </Row>\n              <Row>\n                <Block justify=\"center\">\n                  <Identicon address={ownerAddress} diameter={32} />\n                  <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ marginLeft: sm, marginRight: sm }}>\n                    {ownerAddress}\n                  </Paragraph>\n                  <CopyBtn content={ownerAddress} />\n                  <ExplorerButton explorerUrl={getExplorerInfo(ownerAddress)} />\n                </Block>\n              </Row>\n            </Block>\n            <Hairline />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Button minHeight={42} minWidth={140} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button\n                color=\"primary\"\n                minHeight={42}\n                minWidth={140}\n                testId={SAVE_OWNER_CHANGES_BTN_TEST_ID}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </Modal>\n  )\n}\n\nexport default EditOwnerComponent\n","import IconButton from '@material-ui/core/IconButton'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport classNames from 'classnames/bind'\nimport React from 'react'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\n\nimport { styles } from './style'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\nimport { getExplorerInfo } from 'src/config'\n\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\n\nconst CheckOwner = ({ classes, onClose, onSubmit, ownerAddress, ownerName }) => {\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"md\">\n          <Paragraph>Review the owner you want to remove from the active Safe:</Paragraph>\n        </Row>\n        <Row className={classes.owner}>\n          <Col align=\"center\" xs={1}>\n            <Identicon address={ownerAddress} diameter={32} />\n          </Col>\n          <Col xs={7}>\n            <Block className={classNames(classes.name, classes.userName)}>\n              <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                {ownerName}\n              </Paragraph>\n              <Block className={classes.user} justify=\"center\">\n                <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                  {ownerAddress}\n                </Paragraph>\n                <CopyBtn content={ownerAddress} />\n                <ExplorerButton explorerUrl={getExplorerInfo(ownerAddress)} />\n              </Block>\n            </Block>\n          </Col>\n        </Row>\n      </Block>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          minHeight={42}\n          minWidth={140}\n          onClick={handleSubmit}\n          testId={REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Next\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(CheckOwner)\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    lineHeight: 'normal',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  address: {\n    marginRight: sm,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  owner: {\n    alignItems: 'center',\n  },\n  user: {\n    justifyContent: 'left',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport classNames from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport { safeNameSelector, safeOwnersSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\n\nimport { styles } from './style'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\nimport { getOwnersWithNameFromAddressBook } from 'src/logic/addressBook/utils'\nimport { List } from 'immutable'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\n\nexport const REMOVE_OWNER_REVIEW_BTN_TEST_ID = 'remove-owner-review-btn'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ReviewRemoveOwner = ({ classes, onClickBack, onClose, onSubmit, ownerAddress, ownerName, values }) => {\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const safeName = useSelector(safeNameSelector)\n  const owners = useSelector(safeOwnersSelector)\n  const addressBook = useSelector(addressBookSelector)\n  const ownersWithAddressBookName = owners ? getOwnersWithNameFromAddressBook(addressBook, owners) : List([])\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const estimateGas = async () => {\n      const gnosisSafe = await getGnosisSafeInstanceAt(safeAddress)\n      const safeOwners = await gnosisSafe.methods.getOwners().call()\n      const index = safeOwners.findIndex((owner) => owner.toLowerCase() === ownerAddress.toLowerCase())\n      const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n      const txData = gnosisSafe.methods.removeOwner(prevAddress, ownerAddress, values.threshold).encodeABI()\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress, safeAddress, txData)\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGas()\n    return () => {\n      isCurrent = false\n    }\n  }, [ownerAddress, safeAddress, values.threshold])\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>3 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block>\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${values.threshold} out of ${owners ? owners.size - 1 : 0} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${owners ? owners.size - 1 : 0} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {ownersWithAddressBookName?.map(\n              (owner) =>\n                owner.address !== ownerAddress && (\n                  <React.Fragment key={owner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={1}>\n                        <Identicon address={owner.address} diameter={32} />\n                      </Col>\n                      <Col xs={11}>\n                        <Block className={classNames(classes.name, classes.userName)}>\n                          <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                            {owner.name}\n                          </Paragraph>\n                          <Block className={classes.user} justify=\"center\">\n                            <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                              {owner.address}\n                            </Paragraph>\n                            <CopyBtn content={owner.address} />\n                            <ExplorerButton explorerUrl={getExplorerInfo(owner.address)} />\n                          </Block>\n                        </Block>\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </React.Fragment>\n                ),\n            )}\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                REMOVING OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwner}>\n              <Col align=\"center\" xs={1}>\n                <Identicon address={ownerAddress} diameter={32} />\n              </Col>\n              <Col xs={11}>\n                <Block className={classNames(classes.name, classes.userName)}>\n                  <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                    {ownerName}\n                  </Paragraph>\n                  <Block className={classes.user} justify=\"center\">\n                    <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                      {ownerAddress}\n                    </Paragraph>\n                    <CopyBtn content={ownerAddress} />\n                    <ExplorerButton explorerUrl={getExplorerInfo(ownerAddress)} />\n                  </Block>\n                </Block>\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n      </Block>\n      <Hairline />\n      <Block className={classes.gasCostsContainer}>\n        <Paragraph>\n          You&apos;re about to create a transaction and will have to confirm it with your currently connected wallet.\n          <br />\n          {`Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n        </Paragraph>\n      </Block>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClickBack}>\n          Back\n        </Button>\n        <Button\n          color=\"primary\"\n          minHeight={42}\n          minWidth={140}\n          onClick={onSubmit}\n          testId={REMOVE_OWNER_REVIEW_BTN_TEST_ID}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(ReviewRemoveOwner)\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  root: {\n    height: '372px',\n  },\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    lineHeight: 'normal',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 1px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: lg,\n  },\n  address: {\n    marginRight: sm,\n  },\n  owner: {\n    padding: sm,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  selectedOwner: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#ffe6ea',\n  },\n  user: {\n    justifyContent: 'left',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  gasCostsContainer: {\n    padding: `0 ${lg}`,\n    textAlign: 'center',\n    width: '100%',\n  },\n})\n","import { createStyles } from '@material-ui/core/styles'\nimport { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    lineHeight: 'normal',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  headingText: {\n    fontSize: md,\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { safeOwnersSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\n\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\n\nconst useStyles = makeStyles(styles)\n\nconst ThresholdForm = ({ onClickBack, onClose, onSubmit }) => {\n  const classes = useStyles()\n  const owners = useSelector(safeOwnersSelector)\n  const threshold = useSelector(safeThresholdSelector) as number\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const defaultThreshold = threshold > 1 ? threshold - 1 : threshold\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 3</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm initialValues={{ threshold: defaultThreshold.toString() }} onSubmit={handleSubmit}>\n        {() => {\n          const numOptions = owners && owners.size > 1 ? owners.size - 1 : 1\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\n                    Set the required owner confirmations:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n                </Row>\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                  <Col xs={2}>\n                    <Field\n                      data-testid=\"threshold-select-input\"\n                      name=\"threshold\"\n                      render={(props) => (\n                        <>\n                          <SelectField {...props} disableError>\n                            {[...Array(Number(numOptions))].map((x, index) => (\n                              <MenuItem key={index} value={`${index + 1}`}>\n                                {index + 1}\n                              </MenuItem>\n                            ))}\n                          </SelectField>\n                          {props.meta.error && props.meta.touched && (\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                              {props.meta.error}\n                            </Paragraph>\n                          )}\n                        </>\n                      )}\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                    />\n                  </Col>\n                  <Col xs={10}>\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                      out of {owners ? owners.size - 1 : 0} owner(s)\n                    </Paragraph>\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button minHeight={42} minWidth={140} onClick={onClickBack}>\n                  Back\n                </Button>\n                <Button\n                  color=\"primary\"\n                  data-testid={REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID}\n                  minHeight={42}\n                  minWidth={140}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Review\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default ThresholdForm\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CheckOwner from './screens/CheckOwner'\nimport ReviewRemoveOwner from './screens/Review'\nimport ThresholdForm from './screens/ThresholdForm'\n\nimport Modal from 'src/components/Modal'\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport removeSafeOwner from 'src/logic/safe/store/actions/removeSafeOwner'\n\nimport { safeParamAddressFromStateSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nconst styles = createStyles({\n  biggerModalWindow: {\n    width: '775px',\n    minHeight: '500px',\n    height: 'auto',\n  },\n})\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendRemoveOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  ownerAddressToRemove: string,\n  ownerNameToRemove: string,\n  dispatch: Dispatch,\n  threshold?: number,\n): Promise<void> => {\n  const gnosisSafe = await getGnosisSafeInstanceAt(safeAddress)\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\n  const index = safeOwners.findIndex(\n    (ownerAddress) => ownerAddress.toLowerCase() === ownerAddressToRemove.toLowerCase(),\n  )\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n  const txData = gnosisSafe.methods.removeOwner(prevAddress, ownerAddressToRemove, values.threshold).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash && threshold === 1) {\n    dispatch(removeSafeOwner({ safeAddress, ownerAddress: ownerAddressToRemove }))\n  }\n}\n\ntype RemoveOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  ownerAddress: string\n  ownerName: string\n}\n\nconst RemoveOwner = ({ isOpen, onClose, ownerAddress, ownerName }: RemoveOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [values, setValues] = useState<any>({})\n  const dispatch = useDispatch()\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n  const threshold = useSelector(safeThresholdSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n      setValues({})\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewRemoveOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('checkOwner')\n    }\n  }\n\n  const ownerSubmitted = () => {\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    values.threshold = newValues.threshold\n    setValues(values)\n    setActiveScreen('reviewRemoveOwner')\n  }\n\n  const onRemoveOwner = () => {\n    onClose()\n    sendRemoveOwner(values, safeAddress, ownerAddress, ownerName, dispatch, threshold)\n  }\n\n  return (\n    <Modal\n      description=\"Remove owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName={classes.biggerModalWindow}\n      title=\"Remove owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && (\n          <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} ownerAddress={ownerAddress} ownerName={ownerName} />\n        )}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm onClickBack={onClickBack} onClose={onClose} onSubmit={thresholdSubmitted} />\n        )}\n        {activeScreen === 'reviewRemoveOwner' && (\n          <ReviewRemoveOwner\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onRemoveOwner}\n            ownerAddress={ownerAddress}\n            ownerName={ownerName}\n            values={values}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n\nexport default RemoveOwner\n","import IconButton from '@material-ui/core/IconButton'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport classNames from 'classnames/bind'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, minMaxLength, required, uniqueAddress } from 'src/components/forms/validator'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { safeOwnersAddressesListSelector } from 'src/logic/safe/store/selectors'\n\nimport { styles } from './style'\nimport { getExplorerInfo } from 'src/config'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\n\nconst formMutators = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n}\n\nconst OwnerForm = ({ classes, onClose, onSubmit, ownerAddress, ownerName }) => {\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const owners = useSelector(safeOwnersAddressesListSelector)\n  const ownerDoesntExist = uniqueAddress(owners)\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Replace owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm formMutators={formMutators} onSubmit={handleSubmit}>\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph>\n                    Review the owner you want to replace from the active Safe. Then specify the new owner you want to\n                    replace it with:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph>Current owner</Paragraph>\n                </Row>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={1}>\n                    <Identicon address={ownerAddress} diameter={32} />\n                  </Col>\n                  <Col xs={7}>\n                    <Block className={classNames(classes.name, classes.userName)}>\n                      <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                        {ownerName}\n                      </Paragraph>\n                      <Block className={classes.user} justify=\"center\">\n                        <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                          {ownerAddress}\n                        </Paragraph>\n                        <CopyBtn content={ownerAddress} />\n                        <ExplorerButton explorerUrl={getExplorerInfo(ownerAddress)} />\n                      </Block>\n                    </Block>\n                  </Col>\n                </Row>\n                <Row>\n                  <Paragraph>New owner</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      className={classes.addressInput}\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, minMaxLength(1, 50))}\n                    />\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      className={classes.addressInput}\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button className={classes.button} minWidth={140} onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button\n                  className={classes.button}\n                  color=\"primary\"\n                  minWidth={140}\n                  testId={REPLACE_OWNER_NEXT_BTN_TEST_ID}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Next\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(OwnerForm)\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  address: {\n    marginRight: sm,\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  owner: {\n    alignItems: 'center',\n  },\n  user: {\n    justifyContent: 'left',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  name: {\n    marginRight: `${sm}`,\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport classNames from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { List } from 'immutable'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport {\n  safeNameSelector,\n  safeOwnersSelector,\n  safeParamAddressFromStateSelector,\n  safeThresholdSelector,\n} from 'src/logic/safe/store/selectors'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { getOwnersWithNameFromAddressBook } from 'src/logic/addressBook/utils'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\n\nimport { styles } from './style'\n\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ReviewRemoveOwner = ({ classes, onClickBack, onClose, onSubmit, ownerAddress, ownerName, values }) => {\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const safeName = useSelector(safeNameSelector)\n  const owners = useSelector(safeOwnersSelector)\n  const threshold = useSelector(safeThresholdSelector)\n  const addressBook = useSelector(addressBookSelector)\n  const ownersWithAddressBookName = owners ? getOwnersWithNameFromAddressBook(addressBook, owners) : List([])\n\n  useEffect(() => {\n    let isCurrent = true\n    const estimateGas = async () => {\n      const gnosisSafe = await getGnosisSafeInstanceAt(safeAddress)\n      const safeOwners = await gnosisSafe.methods.getOwners().call()\n      const index = safeOwners.findIndex((owner) => owner.toLowerCase() === ownerAddress.toLowerCase())\n      const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n      const txData = gnosisSafe.methods.swapOwner(prevAddress, ownerAddress, values.ownerAddress).encodeABI()\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress, safeAddress, txData)\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGas()\n    return () => {\n      isCurrent = false\n    }\n  }, [ownerAddress, safeAddress, values.ownerAddress])\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Replace owner\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${threshold} out of ${owners?.size || 0} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${owners?.size || 0} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {ownersWithAddressBookName?.map(\n              (owner) =>\n                owner.address !== ownerAddress && (\n                  <React.Fragment key={owner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={1}>\n                        <Identicon address={owner.address} diameter={32} />\n                      </Col>\n                      <Col xs={11}>\n                        <Block className={classNames(classes.name, classes.userName)}>\n                          <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                            {owner.name}\n                          </Paragraph>\n                          <Block className={classes.user} justify=\"center\">\n                            <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                              {owner.address}\n                            </Paragraph>\n                            <CopyBtn content={owner.address} />\n                            <ExplorerButton explorerUrl={getExplorerInfo(owner.address)} />\n                          </Block>\n                        </Block>\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </React.Fragment>\n                ),\n            )}\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                REMOVING OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwnerRemoved}>\n              <Col align=\"center\" xs={1}>\n                <Identicon address={ownerAddress} diameter={32} />\n              </Col>\n              <Col xs={11}>\n                <Block className={classNames(classes.name, classes.userName)}>\n                  <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                    {ownerName}\n                  </Paragraph>\n                  <Block className={classes.user} justify=\"center\">\n                    <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                      {ownerAddress}\n                    </Paragraph>\n                    <CopyBtn content={ownerAddress} />\n                    <ExplorerButton explorerUrl={getExplorerInfo(ownerAddress)} />\n                  </Block>\n                </Block>\n              </Col>\n            </Row>\n            <Row align=\"center\" className={classes.info}>\n              <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                ADDING NEW OWNER &darr;\n              </Paragraph>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwnerAdded}>\n              <Col align=\"center\" xs={1}>\n                <Identicon address={values.ownerAddress} diameter={32} />\n              </Col>\n              <Col xs={11}>\n                <Block className={classNames(classes.name, classes.userName)}>\n                  <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                    {values.ownerName}\n                  </Paragraph>\n                  <Block className={classes.user} justify=\"center\">\n                    <Paragraph className={classes.address} color=\"disabled\" noMargin size=\"md\">\n                      {values.ownerAddress}\n                    </Paragraph>\n                    <CopyBtn content={values.ownerAddress} />\n                    <ExplorerButton explorerUrl={getExplorerInfo(values.ownerAddress)} />\n                  </Block>\n                </Block>\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n      </Block>\n      <Hairline />\n      <Block className={classes.gasCostsContainer}>\n        <Paragraph>\n          You&apos;re about to create a transaction and will have to confirm it with your currently connected wallet.\n          <br />\n          {`Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n        </Paragraph>\n      </Block>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClickBack}>\n          Back\n        </Button>\n        <Button\n          color=\"primary\"\n          minHeight={42}\n          minWidth={140}\n          onClick={onSubmit}\n          testId={REPLACE_OWNER_SUBMIT_BTN_TEST_ID}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(ReviewRemoveOwner)\n","import { background, border, lg, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  root: {\n    height: '372px',\n  },\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n    lineHeight: 'normal',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  address: {\n    marginRight: sm,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 1px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: lg,\n  },\n  owner: {\n    padding: sm,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  selectedOwnerRemoved: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#ffe6ea',\n  },\n  selectedOwnerAdded: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#fff3e2',\n  },\n  user: {\n    justifyContent: 'left',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  gasCostsContainer: {\n    padding: `0 ${lg}`,\n    textAlign: 'center',\n    width: '100%',\n  },\n})\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport OwnerForm from './screens/OwnerForm'\nimport ReviewReplaceOwner from './screens/Review'\n\nimport Modal from 'src/components/Modal'\nimport { addOrUpdateAddressBookEntry } from 'src/logic/addressBook/store/actions/addOrUpdateAddressBookEntry'\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport replaceSafeOwner from 'src/logic/safe/store/actions/replaceSafeOwner'\nimport { safeParamAddressFromStateSelector, safeThresholdSelector } from 'src/logic/safe/store/selectors'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nconst styles = createStyles({\n  biggerModalWindow: {\n    width: '775px',\n    minHeight: '500px',\n    height: 'auto',\n  },\n})\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendReplaceOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  threshold?: number,\n): Promise<void> => {\n  const gnosisSafe = await getGnosisSafeInstanceAt(safeAddress)\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\n  const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, ownerAddressToRemove))\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n  const txData = gnosisSafe.methods.swapOwner(prevAddress, ownerAddressToRemove, values.ownerAddress).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash && threshold === 1) {\n    dispatch(\n      replaceSafeOwner({\n        safeAddress,\n        oldOwnerAddress: ownerAddressToRemove,\n        ownerAddress: values.ownerAddress,\n        ownerName: values.ownerName,\n      }),\n    )\n  }\n}\n\ntype ReplaceOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  ownerAddress: string\n  ownerName: string\n}\n\nconst ReplaceOwner = ({ isOpen, onClose, ownerAddress, ownerName }: ReplaceOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [values, setValues] = useState<any>({})\n  const dispatch = useDispatch()\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n  const threshold = useSelector(safeThresholdSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n      setValues({})\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => setActiveScreen('checkOwner')\n\n  const ownerSubmitted = (newValues) => {\n    const { ownerAddress, ownerName } = newValues\n    const checksumAddr = checksumAddress(ownerAddress)\n    values.ownerName = ownerName\n    values.ownerAddress = checksumAddr\n    setValues(values)\n    setActiveScreen('reviewReplaceOwner')\n  }\n\n  const onReplaceOwner = async () => {\n    onClose()\n    try {\n      await sendReplaceOwner(values, safeAddress, ownerAddress, dispatch, threshold)\n\n      dispatch(\n        addOrUpdateAddressBookEntry(makeAddressBookEntry({ address: values.ownerAddress, name: values.ownerName })),\n      )\n    } catch (error) {\n      console.error('Error while removing an owner', error)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Replace owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName={classes.biggerModalWindow}\n      title=\"Replace owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && (\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} ownerAddress={ownerAddress} ownerName={ownerName} />\n        )}\n        {activeScreen === 'reviewReplaceOwner' && (\n          <ReviewReplaceOwner\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onReplaceOwner}\n            ownerAddress={ownerAddress}\n            ownerName={ownerName}\n            values={values}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n\nexport default ReplaceOwner\n","import { lg, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  formContainer: {\n    minHeight: '420px',\n  },\n  title: {\n    padding: lg,\n    paddingBottom: 0,\n  },\n  annotation: {\n    paddingLeft: lg,\n  },\n  hide: {\n    '&:hover': {\n      backgroundColor: '#fff3e2',\n    },\n    '&:hover $actions': {\n      visibility: 'initial',\n    },\n  },\n  actions: {\n    justifyContent: 'flex-end',\n    visibility: 'hidden',\n    minWidth: '100px',\n  },\n  noBorderBottom: {\n    '& > td': {\n      borderBottom: 'none',\n    },\n  },\n  editOwnerIcon: {\n    cursor: 'pointer',\n  },\n  replaceOwnerIcon: {\n    marginLeft: lg,\n    cursor: 'pointer',\n  },\n  controlsRow: {\n    backgroundColor: 'white',\n    padding: lg,\n    borderRadius: sm,\n  },\n  removeOwnerIcon: {\n    marginLeft: lg,\n    cursor: 'pointer',\n  },\n})\n","import React, { useState, useEffect } from 'react'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { makeStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport { List } from 'immutable'\n\nimport RemoveOwnerIcon from '../assets/icons/bin.svg'\n\nimport AddOwnerModal from './AddOwnerModal'\nimport EditOwnerModal from './EditOwnerModal'\nimport OwnerAddressTableCell from './OwnerAddressTableCell'\nimport RemoveOwnerModal from './RemoveOwnerModal'\nimport ReplaceOwnerModal from './ReplaceOwnerModal'\nimport RenameOwnerIcon from './assets/icons/rename-owner.svg'\nimport ReplaceOwnerIcon from './assets/icons/replace-owner.svg'\nimport { OWNERS_TABLE_ADDRESS_ID, OWNERS_TABLE_NAME_ID, generateColumns, getOwnerData } from './dataFetcher'\nimport { styles } from './style'\n\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Heading from 'src/components/layout/Heading'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph/index'\nimport Row from 'src/components/layout/Row'\nimport { getOwnersWithNameFromAddressBook } from 'src/logic/addressBook/utils'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\nimport { SafeOwner } from 'src/logic/safe/store/models/safe'\n\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  addressBook: AddressBookState\n  granted: boolean\n  owners: List<SafeOwner>\n}\n\nconst ManageOwners = ({ addressBook, granted, owners }: Props): React.ReactElement => {\n  const { trackEvent } = useAnalytics()\n  const classes = useStyles()\n\n  const [selectedOwnerAddress, setSelectedOwnerAddress] = useState('')\n  const [selectedOwnerName, setSelectedOwnerName] = useState('')\n  const [modalsStatus, setModalStatus] = useState({\n    showAddOwner: false,\n    showRemoveOwner: false,\n    showReplaceOwner: false,\n    showEditOwner: false,\n  })\n\n  const onShow = (action, row?: any) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !prevState[`show${action}`],\n    }))\n    setSelectedOwnerAddress(row && row.address)\n    setSelectedOwnerName(row && row.name)\n  }\n\n  const onHide = (action) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\n    }))\n    setSelectedOwnerAddress('')\n    setSelectedOwnerName('')\n  }\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Owners' })\n  }, [trackEvent])\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const ownersWithAddressBookName = getOwnersWithNameFromAddressBook(addressBook, owners)\n  const ownerData = getOwnerData(ownersWithAddressBookName)\n\n  return (\n    <>\n      <Block className={classes.formContainer}>\n        <Heading className={classes.title} tag=\"h2\">\n          Manage Safe Owners\n        </Heading>\n        <Paragraph className={classes.annotation}>\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\n          with Gnosis or any third parties.\n        </Paragraph>\n        <TableContainer>\n          <Table\n            columns={columns}\n            data={ownerData}\n            defaultFixed\n            defaultOrderBy={OWNERS_TABLE_NAME_ID}\n            disablePagination\n            label=\"Owners\"\n            noBorder\n            size={ownerData.size}\n          >\n            {(sortedData) =>\n              sortedData.map((row, index) => (\n                <TableRow\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                  data-testid={OWNERS_ROW_TEST_ID}\n                  key={index}\n                >\n                  {autoColumns.map((column: any) => (\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\n                        <OwnerAddressTableCell address={row[column.id]} showLinks />\n                      ) : (\n                        row[column.id]\n                      )}\n                    </TableCell>\n                  ))}\n                  <TableCell component=\"td\">\n                    <Row align=\"end\" className={classes.actions}>\n                      <Img\n                        alt=\"Edit owner\"\n                        className={classes.editOwnerIcon}\n                        onClick={onShow('EditOwner', row)}\n                        src={RenameOwnerIcon}\n                        testId={RENAME_OWNER_BTN_TEST_ID}\n                      />\n                      {granted && (\n                        <>\n                          <Img\n                            alt=\"Replace owner\"\n                            className={classes.replaceOwnerIcon}\n                            onClick={onShow('ReplaceOwner', row)}\n                            src={ReplaceOwnerIcon}\n                            testId={REPLACE_OWNER_BTN_TEST_ID}\n                          />\n                          {ownerData.size > 1 && (\n                            <Img\n                              alt=\"Remove owner\"\n                              className={classes.removeOwnerIcon}\n                              onClick={onShow('RemoveOwner', row)}\n                              src={RemoveOwnerIcon}\n                              testId={REMOVE_OWNER_BTN_TEST_ID}\n                            />\n                          )}\n                        </>\n                      )}\n                    </Row>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </Table>\n        </TableContainer>\n      </Block>\n      {granted && (\n        <>\n          <Hairline />\n          <Row align=\"end\" className={classes.controlsRow} grow>\n            <Col end=\"xs\">\n              <Button\n                color=\"primary\"\n                onClick={onShow('AddOwner')}\n                size=\"small\"\n                testId={ADD_OWNER_BTN_TEST_ID}\n                variant=\"contained\"\n              >\n                Add new owner\n              </Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\n      <RemoveOwnerModal\n        isOpen={modalsStatus.showRemoveOwner}\n        onClose={onHide('RemoveOwner')}\n        ownerAddress={selectedOwnerAddress}\n        ownerName={selectedOwnerName}\n      />\n      <ReplaceOwnerModal\n        isOpen={modalsStatus.showReplaceOwner}\n        onClose={onHide('ReplaceOwner')}\n        ownerAddress={selectedOwnerAddress}\n        ownerName={selectedOwnerName}\n      />\n      <EditOwnerModal\n        isOpen={modalsStatus.showEditOwner}\n        onClose={onHide('EditOwner')}\n        ownerAddress={selectedOwnerAddress}\n        selectedOwnerName={selectedOwnerName}\n      />\n    </>\n  )\n}\n\nexport default ManageOwners\n","import { List } from 'immutable'\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { SafeOwner } from 'src/logic/safe/store/models/safe'\n\nexport const OWNERS_TABLE_NAME_ID = 'name'\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\n\nexport const getOwnerData = (owners: List<SafeOwner>): List<{ address: string; name: string }> => {\n  return owners.map((owner) => ({\n    [OWNERS_TABLE_NAME_ID]: owner.name,\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const nameColumn: TableColumn = {\n    id: OWNERS_TABLE_NAME_ID,\n    order: false,\n    disablePadding: false,\n    label: 'Name',\n    width: 150,\n    custom: false,\n    align: 'left',\n  }\n\n  const addressColumn: TableColumn = {\n    id: OWNERS_TABLE_ADDRESS_ID,\n    order: false,\n    disablePadding: false,\n    label: 'Address',\n    custom: false,\n    align: 'left',\n  }\n\n  const actionsColumn: TableColumn = {\n    id: OWNERS_TABLE_ACTIONS_ID,\n    order: false,\n    disablePadding: false,\n    label: '',\n    custom: true,\n  }\n\n  return List([nameColumn, addressColumn, actionsColumn])\n}\n","import { createStyles } from '@material-ui/core/styles'\nimport { background, error, lg, md, sm } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  heading: {\n    boxSizing: 'border-box',\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    padding: `${sm} ${lg}`,\n  },\n  container: {\n    minHeight: '369px',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  close: {\n    height: '35px',\n    width: '35px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  buttonRemove: {\n    color: '#fff',\n    backgroundColor: error,\n    height: '42px',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  userName: {\n    whiteSpace: 'nowrap',\n  },\n  owner: {\n    backgroundColor: background,\n    padding: md,\n    alignItems: 'center',\n  },\n  user: {\n    justifyContent: 'left',\n  },\n  description: {\n    padding: md,\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  modal: {\n    height: 'auto',\n    maxWidth: 'calc(100% - 30px)',\n    overflow: 'hidden',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport OpenInNew from '@material-ui/icons/OpenInNew'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getExplorerInfo } from 'src/config'\n\nimport { styles } from './style'\n\nimport Identicon from 'src/components/Identicon'\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Link from 'src/components/layout/Link'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport removeSafe from 'src/logic/safe/store/actions/removeSafe'\nimport { safeNameSelector, safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { md, secondary } from 'src/theme/variables'\n\nconst openIconStyle = {\n  height: md,\n  color: secondary,\n}\n\nconst useStyles = makeStyles(styles)\n\nconst RemoveSafeComponent = ({ isOpen, onClose }) => {\n  const classes = useStyles()\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const safeName = useSelector(safeNameSelector)\n  const dispatch = useDispatch()\n  const explorerInfo = getExplorerInfo(safeAddress)\n  const { url } = explorerInfo()\n\n  return (\n    <Modal\n      description=\"Remove the selected Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName={classes.modal}\n      title=\"Remove Safe\"\n    >\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove Safe\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <Row className={classes.owner}>\n          <Col align=\"center\" xs={1}>\n            <Identicon address={safeAddress} diameter={32} />\n          </Col>\n          <Col xs={11}>\n            <Block className={classNames(classes.name, classes.userName)}>\n              <Paragraph noMargin size=\"lg\" weight=\"bolder\">\n                {safeName}\n              </Paragraph>\n              <Block className={classes.user} justify=\"center\">\n                <Paragraph color=\"disabled\" noMargin size=\"md\">\n                  {safeAddress}\n                </Paragraph>\n                <Link className={classes.open} target=\"_blank\" to={url}>\n                  <OpenInNew style={openIconStyle} />\n                </Link>\n              </Block>\n            </Block>\n          </Col>\n        </Row>\n        <Hairline />\n        <Row className={classes.description}>\n          <Paragraph noMargin>\n            Removing a Safe only removes it from your interface. <b>It does not delete the Safe</b>. You can always add\n            it back using the Safe&apos;s address.\n          </Paragraph>\n        </Row>\n      </Block>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minHeight={42} minWidth={140} onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          className={classes.buttonRemove}\n          minWidth={140}\n          onClick={() => {\n            dispatch(removeSafe(safeAddress))\n            onClose()\n            // using native redirect in order to avoid problems in several components\n            // trying to access references of the removed safe.\n            window.location.href = '/app/'\n          }}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Remove\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n\nexport const RemoveSafeModal = RemoveSafeComponent\n","import { createStyles } from '@material-ui/core/styles'\nimport { boldFont, border, lg, sm, connected } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  formContainer: {\n    padding: lg,\n  },\n  root: {\n    display: 'flex',\n    maxWidth: '460px',\n  },\n  saveBtn: {\n    fontWeight: boldFont,\n    marginRight: sm,\n  },\n  controlsRow: {\n    borderTop: `2px solid ${border}`,\n    bottom: 0,\n    boxSizing: 'border-box',\n    padding: lg,\n    position: 'absolute',\n    width: '100%',\n  },\n  versionNumber: {\n    height: '21px',\n  },\n  link: {\n    color: `${connected}`,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n})\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport {\n  DEFAULT_FALLBACK_HANDLER_ADDRESS,\n  MULTI_SEND_ADDRESS,\n  SAFE_MASTER_COPY_ADDRESS,\n  getGnosisSafeInstanceAt,\n} from 'src/logic/contracts/safeContracts'\nimport { DELEGATE_CALL } from 'src/logic/safe/transactions'\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { MultiSend } from 'src/types/contracts/MultiSend.d'\n\ninterface MultiSendTx {\n  operation: number\n  to: string\n  value: number\n  data: string\n}\n\nexport const getEncodedMultiSendCallData = (txs: MultiSendTx[], web3: Web3): string => {\n  const multiSendAbi: AbiItem[] = [\n    {\n      type: 'function',\n      name: 'multiSend',\n      constant: false,\n      payable: false,\n      stateMutability: 'nonpayable',\n      inputs: [{ type: 'bytes', name: 'transactions' }],\n      outputs: [],\n    },\n  ]\n  const multiSend = (new web3.eth.Contract(multiSendAbi, MULTI_SEND_ADDRESS) as unknown) as MultiSend\n  const encodedMultiSendCallData = multiSend.methods\n    .multiSend(\n      `0x${txs\n        .map((tx) =>\n          [\n            web3.eth.abi.encodeParameter('uint8', 0).slice(-2),\n            web3.eth.abi.encodeParameter('address', tx.to).slice(-40),\n            web3.eth.abi.encodeParameter('uint256', tx.value).slice(-64),\n            web3.eth.abi.encodeParameter('uint256', web3.utils.hexToBytes(tx.data).length).slice(-64),\n            tx.data.replace(/^0x/, ''),\n          ].join(''),\n        )\n        .join('')}`,\n    )\n    .encodeABI()\n\n  return encodedMultiSendCallData\n}\n\nexport const upgradeSafeToLatestVersion = async (safeAddress: string, createTransaction): Promise<void> => {\n  const safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n  const fallbackHandlerTxData = safeInstance.methods.setFallbackHandler(DEFAULT_FALLBACK_HANDLER_ADDRESS).encodeABI()\n  const updateSafeTxData = safeInstance.methods.changeMasterCopy(SAFE_MASTER_COPY_ADDRESS).encodeABI()\n  const txs = [\n    {\n      operation: 0,\n      to: safeAddress,\n      value: 0,\n      data: updateSafeTxData,\n    },\n    {\n      operation: 0,\n      to: safeAddress,\n      value: 0,\n      data: fallbackHandlerTxData,\n    },\n  ]\n\n  const web3 = getWeb3()\n  const encodeMultiSendCallData = getEncodedMultiSendCallData(txs, web3)\n  createTransaction({\n    safeAddress,\n    to: MULTI_SEND_ADDRESS,\n    valueInWei: 0,\n    txData: encodeMultiSendCallData,\n    notifiedTransaction: 'STANDARD_TX',\n    enqueueSnackbar: () => {},\n    closeSnackbar: () => {},\n    operation: DELEGATE_CALL,\n  })\n\n  return\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport { withStyles } from '@material-ui/styles'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { styles } from './style'\n\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { upgradeSafeToLatestVersion } from 'src/logic/safe/utils/upgradeSafe'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\n\nconst UpdateSafeModal = ({ classes, onClose, safeAddress }) => {\n  const dispatch = useDispatch()\n  const handleSubmit = async () => {\n    // Call the update safe method\n    await upgradeSafeToLatestVersion(safeAddress, bindActionCreators(createTransaction, dispatch))\n    onClose()\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n          Update to new Safe version\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.modalContent}>\n              <Row>\n                <Paragraph>\n                  Update now to take advantage of new features and the highest security standards available.\n                </Paragraph>\n                <Block>\n                  This update includes:\n                  <ul>\n                    <li>Compatibility with new asset types (ERC-721 / ERC-1155)</li>\n                    <li>Improved interoperability with modules</li>\n                    <li>Minor security improvements</li>\n                  </ul>\n                </Block>\n                <Paragraph>\n                  You will need to confirm this update just like any other transaction. This means other owners will\n                  have to confirm the update in case more than one confirmation is required for this Safe.\n                </Paragraph>\n              </Row>\n            </Block>\n            <Hairline style={{ position: 'absolute', bottom: 85 }} />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Button minWidth={140} onClick={onClose}>\n                Back\n              </Button>\n              <Button color=\"primary\" minWidth={140} type=\"submit\" variant=\"contained\">\n                Update Safe\n              </Button>\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(UpdateSafeModal)\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: '20px',\n  },\n  close: {\n    height: '35px',\n    width: '35px',\n  },\n  modalContent: {\n    padding: `${md} ${lg}`,\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, minMaxLength, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { getNotificationsFromTxType, enhanceSnackbarForAction } from 'src/logic/notifications'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport UpdateSafeModal from 'src/routes/safe/components/Settings/UpdateSafeModal'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport updateSafe from 'src/logic/safe/store/actions/updateSafe'\nimport Link from 'src/components/layout/Link'\nimport {\n  latestMasterContractVersionSelector,\n  safeCurrentVersionSelector,\n  safeNameSelector,\n  safeNeedsUpdateSelector,\n  safeParamAddressFromStateSelector,\n} from 'src/logic/safe/store/selectors'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\n\nexport const SAFE_NAME_INPUT_TEST_ID = 'safe-name-input'\nexport const SAFE_NAME_SUBMIT_BTN_TEST_ID = 'change-safe-name-btn'\nexport const SAFE_NAME_UPDATE_SAFE_BTN_TEST_ID = 'update-safe-name-btn'\n\nconst useStyles = makeStyles(styles)\n\nconst SafeDetails = (): React.ReactElement => {\n  const classes = useStyles()\n  const isUserOwner = useSelector(grantedSelector)\n  const latestMasterContractVersion = useSelector(latestMasterContractVersionSelector)\n  const dispatch = useDispatch()\n  const safeName = useSelector(safeNameSelector)\n  const safeNeedsUpdate = useSelector(safeNeedsUpdateSelector)\n  const safeCurrentVersion = useSelector(safeCurrentVersionSelector)\n  const { trackEvent } = useAnalytics()\n\n  const [isModalOpen, setModalOpen] = React.useState(false)\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n\n  const toggleModal = () => {\n    setModalOpen((prevOpen) => !prevOpen)\n  }\n\n  const handleSubmit = (values) => {\n    dispatch(updateSafe({ address: safeAddress, name: values.safeName }))\n\n    const notification = getNotificationsFromTxType(TX_NOTIFICATION_TYPES.SAFE_NAME_CHANGE_TX)\n    dispatch(enqueueSnackbar(enhanceSnackbarForAction(notification.afterExecution.noMoreConfirmationsNeeded)))\n  }\n\n  const handleUpdateSafe = () => {\n    setModalOpen(true)\n  }\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Details' })\n  }, [trackEvent])\n\n  return (\n    <>\n      <GnoForm onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.formContainer}>\n              <Heading tag=\"h2\">Safe Version</Heading>\n              <Row align=\"end\" grow>\n                <Paragraph className={classes.versionNumber}>\n                  <Link\n                    className={classes.link}\n                    color=\"black\"\n                    target=\"_blank\"\n                    to=\"https://github.com/gnosis/safe-contracts/releases\"\n                  >\n                    {safeCurrentVersion}\n                    {safeNeedsUpdate && ` (there's a newer version: ${latestMasterContractVersion})`}\n                  </Link>\n                </Paragraph>\n              </Row>\n              {safeNeedsUpdate && isUserOwner ? (\n                <Row align=\"end\" grow>\n                  <Paragraph>\n                    <Button\n                      className={classes.saveBtn}\n                      color=\"primary\"\n                      onClick={handleUpdateSafe}\n                      size=\"small\"\n                      testId={SAFE_NAME_UPDATE_SAFE_BTN_TEST_ID}\n                      variant=\"contained\"\n                    >\n                      Update Safe\n                    </Button>\n                  </Paragraph>\n                </Row>\n              ) : null}\n            </Block>\n            <Block className={classes.formContainer}>\n              <Heading tag=\"h2\">Modify Safe name</Heading>\n              <Paragraph>\n                You can change the name of this Safe. This name is only stored locally and never shared with Gnosis or\n                any third parties.\n              </Paragraph>\n              <Block className={classes.root}>\n                <Field\n                  component={TextField}\n                  defaultValue={safeName}\n                  name=\"safeName\"\n                  placeholder=\"Safe name*\"\n                  testId={SAFE_NAME_INPUT_TEST_ID}\n                  text=\"Safe name*\"\n                  type=\"text\"\n                  validate={composeValidators(required, minMaxLength(1, 50))}\n                />\n              </Block>\n            </Block>\n            <Row align=\"end\" className={classes.controlsRow} grow>\n              <Col end=\"xs\">\n                <Button\n                  className={classes.saveBtn}\n                  color=\"primary\"\n                  size=\"small\"\n                  testId={SAFE_NAME_SUBMIT_BTN_TEST_ID}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Save\n                </Button>\n              </Col>\n            </Row>\n            <Modal description=\"Update Safe\" handleClose={toggleModal} open={isModalOpen} title=\"Update Safe\">\n              <UpdateSafeModal onClose={toggleModal} safeAddress={safeAddress} />\n            </Modal>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default SafeDetails\n","import IconButton from '@material-ui/core/IconButton'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { useEffect, useState } from 'react'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getNetworkInfo } from 'src/config'\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, differentFrom, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\n\nconst THRESHOLD_FIELD_NAME = 'threshold'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ChangeThreshold = ({ classes, onChangeThreshold, onClose, owners, safeAddress, threshold }) => {\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n\n  useEffect(() => {\n    let isCurrent = true\n    const estimateGasCosts = async () => {\n      const safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n      const txData = safeInstance.methods.changeThreshold('1').encodeABI()\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress, safeAddress, txData)\n      const gasCostsAsEth = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCostsAsEth)\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGasCosts()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress])\n\n  const handleSubmit = (values) => {\n    const newThreshold = values[THRESHOLD_FIELD_NAME]\n\n    onClose()\n    onChangeThreshold(newThreshold)\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n          Change required confirmations\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm initialValues={{ threshold: threshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.modalContent}>\n              <Row>\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n              </Row>\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                <Col xs={2}>\n                  <Field\n                    data-testid=\"threshold-select-input\"\n                    name={THRESHOLD_FIELD_NAME}\n                    render={(props) => (\n                      <>\n                        <SelectField {...props} disableError>\n                          {[...Array(Number(owners.size))].map((x, index) => (\n                            <MenuItem key={index} value={`${index + 1}`}>\n                              {index + 1}\n                            </MenuItem>\n                          ))}\n                        </SelectField>\n                        {props.meta.error && props.meta.touched && (\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                            {props.meta.error}\n                          </Paragraph>\n                        )}\n                      </>\n                    )}\n                    validate={composeValidators(required, mustBeInteger, minValue(1), differentFrom(threshold))}\n                  />\n                </Col>\n                <Col xs={10}>\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                    {`out of ${owners.size} owner(s)`}\n                  </Paragraph>\n                </Col>\n              </Row>\n              <Row>\n                <Paragraph>\n                  {`You're about to create a transaction and will have to confirm it with your currently connected wallet. Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n                </Paragraph>\n              </Row>\n            </Block>\n            <Hairline style={{ position: 'absolute', bottom: 85 }} />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Button minWidth={140} onClick={onClose}>\n                Back\n              </Button>\n              <Button color=\"primary\" minWidth={140} type=\"submit\" variant=\"contained\">\n                Change\n              </Button>\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default withStyles(styles as any)(ChangeThreshold)\n","import { lg, md, secondaryText, sm } from 'src/theme/variables'\n\nexport const styles = () => ({\n  heading: {\n    padding: `${sm} ${lg}`,\n    justifyContent: 'space-between',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: '20px',\n  },\n  close: {\n    height: '35px',\n    width: '35px',\n  },\n  modalContent: {\n    padding: `${md} ${lg}`,\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import { createStyles } from '@material-ui/core/styles'\nimport { border, fontColor, lg, secondaryText, smallFontSize, xl } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  ownersText: {\n    color: secondaryText,\n    '& b': {\n      color: fontColor,\n    },\n  },\n  container: {\n    padding: lg,\n  },\n  buttonRow: {\n    padding: lg,\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    boxSizing: 'border-box',\n    width: '100%',\n    justifyContent: 'flex-end',\n    borderTop: `2px solid ${border}`,\n  },\n  modifyBtn: {\n    height: xl,\n    fontSize: smallFontSize,\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ChangeThreshold from './ChangeThreshold'\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Button from 'src/components/layout/Button'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport {\n  safeOwnersSelector,\n  safeParamAddressFromStateSelector,\n  safeThresholdSelector,\n} from 'src/logic/safe/store/selectors'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\n\nconst useStyles = makeStyles(styles)\n\nconst ThresholdSettings = (): React.ReactElement => {\n  const classes = useStyles()\n  const [isModalOpen, setModalOpen] = useState(false)\n  const dispatch = useDispatch()\n  const threshold = useSelector(safeThresholdSelector)\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const owners = useSelector(safeOwnersSelector)\n  const granted = useSelector(grantedSelector)\n\n  const toggleModal = () => {\n    setModalOpen((prevOpen) => !prevOpen)\n  }\n\n  const onChangeThreshold = async (newThreshold) => {\n    const safeInstance = await getGnosisSafeInstanceAt(safeAddress)\n    const txData = safeInstance.methods.changeThreshold(newThreshold).encodeABI()\n\n    dispatch(\n      createTransaction({\n        safeAddress,\n        to: safeAddress,\n        valueInWei: '0',\n        txData,\n        notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      }),\n    )\n  }\n\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Settings', label: 'Owners' })\n  }, [trackEvent])\n\n  return (\n    <>\n      <Block className={classes.container}>\n        <Heading tag=\"h2\">Required confirmations</Heading>\n        <Paragraph>Any transaction requires the confirmation of:</Paragraph>\n        <Paragraph className={classes.ownersText} size=\"lg\">\n          <Bold>{threshold}</Bold> out of <Bold>{owners?.size || 0}</Bold> owners\n        </Paragraph>\n        {owners && owners.size > 1 && granted && (\n          <Row className={classes.buttonRow}>\n            <Button\n              className={classes.modifyBtn}\n              color=\"primary\"\n              minWidth={120}\n              onClick={toggleModal}\n              variant=\"contained\"\n            >\n              Modify\n            </Button>\n          </Row>\n        )}\n      </Block>\n      <Modal\n        description=\"Change Required Confirmations Form\"\n        handleClose={toggleModal}\n        open={isModalOpen}\n        title=\"Change Required Confirmations\"\n      >\n        <ChangeThreshold\n          onChangeThreshold={onChangeThreshold}\n          onClose={toggleModal}\n          owners={owners}\n          safeAddress={safeAddress}\n          threshold={threshold}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default ThresholdSettings\n","import { createStyles } from '@material-ui/core'\n\nimport {\n  background,\n  bolderFont,\n  border,\n  fontColor,\n  largeFontSize,\n  md,\n  screenSm,\n  secondary,\n  sm,\n  xs,\n} from 'src/theme/variables'\n\nexport const styles = createStyles({\n  root: {\n    backgroundColor: 'white',\n    borderRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: '54px',\n    minHeight: '505px',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      flexDirection: 'row',\n    },\n  },\n  settings: {\n    letterSpacing: '-0.5px',\n  },\n  menuWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 0,\n    maxWidth: '100%',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      flexDirection: 'row',\n      maxWidth: 'unset',\n    },\n  },\n  menu: {\n    borderBottom: `solid 2px ${border}`,\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    height: '100%',\n    width: '100%',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      borderBottom: 'none',\n      borderRight: `solid 2px ${border}`,\n      flexDirection: 'column',\n      width: '250px',\n    },\n  },\n  menuOption: {\n    alignItems: 'center',\n    borderRight: `solid 1px ${border}`,\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    flexGrow: 1,\n    flexShrink: 1,\n    fontSize: '13px',\n    justifyContent: 'center',\n    lineHeight: '1.2',\n    minWidth: '0',\n    padding: `${md} ${sm}`,\n    width: '100%',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      borderRight: 'none',\n      flexGrow: '0',\n      fontSize: largeFontSize,\n      justifyContent: 'flex-start',\n      padding: `${md} 0 ${md} ${md}`,\n    },\n    '&:last-of-type': {\n      borderRight: 'none',\n    },\n    '&:first-child': {\n      borderTopLeftRadius: sm,\n    },\n    '& svg': {\n      display: 'block',\n      marginRight: xs,\n      maxWidth: '16px',\n\n      [`@media (min-width: ${screenSm}px)`]: {\n        marginRight: sm,\n      },\n    },\n    '& .fill': {\n      fill: fontColor,\n    },\n  },\n  active: {\n    backgroundColor: background,\n    color: secondary,\n    fontWeight: bolderFont,\n    '& .fill': {\n      fill: secondary,\n    },\n  },\n  contents: {\n    width: '100%',\n  },\n  hairline: {\n    display: 'none',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      display: 'block',\n    },\n  },\n  container: {\n    flexGrow: 1,\n    height: '100%',\n    position: 'relative',\n  },\n  message: {\n    padding: `${md} 0`,\n    maxHeight: '54px', // to make it the same as row in Balances component\n    boxSizing: 'border-box',\n    justifyContent: 'flex-end',\n  },\n  links: {\n    textDecoration: 'underline',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  removeSafeBtn: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: '-1px', // to make it the same as row in Balances component\n  },\n  removeSafeIcon: {\n    marginLeft: sm,\n    height: md,\n    cursor: 'pointer',\n  },\n  counter: {\n    background: border,\n    borderRadius: '3px',\n    color: fontColor,\n    lineHeight: 'normal',\n    margin: `-2px 0 -2px ${sm}`,\n    padding: xs,\n    fontSize: '11px',\n  },\n})\n","import { IconText } from '@gnosis.pm/safe-react-components'\nimport Badge from '@material-ui/core/Badge'\nimport { makeStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport * as React from 'react'\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Advanced from './Advanced'\nimport ManageOwners from './ManageOwners'\nimport { RemoveSafeModal } from './RemoveSafeModal'\nimport SafeDetails from './SafeDetails'\nimport ThresholdSettings from './ThresholdSettings'\nimport RemoveSafeIcon from './assets/icons/bin.svg'\nimport { styles } from './style'\n\nimport Loader from 'src/components/Loader'\nimport Block from 'src/components/layout/Block'\nimport ButtonLink from 'src/components/layout/ButtonLink'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Span from 'src/components/layout/Span'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { safeNeedsUpdateSelector, safeOwnersSelector } from 'src/logic/safe/store/selectors'\n\nexport const OWNERS_SETTINGS_TAB_TEST_ID = 'owner-settings-tab'\n\nconst INITIAL_STATE = {\n  showRemoveSafe: false,\n  menuOptionIndex: 1,\n}\n\nconst useStyles = makeStyles(styles)\n\nconst Settings: React.FC = () => {\n  const classes = useStyles()\n  const [state, setState] = useState(INITIAL_STATE)\n  const owners = useSelector(safeOwnersSelector)\n  const needsUpdate = useSelector(safeNeedsUpdateSelector)\n  const granted = useSelector(grantedSelector)\n  const addressBook = useSelector(addressBookSelector)\n\n  const handleChange = (menuOptionIndex) => () => {\n    setState((prevState) => ({ ...prevState, menuOptionIndex }))\n  }\n\n  const onShow = (action) => () => {\n    setState((prevState) => ({ ...prevState, [`show${action}`]: true }))\n  }\n\n  const onHide = (action) => () => {\n    setState((prevState) => ({ ...prevState, [`show${action}`]: false }))\n  }\n\n  const { menuOptionIndex, showRemoveSafe } = state\n\n  return !owners ? (\n    <Loader />\n  ) : (\n    <>\n      <Row className={classes.message}>\n        <ButtonLink className={classes.removeSafeBtn} color=\"error\" onClick={onShow('RemoveSafe')} size=\"lg\">\n          <Span className={classes.links}>Remove Safe</Span>\n          <Img alt=\"Trash Icon\" className={classes.removeSafeIcon} src={RemoveSafeIcon} />\n        </ButtonLink>\n        <RemoveSafeModal isOpen={showRemoveSafe} onClose={onHide('RemoveSafe')} />\n      </Row>\n      <Block className={classes.root}>\n        <Col className={classes.menuWrapper} layout=\"column\">\n          <Block className={classes.menu}>\n            <Row className={cn(classes.menuOption, menuOptionIndex === 1 && classes.active)} onClick={handleChange(1)}>\n              <Badge\n                badgeContent=\" \"\n                color=\"error\"\n                invisible={!needsUpdate || !granted}\n                style={{ paddingRight: '10px' }}\n                variant=\"dot\"\n              >\n                <IconText\n                  iconSize=\"sm\"\n                  textSize=\"xl\"\n                  iconType=\"info\"\n                  text=\"Safe Details\"\n                  color={menuOptionIndex === 1 ? 'primary' : 'secondary'}\n                />\n              </Badge>\n            </Row>\n            <Hairline className={classes.hairline} />\n            <Row\n              className={cn(classes.menuOption, menuOptionIndex === 2 && classes.active)}\n              onClick={handleChange(2)}\n              testId={OWNERS_SETTINGS_TAB_TEST_ID}\n            >\n              <IconText\n                iconSize=\"sm\"\n                textSize=\"xl\"\n                iconType=\"owners\"\n                text=\"Owners\"\n                color={menuOptionIndex === 2 ? 'primary' : 'secondary'}\n              />\n              <Paragraph className={classes.counter} size=\"xs\">\n                {owners.size}\n              </Paragraph>\n            </Row>\n            <Hairline className={classes.hairline} />\n            <Row className={cn(classes.menuOption, menuOptionIndex === 3 && classes.active)} onClick={handleChange(3)}>\n              <IconText\n                iconSize=\"sm\"\n                textSize=\"xl\"\n                iconType=\"requiredConfirmations\"\n                text=\"Policies\"\n                color={menuOptionIndex === 3 ? 'primary' : 'secondary'}\n              />\n            </Row>\n            <Hairline className={classes.hairline} />\n            <Row className={cn(classes.menuOption, menuOptionIndex === 4 && classes.active)} onClick={handleChange(4)}>\n              <IconText\n                iconSize=\"sm\"\n                textSize=\"xl\"\n                iconType=\"settingsTool\"\n                text=\"Advanced\"\n                color={menuOptionIndex === 4 ? 'primary' : 'secondary'}\n              />\n            </Row>\n            <Hairline className={classes.hairline} />\n          </Block>\n        </Col>\n        <Col className={classes.contents} layout=\"column\">\n          <Block className={classes.container}>\n            {menuOptionIndex === 1 && <SafeDetails />}\n            {menuOptionIndex === 2 && <ManageOwners addressBook={addressBook} granted={granted} owners={owners} />}\n            {menuOptionIndex === 3 && <ThresholdSettings />}\n            {menuOptionIndex === 4 && <Advanced />}\n          </Block>\n        </Col>\n      </Block>\n    </>\n  )\n}\n\nexport default Settings\n"],"sourceRoot":""}