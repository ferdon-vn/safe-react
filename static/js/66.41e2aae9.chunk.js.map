{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","routes/safe/components/Balances/Collectibles/components/Item.tsx","routes/safe/components/Balances/Collectibles/index.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","useStyles","makeStyles","item","backgroundColor","borderRadius","boxShadow","boxSizing","cursor","granted","display","flexDirection","flexGrow","minHeight","minWidth","position","opacity","mainContent","zIndex","extraContent","alignItems","bottom","justifyContent","left","right","top","transition","image","backgroundPosition","backgroundRepeat","backgroundSize","height","width","textContainer","color","fontColor","flexShrink","fontSize","lineHeight","padding","title","fontWeight","margin","maxWidth","textOverflow","whiteSpace","text","buttonIcon","marginRight","sm","sendButton","xs","Item","data","onSend","useSelector","grantedSelector","style","backgroundImage","description","cn","Button","onClick","size","variant","createStyles","cardInner","cardOuter","gridRow","columnGap","gridTemplateColumns","marginBottom","rowGap","screenXs","screenSm","titleImg","titleText","titleFiller","marginLeft","noData","lg","textAlign","Collectibles","useState","selectedToken","setSelectedToken","sendNFTsModalOpen","setSendNFTsModalOpen","nftTokens","orderedNFTAssets","activeAssetsList","activeNftAssetsListSelector","trackEvent","useAnalytics","useEffect","category","SAFE_NAVIGATION_EVENT","action","length","map","nftAsset","Fragment","key","slug","filter","assetAddress","address","nftToken","tokenId","handleItemSend","Paragraph","SendModal","activeScreenType","isOpen","onClose"],"mappings":"4MAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,kBAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,cA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,G,oEC7CGkB,EAAYC,YAAW,CAC3BC,KAAM,CACJC,gBAAiB,OACjBC,aAAc,MACdC,UAAW,oCACXC,UAAW,aACXC,OAAQ,SAACvB,GAAD,OAAYA,EAAMwB,QAAU,UAAY,WAChDC,QAAS,OACTC,cAAe,SACfC,SAAU,IACVC,UAAW,QACXC,SAAU,IACVC,SAAU,WAEV,uBAAwB,CACtBC,QAAS,KAEX,wBAAyB,CACvBA,QAAS,MAGbC,YAAa,CACXP,QAAS,OACTC,cAAe,SACfC,SAAU,IACVG,SAAU,WACVG,OAAQ,KAEVC,aAAc,CACZC,WAAY,SACZhB,gBAAiB,2BACjBiB,OAAQ,IACRb,OAAQ,UACRE,QAAS,OACTY,eAAgB,SAChBC,KAAM,IACNP,QAAS,IACTD,SAAU,WACVS,MAAO,IACPC,IAAK,IACLC,WAAY,yBACZR,OAAQ,KAEVS,MAAO,CACLvB,gBAAiB,SAACnB,GAAD,MAAW,WAAIA,EAAMmB,mBAAqB,GAC3DwB,mBAAoB,UACpBC,iBAAkB,YAClBC,eAAgB,UAChBzB,aAAc,MACd0B,OAAQ,QACRnB,SAAU,IACVoB,MAAO,QAETC,cAAe,CACb1B,UAAW,aACX2B,MAAOC,YACPC,WAAY,IACZC,SAAU,OACVC,WAAY,MACZC,QAAS,kBAEXC,MAAO,CACLC,WAAY,OACZC,OAAQ,IACRC,SAAU,OACV5C,SAAU,SACV6C,aAAc,WACdC,WAAY,UAEdC,KAAM,CACJJ,OAAQ,IACRC,SAAU,OACV5C,SAAU,SACV6C,aAAc,WACdC,WAAY,UAEdE,WAAY,CACVV,SAAU,GACVW,YAAaC,MAEfC,WAAY,CACV7C,aAAc8C,KACdrC,SAAU,OAEV,WAAY,CACVuB,SAAU,WAsCDe,EAjCF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACd7C,EAAU8C,YAAYC,KACtBrE,EAAUc,EAAU,CAAEG,gBAAiBiD,EAAKnB,MAAOzB,YAEzD,OACE,uBAAKrB,UAAWD,EAAQgB,MACtB,uBAAKf,UAAWD,EAAQ8B,aACtB,uBAAK7B,UAAWD,EAAQwC,MAAO8B,MAAO,CAAEC,gBAAgB,OAAD,OAASL,EAAK1B,MAAd,QACvD,uBAAKvC,UAAWD,EAAQ8C,eACrBoB,EAAKrD,MACJ,sBAAIZ,UAAWD,EAAQqD,MAAOA,MAAOa,EAAKrD,MACvCqD,EAAKrD,MAGTqD,EAAKM,aACJ,qBAAGvE,UAAWD,EAAQ2D,KAAMN,MAAOa,EAAKM,aACrCN,EAAKM,eAKblD,GACC,uBAAKrB,UAAWwE,IAAGzE,EAAQgC,aAAc,gBACvC,gBAAC0C,EAAA,EAAD,CAAQzE,UAAWD,EAAQ+D,WAAYhB,MAAM,UAAU4B,QAASR,EAAQS,KAAK,QAAQC,QAAQ,aAA7F,W,mCC7GJ/D,EAAYC,YAChB+D,YAAa,CACXC,UAAW,CACT3D,UAAW,aACXoC,SAAU,OACVJ,QAAS,aAEX4B,UAAW,CACT7D,UAAW,4CAEb8D,SAAO,GACL7D,UAAW,aACX8D,UAAW,OACX3D,QAAS,OACT4D,oBAAqB,MACrBC,aAAc,OACd5B,SAAU,OACV6B,OAAQ,OAER,eAAgB,CACdD,aAAc,MAVX,2CAakBE,WAblB,OAakC,CACrCH,oBAAqB,YAdlB,2CAiBkBI,WAjBlB,OAiBkC,CACrCJ,oBAAqB,oBAlBlB,GAqBP9B,MAAO,CACLpB,WAAY,SACZV,QAAS,OACTgC,OAAQ,YAEViC,SAAU,CACR/C,mBAAoB,UACpBC,iBAAkB,YAClBC,eAAgB,UAChBzB,aAAc,MACd0B,OAAQ,OACRW,OAAQ,aACRV,MAAO,QAET4C,UAAW,CACT1C,MAAOC,YACPE,SAAU,OACVI,WAAY,SACZH,WAAY,MACZI,OAAQ,KAEVmC,YAAa,CACXzE,gBAAiB,UACjBQ,SAAU,EACVmB,OAAQ,MACR+C,WAAY,QAEdC,OAAQ,CACN1C,SAAU2C,KACVC,UAAW,aA8DFC,UAzDM,WACnB,IAAM/F,EAAUc,IAD6B,EAEHjB,IAAMmG,WAFH,mBAEtCC,EAFsC,KAEvBC,EAFuB,OAGKrG,IAAMmG,UAAS,GAHpB,mBAGtCG,EAHsC,KAGnBC,EAHmB,KAIvCC,EAAYjC,YAAYkC,KACxBC,EAAmBnC,YAAYoC,KAC7BC,EAAeC,cAAfD,WAERE,qBAAU,WACRF,EAAW,CAAEG,SAAUC,IAAuBC,OAAQ,mBACrD,CAACL,IAOJ,OACE,kBAAC,EAAD,CAAMxG,UAAWD,EAAQgF,WACvB,yBAAK/E,UAAWD,EAAQ+E,WACrBwB,EAAiBQ,OAChBR,EAAiBS,KAAI,SAACC,GACpB,OACE,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,EAASG,MAC5B,yBAAKnH,UAAWD,EAAQqD,OACtB,yBAAKpD,UAAWD,EAAQwF,SAAUlB,MAAO,CAAEC,gBAAgB,OAAD,OAAS0C,EAASzE,OAAS,GAA3B,QAC1D,wBAAIvC,UAAWD,EAAQyF,WAAYwB,EAASpG,MAC5C,yBAAKZ,UAAWD,EAAQ0F,eAE1B,yBAAKzF,UAAWD,EAAQiF,SACrBoB,EACEgB,QAAO,gBAAGC,EAAH,EAAGA,aAAH,OAAsBL,EAASM,UAAYD,KAClDN,KAAI,SAACQ,GAAD,OACH,kBAAC,EAAD,CACEtD,KAAMsD,EACNL,IAAG,UAAKF,EAASG,KAAd,YAAsBI,EAASC,SAClCtD,OAAQ,kBAxBP,SAACqD,GACtBtB,EAAiBsB,GACjBpB,GAAqB,GAsBasB,CAAeF,cAQ3C,kBAACG,EAAA,EAAD,CAAW1H,UAAWD,EAAQ4F,QAA9B,8BAGJ,kBAACgC,EAAA,EAAD,CACEC,iBAAiB,kBACjBC,OAAQ3B,EACR4B,QAAS,kBAAM3B,GAAqB,IACpCH,cAAeA","file":"static/js/66.41e2aae9.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import { makeStyles } from '@material-ui/core/styles'\n// import CallMade from '@material-ui/icons/CallMade'\nimport cn from 'classnames'\nimport * as React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Button from 'src/components/layout/Button'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { fontColor, sm, xs } from 'src/theme/variables'\n\nconst useStyles = makeStyles({\n  item: {\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px 0 rgba(33, 48, 77, 0.10)',\n    boxSizing: 'border-box',\n    cursor: (props) => (props.granted ? 'pointer' : 'default'),\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    minHeight: '250px',\n    minWidth: '0',\n    position: 'relative',\n\n    '&:hover .showOnHover': {\n      opacity: '1',\n    },\n    '&:active .showOnHover': {\n      opacity: '1',\n    },\n  },\n  mainContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    position: 'relative',\n    zIndex: '1',\n  },\n  extraContent: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 243, 226, 0.6)',\n    bottom: '0',\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center',\n    left: '0',\n    opacity: '0',\n    position: 'absolute',\n    right: '0',\n    top: '0',\n    transition: 'opacity 0.15s ease-out',\n    zIndex: '5',\n  },\n  image: {\n    backgroundColor: (props) => `#${props.backgroundColor}` || '#f0efee',\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    borderRadius: '8px',\n    height: '178px',\n    flexGrow: '1',\n    width: '100%',\n  },\n  textContainer: {\n    boxSizing: 'border-box',\n    color: fontColor,\n    flexShrink: '0',\n    fontSize: '12px',\n    lineHeight: '1.4',\n    padding: '15px 22px 20px',\n  },\n  title: {\n    fontWeight: 'bold',\n    margin: '0',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  text: {\n    margin: '0',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  buttonIcon: {\n    fontSize: 16,\n    marginRight: sm,\n  },\n  sendButton: {\n    borderRadius: xs,\n    minWidth: '85px',\n\n    '& > span': {\n      fontSize: '14px',\n    },\n  },\n} as any)\n\nconst Item = ({ data, onSend }) => {\n  const granted = useSelector(grantedSelector)\n  const classes = useStyles({ backgroundColor: data.color, granted })\n\n  return (\n    <div className={classes.item}>\n      <div className={classes.mainContent}>\n        <div className={classes.image} style={{ backgroundImage: `url(${data.image})` }} />\n        <div className={classes.textContainer}>\n          {data.name && (\n            <h3 className={classes.title} title={data.name}>\n              {data.name}\n            </h3>\n          )}\n          {data.description && (\n            <p className={classes.text} title={data.description}>\n              {data.description}\n            </p>\n          )}\n        </div>\n      </div>\n      {granted && (\n        <div className={cn(classes.extraContent, 'showOnHover')}>\n          <Button className={classes.sendButton} color=\"primary\" onClick={onSend} size=\"small\" variant=\"contained\">\n            {/* <CallMade alt=\"Send\" className={classes.buttonIcon} />  */}\n            Send\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Item\n","import React, { useEffect } from 'react'\nimport Card from '@material-ui/core/Card'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\n\nimport Item from './components/Item'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { activeNftAssetsListSelector, orderedNFTAssets } from 'src/logic/collectibles/store/selectors'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\nimport { fontColor, lg, screenSm, screenXs } from 'src/theme/variables'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles.d'\n\nconst useStyles = makeStyles(\n  createStyles({\n    cardInner: {\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n      padding: '52px 54px',\n    },\n    cardOuter: {\n      boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    },\n    gridRow: {\n      boxSizing: 'border-box',\n      columnGap: '30px',\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      marginBottom: '45px',\n      maxWidth: '100%',\n      rowGap: '45px',\n\n      '&:last-child': {\n        marginBottom: '0',\n      },\n\n      [`@media (min-width: ${screenXs}px)`]: {\n        gridTemplateColumns: '1fr 1fr',\n      },\n\n      [`@media (min-width: ${screenSm}px)`]: {\n        gridTemplateColumns: '1fr 1fr 1fr 1fr',\n      },\n    },\n    title: {\n      alignItems: 'center',\n      display: 'flex',\n      margin: '0 0 18px',\n    },\n    titleImg: {\n      backgroundPosition: '50% 50%',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'contain',\n      borderRadius: '50%',\n      height: '45px',\n      margin: '0 10px 0 0',\n      width: '45px',\n    },\n    titleText: {\n      color: fontColor,\n      fontSize: '18px',\n      fontWeight: 'normal',\n      lineHeight: '1.2',\n      margin: '0',\n    },\n    titleFiller: {\n      backgroundColor: '#e8e7e6',\n      flexGrow: 1,\n      height: '2px',\n      marginLeft: '40px',\n    },\n    noData: {\n      fontSize: lg,\n      textAlign: 'center',\n    },\n  }),\n)\n\nconst Collectibles = (): React.ReactElement => {\n  const classes = useStyles()\n  const [selectedToken, setSelectedToken] = React.useState<NFTToken | undefined>()\n  const [sendNFTsModalOpen, setSendNFTsModalOpen] = React.useState(false)\n  const nftTokens = useSelector(orderedNFTAssets)\n  const activeAssetsList = useSelector(activeNftAssetsListSelector)\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Collectibles' })\n  }, [trackEvent])\n\n  const handleItemSend = (nftToken: NFTToken) => {\n    setSelectedToken(nftToken)\n    setSendNFTsModalOpen(true)\n  }\n\n  return (\n    <Card className={classes.cardOuter}>\n      <div className={classes.cardInner}>\n        {activeAssetsList.length ? (\n          activeAssetsList.map((nftAsset) => {\n            return (\n              <React.Fragment key={nftAsset.slug}>\n                <div className={classes.title}>\n                  <div className={classes.titleImg} style={{ backgroundImage: `url(${nftAsset.image || ''})` }} />\n                  <h2 className={classes.titleText}>{nftAsset.name}</h2>\n                  <div className={classes.titleFiller} />\n                </div>\n                <div className={classes.gridRow}>\n                  {nftTokens\n                    .filter(({ assetAddress }) => nftAsset.address === assetAddress)\n                    .map((nftToken) => (\n                      <Item\n                        data={nftToken}\n                        key={`${nftAsset.slug}_${nftToken.tokenId}`}\n                        onSend={() => handleItemSend(nftToken)}\n                      />\n                    ))}\n                </div>\n              </React.Fragment>\n            )\n          })\n        ) : (\n          <Paragraph className={classes.noData}>No collectibles available</Paragraph>\n        )}\n      </div>\n      <SendModal\n        activeScreenType=\"sendCollectible\"\n        isOpen={sendNFTsModalOpen}\n        onClose={() => setSendNFTsModalOpen(false)}\n        selectedToken={selectedToken}\n      />\n    </Card>\n  )\n}\n\nexport default Collectibles\n"],"sourceRoot":""}