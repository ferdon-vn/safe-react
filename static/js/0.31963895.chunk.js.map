{"version":3,"sources":["../node_modules/final-form/dist/final-form.es.js"],"names":["keysCache","keysRegex","toPath","key","undefined","length","Error","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","_toPrimitive","setIn","value","destroyArrays","setInRecursor","index","_extends2","_ref","_result2","_result","numKeys","Object","keys","_objectWithoutPropertiesLoose","map","_extends","numericKey","_result3","_array","result","array","concat","splice","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","modifiedSinceLastSubmit","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","valid","dirty","dirtySinceLastSubmit","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","getValidators","validators","validator","push","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","all","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldState","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getFieldState","getRegisteredFields","getState","initialize","savedDirtyValues","isValidationPaused","pauseValidation","registerField","fieldConfig","afterSubmit","beforeSubmit","haveValidator","silent","getValidator","initialValue","defaultValue","validatorRemoved","lastOne","reset","restart","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","subscribe","memoized"],"mappings":"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","file":"static/js/0.31963895.chunk.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.20.1\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          modifiedSinceLastSubmit: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"],"sourceRoot":""}