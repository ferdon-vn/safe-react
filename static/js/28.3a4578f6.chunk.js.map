{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ContractInteraction/Buttons/index.tsx","logic/contractInteraction/sources/ABIService/index.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/ContractABI/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/EthAddressInput/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/FormDivisor/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/FormErrorMessage/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/MethodsDropdown/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/ArrayTypeInput.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/InputComponent/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderInputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/RenderOutputParams/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/NativeCoinValue/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/index.tsx","components/forms/Field/index.tsx","components/layout/Bold/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","components/AddressInfo/index.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/utils.ts","components/ScanQRModal/index.tsx","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg","components/ScanQRModal/ScanQRWrapper/index.tsx","routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils/index.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/style.ts","../node_modules/final-form-calculate/dist/final-form-calculate.es.js","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","components/forms/TextareaField/index.tsx","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","routes/safe/components/Balances/SendModal/screens/ContractInteraction/Header/index.tsx","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts"],"names":["useStyles","makeStyles","styles","Buttons","onClose","classes","method","useField","subscription","value","input","useFormState","modifiedSinceLastSubmit","submitError","submitting","valid","validating","Row","align","className","buttonRow","Button","minWidth","onClick","submitButton","color","data-testid","isReadMethod","disabled","type","variant","getMethodSignature","inputs","name","params","map","x","join","getSignatureHash","signature","web3","utils","keccak256","toString","isAllowedMethod","getMethodAction","stateMutability","includes","extractUsefulMethods","abi","filter","action","methodSignature","signatureHash","getMethodSignatureAndSignatureHash","sort","a","b","toLowerCase","hasUsefulMethods","JSON","parse","length","e","ContractABI","contractAddress","mutators","useForm","setAbiValue","React","useRef","useEffect","isEthereumAddress","undefined","mustBeEthereumAddress","mustBeEthereumContractAddress","isEthereumContractAddress","getContractABI","current","validateAndSetAbi","margin","Col","TextareaField","placeholder","text","validate","EthAddressInput","isContract","isRequired","onScannedValue","validatorsList","required","composeValidators","validator","pristine","useState","address","selectedEntry","setSelectedEntry","xs","Field","component","TextField","onChange","event","target","testId","setIsValidAddress","fieldMutator","center","middle","ScanQRWrapper","handleScan","closeQrModal","scannedAddress","startsWith","replace","FormDivisor","alt","src","ArrowDown","style","marginLeft","sm","layout","Hairline","FormErrorMessage","fullWidth","Paragraph","noMargin","size","letterSpacing","overflowWrap","MethodsDropdown","useDropdownStyles","buttonWidth","meta","selectedMethodByDefault","initialValues","selectedMethod","setSelectedMethod","methodsList","setMethodsList","methodsListFiltered","setMethodsListFiltered","anchorEl","setAnchorEl","searchParams","setSearchParams","handleClose","NO_CONTRACT","theme","DropdownListTheme","button","currentTarget","classNames","buttonInner","openMenuButton","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","open","PaperProps","width","transformOrigin","MenuItem","listItemSearch","key","search","searchIcon","InputBase","root","inputRoot","inputInput","inputProps","dropdownItemsScrollWrapper","listItem","chosenMethod","ListItemText","primary","ListItemIcon","iconRight","CheckIcon","values","Array","isArray","typePlaceholder","isAddress","isBoolean","isUint","isInt","isByte","ArrayTypeInput","InputComponent","keyValue","Checkbox","label","isArrayParameter","RenderInputParams","validABI","index","generateFormFieldKey","output","lineHeight","height","overflowY","RenderOutputParams","results","multipleResults","outputs","multiline","rowsMax","nativeCoin","getNetworkInfo","NativeCoinValue","onSetMax","ethBalance","useSelector","safeSelector","payable","isPayable","ButtonLink","weight","inputAdornment","endAdornment","InputAdornment","position","mustBeFloat","maxValue","ContractInteraction","setCallResults","onNext","switchMethod","isABI","safeAddress","useMemo","saveForm","handleSubmit","submit","txObject","createTxObject","data","encodeABI","call","from","result","handleSubmitError","Header","subTitle","title","GnoForm","decorators","ensResolver","formMutators","onSubmit","rest","Block","formContainer","SafeInfo","setContractAddress","setMax","Switch","checked","GnoField","props","Bold","this","children","overflowStyle","overflow","restInput","rows","helperText","showError","touched","hasError","error","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","statusClasses","autoComplete","inputRootProps","InputProps","PureComponent","withStyles","paddingTop","lg","paddingBottom","stylesBasedOn","padding","flexDirection","flex","validation","render","form","Wrapper","styled","div","StyledBlock","border","AddressInfo","safeName","diameter","content","explorerUrl","getExplorerInfo","symbol","module","exports","createStyles","heading","justifyContent","maxHeight","boxSizing","loaderContainer","close","secondaryText","detailsContainer","backgroundColor","background","navigatorCp","navigator","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","ScanQRModal","isOpen","onScan","useWebcam","setUseWebcam","fileUploadModalOpen","setFileUploadModalOpen","setError","scannerRef","openImageDialog","success","err","video","onFileScannedResolve","successData","console","Modal","description","grow","IconButton","disableRipple","justify","CircularProgress","legacyMode","onError","ref","qrCodeBtn","cursor","qrModalOpen","setQrModalOpen","role","QRIcon","createDecorator","field","updates","isValidEnsName","getAddressFromENS","resolvedAddress","message","args","state","changeValue","lastFormState","indexOf","parameter","test","hasOwnProperty","reason","FORM_ERROR","keyType","contract","getWeb3","eth","Contract","extractMethodArgs","methods","getValueFromTxInputs","tx","String","md","annotation","marginRight","headingText","fontSize","closeIcon","wordBreak","outerData","borderRadius","minHeight","fontFamily","fontStretch","boxShadow","dataInput","selectAddress","isPromise","obj","then","tripleEquals","_len","arguments","calculations","_key","previousValues","subscribe","_ref","batch","runUpdates","isEqual","next","getIn","previous","resolved","Object","keys","forEach","destField","change","update","fields","getRegisteredFields","_ref2","matches","findIndex","f","RegExp","fieldName","useTextFieldLabelStyle","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","setValidationText","validationText","updateAddressInfo","addressEntry","validateAddress","addressErrorMessage","filteredEntries","filterAddressEntries","inputValue","onInputChange","_","normalizedValue","trimSpaces","isFeatureEnabled","FEATURES","ENS_LOOKUP","catch","validatedAddress","labelStyles","inputStyles","Autocomplete","openOnFocus","filterOptions","freeSolo","options","renderInput","autoFocus","InputLabelProps","shrink","getOptionLabel","renderOption","hash","showIdenticon","display","flexGrow","AddressBookInput","addressBookSelector","ContractsAddressBookInput","setFilteredEntries","filterContractAddressBookEntries","filteredADBK","filterContractAddresses","onSetSelectedEntry","contractAddressErrorMessage","textarea","alignItems","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItemsFlexStart","palette","flexShrink","marginTop","maxWidth","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","etherFlag","iconLeft","fontWeight","outline","textAlign","opacity","borderLeft","borderRight","borderTop","right","top","borderBottom","left","pointerEvents","transform","fill"],"mappings":"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","file":"static/js/28.3a4578f6.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useField, useFormState } from 'react-final-form'\n\nimport Button from 'src/components/layout/Button'\nimport Row from 'src/components/layout/Row'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\nimport { isReadMethod } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\n\nconst useStyles = makeStyles(styles)\n\nexport interface ButtonProps {\n  onClose: () => void\n}\n\nconst Buttons = ({ onClose }: ButtonProps) => {\n  const classes = useStyles()\n  const {\n    input: { value: method },\n  } = useField('selectedMethod', { subscription: { value: true } })\n  const { modifiedSinceLastSubmit, submitError, submitting, valid, validating } = useFormState({\n    subscription: {\n      modifiedSinceLastSubmit: true,\n      submitError: true,\n      submitting: true,\n      valid: true,\n      validating: true,\n    },\n  })\n\n  return (\n    <Row align=\"center\" className={classes.buttonRow}>\n      <Button minWidth={140} onClick={onClose}>\n        Cancel\n      </Button>\n      <Button\n        className={classes.submitButton}\n        color=\"primary\"\n        data-testid={`${isReadMethod(method) ? 'call' : 'review'}-tx-btn`}\n        disabled={submitting || validating || ((!valid || !!submitError) && !modifiedSinceLastSubmit) || !method}\n        minWidth={140}\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        {isReadMethod(method) ? 'Call' : 'Review'}\n      </Button>\n    </Row>\n  )\n}\n\nexport default Buttons\n","import { AbiItem } from 'web3-utils'\n\nimport { web3ReadOnly as web3 } from 'src/logic/wallets/getWeb3'\n\nexport interface AllowedAbiItem extends AbiItem {\n  name: string\n  type: 'function'\n}\n\nexport interface AbiItemExtended extends AllowedAbiItem {\n  action: string\n  methodSignature: string\n  signatureHash: string\n}\n\nexport const getMethodSignature = ({ inputs, name }: AbiItem): string => {\n  const params = inputs?.map((x) => x.type).join(',')\n  return `${name}(${params})`\n}\n\nexport const getSignatureHash = (signature: string): string => {\n  return web3.utils.keccak256(signature).toString()\n}\n\nexport const getMethodHash = (method: AbiItem): string => {\n  const signature = getMethodSignature(method)\n  return getSignatureHash(signature)\n}\n\nexport const getMethodSignatureAndSignatureHash = (\n  method: AbiItem,\n): { methodSignature: string; signatureHash: string } => {\n  const methodSignature = getMethodSignature(method)\n  const signatureHash = getSignatureHash(methodSignature)\n  return { methodSignature, signatureHash }\n}\n\nexport const isAllowedMethod = ({ name, type }: AbiItem): boolean => {\n  return type === 'function' && !!name\n}\n\nexport const getMethodAction = ({ stateMutability }: AbiItem): 'read' | 'write' => {\n  if (!stateMutability) {\n    return 'write'\n  }\n\n  return ['view', 'pure'].includes(stateMutability) ? 'read' : 'write'\n}\n\nexport const extractUsefulMethods = (abi: AbiItem[]): AbiItemExtended[] => {\n  const allowedAbiItems = abi.filter(isAllowedMethod) as AllowedAbiItem[]\n\n  return allowedAbiItems\n    .map(\n      (method): AbiItemExtended => ({\n        action: getMethodAction(method),\n        ...getMethodSignatureAndSignatureHash(method),\n        ...method,\n      }),\n    )\n    .sort(({ name: a }, { name: b }) => {\n      return a.toLowerCase() > b.toLowerCase() ? 1 : -1\n    })\n}\n\nexport const isPayable = (method: AbiItem | AbiItemExtended): boolean => {\n  return !!method?.payable\n}\n","import React from 'react'\nimport { useField, useForm } from 'react-final-form'\n\nimport TextareaField from 'src/components/forms/TextareaField'\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { getContractABI } from 'src/config'\nimport { extractUsefulMethods } from 'src/logic/contractInteraction/sources/ABIService'\n\nexport const NO_DATA = 'no data'\n\nconst hasUsefulMethods = (abi: string): undefined | string => {\n  try {\n    const parsedABI = extractUsefulMethods(JSON.parse(abi))\n\n    if (parsedABI.length === 0) {\n      return NO_DATA\n    }\n  } catch (e) {\n    return NO_DATA\n  }\n}\n\nconst ContractABI = (): React.ReactElement => {\n  const {\n    input: { value: contractAddress },\n  } = useField('contractAddress', { subscription: { value: true } })\n  const { mutators } = useForm()\n  const setAbiValue = React.useRef(mutators.setAbiValue)\n\n  React.useEffect(() => {\n    const validateAndSetAbi = async () => {\n      const isEthereumAddress = mustBeEthereumAddress(contractAddress) === undefined\n      const isEthereumContractAddress = (await mustBeEthereumContractAddress(contractAddress)) === undefined\n\n      if (isEthereumAddress && isEthereumContractAddress) {\n        const abi = await getContractABI(contractAddress)\n        const isValidABI = hasUsefulMethods(abi) === undefined\n\n        // this check may help in scenarios where the user first pastes the ABI,\n        // and then sets a Proxy contract that has no useful methods\n        if (isValidABI) {\n          setAbiValue.current(abi)\n        }\n      }\n    }\n\n    if (contractAddress) {\n      validateAndSetAbi()\n    }\n  }, [contractAddress])\n\n  return (\n    <Row margin=\"sm\">\n      <Col>\n        <TextareaField name=\"abi\" placeholder=\"ABI*\" text=\"ABI*\" type=\"text\" validate={hasUsefulMethods} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ContractABI\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useState } from 'react'\nimport { useFormState, useField } from 'react-final-form'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { ContractsAddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  composeValidators,\n  mustBeEthereumAddress,\n  mustBeEthereumContractAddress,\n  required,\n  Validator,\n} from 'src/components/forms/validator'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\nexport interface EthAddressInputProps {\n  isContract?: boolean\n  isRequired?: boolean\n  name: string\n  onScannedValue: (scannedValue: string) => void\n  text: string\n}\n\nexport const EthAddressInput = ({\n  isContract = true,\n  isRequired = true,\n  name,\n  onScannedValue,\n  text,\n}: EthAddressInputProps): React.ReactElement => {\n  const classes = useStyles()\n  const validatorsList = [\n    isRequired && required,\n    mustBeEthereumAddress,\n    isContract && mustBeEthereumContractAddress,\n  ] as Validator[]\n  const validate = composeValidators(...validatorsList.filter((validator) => validator))\n  const { pristine } = useFormState({ subscription: { pristine: true } })\n  const {\n    input: { value },\n  } = useField('contractAddress', { subscription: { value: true } })\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string | null } | null>({\n    address: value,\n    name: '',\n  })\n\n  const handleScan = (value, closeQrModal) => {\n    let scannedAddress = value\n\n    if (scannedAddress.startsWith('ethereum:')) {\n      scannedAddress = scannedAddress.replace('ethereum:', '')\n    }\n\n    setSelectedEntry({ address: scannedAddress })\n    onScannedValue(scannedAddress)\n    closeQrModal()\n  }\n\n  const handleInputChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const { value } = event.target\n    setSelectedEntry({ address: value })\n  }\n\n  return (\n    <>\n      <Row margin=\"md\">\n        <Col xs={11}>\n          {selectedEntry?.address ? (\n            <Field\n              component={TextField}\n              name={name}\n              placeholder={text}\n              onChange={handleInputChange}\n              testId={name}\n              text={text}\n              type=\"text\"\n              validate={validate}\n            />\n          ) : (\n            <ContractsAddressBookInput\n              setSelectedEntry={setSelectedEntry}\n              setIsValidAddress={() => {}}\n              fieldMutator={onScannedValue}\n              pristine={pristine}\n            />\n          )}\n        </Col>\n        <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n          <ScanQRWrapper handleScan={handleScan} />\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import React from 'react'\n\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport ArrowDown from 'src/routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg'\nimport { sm } from 'src/theme/variables'\n\nconst FormDivisor = () => (\n  <Row margin=\"md\">\n    <Col xs={1}>\n      <img alt=\"Arrow Down\" src={ArrowDown} style={{ marginLeft: sm }} />\n    </Col>\n    <Col center=\"xs\" layout=\"column\" xs={11}>\n      <Hairline />\n    </Col>\n  </Row>\n)\n\nexport default FormDivisor\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useFormState } from 'react-final-form'\n\nimport Row from 'src/components/layout/Row'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\nconst FormErrorMessage = () => {\n  const classes = useStyles()\n  const { modifiedSinceLastSubmit, submitError } = useFormState({\n    subscription: { modifiedSinceLastSubmit: true, submitError: true },\n  })\n\n  const hasNewSubmitError = !!submitError && !modifiedSinceLastSubmit\n  return hasNewSubmitError ? (\n    <Row align=\"center\" className={classes.fullWidth} margin=\"xs\">\n      <Paragraph color=\"error\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px', overflowWrap: 'anywhere' }}>\n        {submitError}\n      </Paragraph>\n    </Row>\n  ) : null\n}\n\nexport default FormErrorMessage\n","import InputBase from '@material-ui/core/InputBase'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { useField, useFormState } from 'react-final-form'\nimport { AbiItem } from 'web3-utils'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { NO_CONTRACT } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport CheckIcon from 'src/routes/safe/components/CurrencyDropdown/img/check.svg'\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\nimport { DropdownListTheme } from 'src/theme/mui'\nimport { extractUsefulMethods, AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\n\nconst MENU_WIDTH = '452px'\n\ninterface MethodsDropdownProps {\n  onChange: (method: AbiItem) => void\n}\n\nconst MethodsDropdown = ({ onChange }: MethodsDropdownProps): React.ReactElement | null => {\n  const classes = useDropdownStyles({ buttonWidth: MENU_WIDTH })\n  const {\n    input: { value: abi },\n    meta: { valid },\n  } = useField('abi', { subscription: { value: true, valid: true } })\n  const {\n    initialValues: { selectedMethod: selectedMethodByDefault },\n  } = useFormState({ subscription: { initialValues: true } })\n  const [selectedMethod, setSelectedMethod] = React.useState(selectedMethodByDefault ? selectedMethodByDefault : {})\n  const [methodsList, setMethodsList] = React.useState<AbiItemExtended[]>([])\n  const [methodsListFiltered, setMethodsListFiltered] = React.useState<AbiItemExtended[]>([])\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [searchParams, setSearchParams] = React.useState('')\n\n  React.useEffect(() => {\n    if (abi) {\n      try {\n        setMethodsList(extractUsefulMethods(JSON.parse(abi)))\n      } catch (e) {\n        setMethodsList([])\n      }\n    }\n  }, [abi])\n\n  React.useEffect(() => {\n    setMethodsListFiltered(methodsList.filter(({ name }) => name?.toLowerCase().includes(searchParams.toLowerCase())))\n  }, [methodsList, searchParams])\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onMethodSelectedChanged = (chosenMethod: AbiItem) => {\n    setSelectedMethod(chosenMethod)\n    onChange(chosenMethod)\n    handleClose()\n  }\n\n  return !valid || !abi || abi === NO_CONTRACT ? null : (\n    <Row margin=\"sm\">\n      <Col>\n        <MuiThemeProvider theme={DropdownListTheme}>\n          <>\n            <button className={classes.button} onClick={handleClick} type=\"button\">\n              <span className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}>\n                {(selectedMethod as Record<string, string>).name}\n              </span>\n            </button>\n            <Menu\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                horizontal: 'center',\n                vertical: 'bottom',\n              }}\n              elevation={0}\n              getContentAnchorEl={null}\n              id=\"customizedMenu\"\n              keepMounted\n              onClose={handleClose}\n              open={!!anchorEl}\n              PaperProps={{ style: { width: MENU_WIDTH } }}\n              transformOrigin={{\n                horizontal: 'center',\n                vertical: 'top',\n              }}\n            >\n              <MenuItem className={classes.listItemSearch} key=\"0\">\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(event) => setSearchParams(event.target.value)}\n                    placeholder=\"Search…\"\n                    value={searchParams}\n                  />\n                </div>\n              </MenuItem>\n              <div className={classes.dropdownItemsScrollWrapper}>\n                {methodsListFiltered.map((method) => {\n                  const { action, name, signatureHash } = method\n\n                  return (\n                    <MenuItem\n                      className={classes.listItem}\n                      key={signatureHash}\n                      onClick={() => onMethodSelectedChanged(method)}\n                      value={signatureHash}\n                    >\n                      <ListItemText primary={name} />\n                      <ListItemIcon className={classes.iconRight}>\n                        {signatureHash === (selectedMethod as Record<string, string>).signatureHash ? (\n                          <img alt=\"checked\" src={CheckIcon} />\n                        ) : (\n                          <span />\n                        )}\n                      </ListItemIcon>\n                      <ListItemIcon className={classes.iconRight}>\n                        <div>{action}</div>\n                      </ListItemIcon>\n                    </MenuItem>\n                  )\n                })}\n              </div>\n            </Menu>\n          </>\n        </MuiThemeProvider>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MethodsDropdown\n","import React from 'react'\n\nimport TextareaField from 'src/components/forms/TextareaField'\nimport {\n  isAddress,\n  isBoolean,\n  isByte,\n  isInt,\n  isUint,\n} from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\n\nconst validator = (value: string): string | undefined => {\n  try {\n    const values = JSON.parse(value)\n\n    if (!Array.isArray(values)) {\n      return 'be sure to surround value with []'\n    }\n  } catch (e) {\n    return 'invalid format'\n  }\n}\n\nconst typePlaceholder = (text: string, type: string): string => {\n  if (isAddress(type)) {\n    return `${text} E.g.: [\"0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E\",\"0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e\"]`\n  }\n\n  if (isBoolean(type)) {\n    return `${text} E.g.: [true, false, false, true]`\n  }\n\n  if (isUint(type)) {\n    return `${text} E.g.: [1000, 212, 320000022, 23]`\n  }\n\n  if (isInt(type)) {\n    return `${text} E.g.: [1000, -212, 1232, -1]`\n  }\n\n  if (isByte(type)) {\n    return `${text} E.g.: [\"0xc00000000000000000000000000000000000\", \"0xc00000000000000000000000000000000001\"]`\n  }\n\n  return `${text} E.g.: [\"first value\", \"second value\", \"third value\"]`\n}\n\nconst ArrayTypeInput = ({ name, text, type }: { name: string; text: string; type: string }): React.ReactElement => (\n  <TextareaField name={name} placeholder={typePlaceholder(text, type)} text={text} type=\"text\" validate={validator} />\n)\n\nexport default ArrayTypeInput\n","import { Checkbox } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\n\nimport Col from 'src/components/layout/Col'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\n\nimport { composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { isArrayParameter } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils'\nimport ArrayTypeInput from './ArrayTypeInput'\n\ntype Props = {\n  type: string\n  keyValue: string\n  placeholder: string\n}\n\nconst InputComponent = ({ type, keyValue, placeholder }: Props): React.ReactElement | null => {\n  if (!type) {\n    return null\n  }\n\n  switch (type) {\n    case 'bool': {\n      const inputProps = {\n        'data-testid': keyValue,\n      }\n      return (\n        <Col>\n          <Field component={Checkbox} name={keyValue} label={placeholder} type=\"checkbox\" inputProps={inputProps} />\n        </Col>\n      )\n    }\n    case 'address': {\n      return (\n        <Col>\n          <Field\n            component={TextField}\n            name={keyValue}\n            placeholder={placeholder}\n            testId={keyValue}\n            text={placeholder}\n            type=\"text\"\n            validate={composeValidators(required, mustBeEthereumAddress)}\n          />\n        </Col>\n      )\n    }\n    default: {\n      return (\n        <Col>\n          {isArrayParameter(type) ? (\n            <ArrayTypeInput name={keyValue} text={placeholder} type={type} />\n          ) : (\n            <Field\n              component={TextField}\n              name={keyValue}\n              placeholder={placeholder}\n              testId={keyValue}\n              text={placeholder}\n              type=\"text\"\n              validate={required}\n            />\n          )}\n        </Col>\n      )\n    }\n  }\n}\n\nexport default InputComponent\n","import React from 'react'\nimport { useField } from 'react-final-form'\n\nimport Row from 'src/components/layout/Row'\n\nimport InputComponent from './InputComponent'\nimport { generateFormFieldKey } from '../utils'\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\n\nconst RenderInputParams = (): React.ReactElement | null => {\n  const {\n    meta: { valid: validABI },\n  } = useField('abi', { subscription: { valid: true, value: true } })\n  const {\n    input: { value: method },\n  }: { input: { value: AbiItemExtended } } = useField('selectedMethod', { subscription: { value: true } })\n  const renderInputs = validABI && !!method && method.inputs?.length\n\n  return !renderInputs ? null : (\n    <>\n      {method.inputs?.map(({ name, type }, index) => {\n        const placeholder = name ? `${name} (${type})` : type\n        const key = generateFormFieldKey(type, method.signatureHash, index)\n\n        return (\n          <Row key={key} margin=\"sm\">\n            <InputComponent type={type} keyValue={key} placeholder={placeholder} />\n          </Row>\n        )\n      })}\n    </>\n  )\n}\n\nexport default RenderInputParams\n","import React from 'react'\nimport { useField } from 'react-final-form'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from 'src/components/forms/TextField'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\n\nconst useStyles = makeStyles({\n  output: {\n    '& > div > textarea': {\n      letterSpacing: '-0.5px',\n      lineHeight: '20px',\n      height: '40px',\n      overflowY: 'auto',\n    },\n  },\n})\n\nconst RenderOutputParams = () => {\n  const classes = useStyles()\n  const {\n    input: { value: method },\n  }: any = useField('selectedMethod', { subscription: { value: true } })\n  const {\n    input: { value: results },\n  }: any = useField('callResults', { subscription: { value: true } })\n  const multipleResults = !!method && method.outputs.length > 1\n\n  return results ? (\n    <>\n      <Row align=\"left\" margin=\"xs\">\n        <Paragraph color=\"primary\" size=\"lg\" style={{ letterSpacing: '-0.5px' }}>\n          Call result:\n        </Paragraph>\n      </Row>\n      {method.outputs.map(({ name, type }, index) => {\n        const placeholder = name ? `${name} (${type})` : type\n        const key = `methodCallResult-${method.name}_${index}_${type}`\n        const value = multipleResults ? results[index] : results\n\n        return (\n          <Row key={key} margin=\"sm\">\n            <Col>\n              <TextField\n                className={classes.output}\n                multiline\n                disabled\n                rowsMax={3}\n                input={{ name: key, value, placeholder, type: 'text' }}\n                meta={{ valid: true }}\n                testId={key}\n                text={placeholder}\n              />\n            </Col>\n          </Row>\n        )\n      })}\n    </>\n  ) : null\n}\n\nexport default RenderOutputParams\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useField } from 'react-final-form'\nimport { useSelector } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, maxValue, mustBeFloat } from 'src/components/forms/validator'\nimport ButtonLink from 'src/components/layout/ButtonLink'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { isPayable } from 'src/logic/contractInteraction/sources/ABIService'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\nimport { getNetworkInfo } from 'src/config'\n\nconst useStyles = makeStyles(styles)\n\ninterface NativeCoinValueProps {\n  onSetMax: (nativeCoinBalance: string) => void\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nexport const NativeCoinValue = ({ onSetMax }: NativeCoinValueProps): React.ReactElement | null => {\n  const classes = useStyles()\n  const { ethBalance } = useSelector(safeSelector) || {}\n\n  const {\n    input: { value: method },\n  } = useField('selectedMethod', { subscription: { value: true } })\n  const disabled = !isPayable(method)\n\n  if (!ethBalance) {\n    return null\n  }\n\n  return disabled ? null : (\n    <>\n      <Row className={classes.fullWidth} margin=\"xs\">\n        <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n          Value\n        </Paragraph>\n        <ButtonLink\n          color={disabled ? 'disabled' : 'secondary'}\n          onClick={() => !disabled && onSetMax(ethBalance)}\n          weight=\"bold\"\n        >\n          Send max\n        </ButtonLink>\n      </Row>\n      <Row margin=\"md\">\n        <Col>\n          <Field\n            component={TextField}\n            disabled={disabled}\n            inputAdornment={{\n              endAdornment: <InputAdornment position=\"end\">{nativeCoin.name}</InputAdornment>,\n              disabled,\n            }}\n            name=\"value\"\n            placeholder=\"Value\"\n            text=\"Value\"\n            type=\"text\"\n            validate={!disabled && composeValidators(mustBeFloat, maxValue(ethBalance))}\n          />\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport Switch from '@material-ui/core/Switch'\nimport { styles } from './style'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Buttons from './Buttons'\nimport ContractABI from './ContractABI'\nimport { EthAddressInput } from './EthAddressInput'\nimport FormDivisor from './FormDivisor'\nimport FormErrorMessage from './FormErrorMessage'\nimport Header from './Header'\nimport MethodsDropdown from './MethodsDropdown'\nimport RenderInputParams from './RenderInputParams'\nimport RenderOutputParams from './RenderOutputParams'\nimport { createTxObject, formMutators, handleSubmitError, isReadMethod, ensResolver } from './utils'\nimport { TransactionReviewType } from './Review'\nimport { NativeCoinValue } from './NativeCoinValue'\n\nconst useStyles = makeStyles(styles)\n\nexport interface CreatedTx {\n  contractAddress: string\n  data: string\n  selectedMethod: TransactionReviewType\n  value: string | number\n}\n\nexport type ContractInteractionTx = {\n  contractAddress?: string\n}\n\nexport interface ContractInteractionProps {\n  contractAddress?: string\n  initialValues: ContractInteractionTx\n  isABI: boolean\n  onClose: () => void\n  switchMethod: () => void\n  onNext: (tx: CreatedTx, submit: boolean) => void\n}\n\nconst ContractInteraction: React.FC<ContractInteractionProps> = ({\n  contractAddress,\n  initialValues,\n  onClose,\n  onNext,\n  switchMethod,\n  isABI,\n}) => {\n  const classes = useStyles()\n  const { address: safeAddress = '' } = useSelector(safeSelector) || {}\n  let setCallResults\n\n  React.useMemo(() => {\n    if (contractAddress) {\n      initialValues.contractAddress = contractAddress\n    }\n  }, [contractAddress, initialValues.contractAddress])\n\n  const saveForm = async (values: CreatedTx): Promise<void> => {\n    await handleSubmit(values, false)\n    switchMethod()\n  }\n\n  const handleSubmit = async (\n    { contractAddress, selectedMethod, value, ...values },\n    submit = true,\n  ): Promise<void | any> => {\n    if (value || (contractAddress && selectedMethod)) {\n      try {\n        const txObject = createTxObject(selectedMethod, contractAddress, values)\n        const data = txObject.encodeABI()\n\n        if (isReadMethod(selectedMethod) && submit) {\n          const result = await txObject.call({ from: safeAddress })\n          setCallResults(result)\n\n          // this was a read method, so we won't go to the 'review' screen\n          return\n        }\n\n        onNext({ ...values, contractAddress, data, selectedMethod, value }, submit)\n      } catch (error) {\n        return handleSubmitError(error, values)\n      }\n    }\n  }\n\n  return (\n    <>\n      <Header onClose={onClose} subTitle=\"1 of 2\" title=\"Contract Interaction\" />\n      <Hairline />\n      <GnoForm\n        decorators={[ensResolver]}\n        formMutators={formMutators}\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        subscription={{ submitting: true, pristine: true, values: true }}\n      >\n        {(submitting, validating, rest, mutators) => {\n          setCallResults = mutators.setCallResults\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <SafeInfo />\n                <FormDivisor />\n                <EthAddressInput\n                  name=\"contractAddress\"\n                  onScannedValue={mutators.setContractAddress}\n                  text=\"Contract Address*\"\n                />\n                <ContractABI />\n                <MethodsDropdown onChange={mutators.setSelectedMethod} />\n                <NativeCoinValue onSetMax={mutators.setMax} />\n                <RenderInputParams />\n                <RenderOutputParams />\n                <FormErrorMessage />\n                <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                  Use custom data (hex encoded)\n                  <Switch checked={!isABI} onChange={() => saveForm(rest.values)} />\n                </Paragraph>\n              </Block>\n              <Hairline />\n              <Buttons onClose={onClose} />\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default ContractInteraction\n","import * as React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import MuiTextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () => ({\n  root: {\n    paddingTop: lg,\n    paddingBottom: '12px',\n    lineHeight: 0,\n  },\n})\n\nclass TextField extends React.PureComponent<any> {\n  render() {\n    const {\n      classes,\n      input: { name, onChange, value, ...restInput },\n      inputAdornment,\n      meta,\n      multiline,\n      rows,\n      testId,\n      text,\n      ...rest\n    } = this.props\n    const helperText = value ? text : undefined\n    const showError = (meta.touched || !meta.pristine) && !meta.valid\n    const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n    const errorMessage = meta.error || meta.submitError\n    const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n    const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n    const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n    const inputRoot = helperText ? classes.root : ''\n    const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n    const inputProps = {\n      ...restInput,\n      autoComplete: 'off',\n      'data-testid': testId,\n    }\n    const inputRootProps = {\n      ...inputAdornment,\n      className: `${inputRoot} ${statusClasses}`,\n      disableUnderline: disableUnderline,\n    }\n\n    return (\n      <MuiTextField\n        error={hasError && showError}\n        helperText={hasError && showError ? errorMessage : helperText || ' '}\n        inputProps={inputProps} // blank in order to force to have helper text\n        InputProps={inputRootProps}\n        multiline={multiline}\n        name={name}\n        onChange={onChange}\n        rows={rows}\n        style={overflowStyle}\n        value={value}\n        {...rest}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles as any)(TextField)\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","module.exports = __webpack_public_path__ + \"static/media/qrcode.6dd6e2b4.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '420px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","const navigatorCp: any = navigator\n\nnavigatorCp.getMedia =\n  navigatorCp.getUserMedia || // use the proper vendor prefix\n  navigatorCp.webkitGetUserMedia ||\n  navigatorCp.mozGetUserMedia ||\n  navigatorCp.msGetUserMedia\n\nexport const checkWebcam = (success, err) =>\n  navigatorCp.getMedia(\n    { video: true },\n    () => {\n      success()\n    },\n    () => {\n      err()\n    },\n  )\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\nimport { checkWebcam } from './utils'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [useWebcam, setUseWebcam] = useState<boolean | null>(null)\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    checkWebcam(\n      () => {\n        setUseWebcam(true)\n      },\n      () => {\n        setUseWebcam(false)\n      },\n    )\n  }, [])\n\n  useEffect(() => {\n    if (useWebcam === false && !fileUploadModalOpen && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [useWebcam, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: string | null, successData: string | null) => {\n    if (successData) {\n      onScan(successData)\n    }\n    if (error) {\n      console.error('Error uploading file', error)\n      setError(`The QR could not be read`)\n    }\n    if (!useWebcam) {\n      setError(`The QR could not be read`)\n    }\n\n    setFileUploadModalOpen(false)\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error}\n        {useWebcam === null ? (\n          <Block className={classes.loaderContainer} justify=\"center\">\n            <CircularProgress />\n          </Block>\n        ) : (\n          <QrReader\n            legacyMode={!useWebcam}\n            onError={(err) => onFileScannedResolve(err, null)}\n            onScan={(data) => onFileScannedResolve(null, data)}\n            ref={scannerRef}\n            style={{ width: '400px', height: '400px' }}\n          />\n        )}\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setUseWebcam(false)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport AddressInfo from 'src/components/AddressInfo'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\n\nconst SafeInfo = () => {\n  const { address: safeAddress = '', ethBalance, name: safeName } = useSelector(safeSelector) || {}\n  return <AddressInfo ethBalance={ethBalance} safeAddress={safeAddress} safeName={safeName} />\n}\n\nexport default SafeInfo\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";","import { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport * as React from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import { FORM_ERROR, Mutator, SubmissionErrors } from 'final-form'\nimport createDecorator from 'final-form-calculate'\nimport { ContractSendMethod } from 'web3-eth-contract'\n\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { getAddressFromENS, getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { TransactionReviewType } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\n\nexport const NO_CONTRACT = 'no contract'\n\nexport const ensResolver = createDecorator({\n  field: 'contractAddress',\n  updates: {\n    contractAddress: async (contractAddress) => {\n      try {\n        const resolvedAddress = isValidEnsName(contractAddress) && (await getAddressFromENS(contractAddress))\n\n        if (resolvedAddress) {\n          return resolvedAddress\n        }\n\n        return contractAddress\n      } catch (e) {\n        console.error(e.message)\n        return contractAddress\n      }\n    },\n  },\n})\n\nexport const formMutators: Record<string, Mutator<{ selectedMethod: { name: string } }>> = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'value', () => args[0])\n  },\n  setContractAddress: (args, state, utils) => {\n    utils.changeValue(state, 'contractAddress', () => args[0])\n  },\n  setSelectedMethod: (args, state, utils) => {\n    const modified =\n      state.lastFormState?.values.selectedMethod && state.lastFormState.values.selectedMethod.name !== args[0].name\n\n    if (modified) {\n      utils.changeValue(state, 'callResults', () => '')\n      utils.changeValue(state, 'value', () => '')\n    }\n\n    utils.changeValue(state, 'selectedMethod', () => args[0])\n  },\n  setCallResults: (args, state, utils) => {\n    utils.changeValue(state, 'callResults', () => args[0])\n  },\n  setAbiValue: (args, state, utils) => {\n    utils.changeValue(state, 'abi', () => args[0])\n  },\n}\n\nexport const isAddress = (type: string): boolean => type.indexOf('address') === 0\nexport const isBoolean = (type: string): boolean => type.indexOf('bool') === 0\nexport const isString = (type: string): boolean => type.indexOf('string') === 0\nexport const isUint = (type: string): boolean => type.indexOf('uint') === 0\nexport const isInt = (type: string): boolean => type.indexOf('int') === 0\nexport const isByte = (type: string): boolean => type.indexOf('byte') === 0\n\nexport const isArrayParameter = (parameter: string): boolean => /(\\[\\d*])+$/.test(parameter)\n\nexport const handleSubmitError = (error: SubmissionErrors, values: Record<string, string>): Record<string, string> => {\n  for (const key in values) {\n    if (values.hasOwnProperty(key) && values[key] === error.value) {\n      return { [key]: error.reason }\n    }\n  }\n\n  // .call() failed and we're logging a generic error\n  return { [FORM_ERROR]: error.message }\n}\n\nexport const generateFormFieldKey = (type: string, signatureHash: string, index: number): string => {\n  const keyType = isArrayParameter(type) ? 'arrayParam' : type\n  return `methodInput-${signatureHash}_${index}_${keyType}`\n}\n\nconst extractMethodArgs = (signatureHash: string, values: Record<string, string>) => ({ type }, index) => {\n  const key = generateFormFieldKey(type, signatureHash, index)\n\n  if (isArrayParameter(type)) {\n    return JSON.parse(values[key])\n  }\n\n  return values[key]\n}\n\nexport const createTxObject = (\n  method: AbiItemExtended,\n  contractAddress: string,\n  values: Record<string, string>,\n): ContractSendMethod => {\n  const web3 = getWeb3()\n  const contract: any = new web3.eth.Contract([method], contractAddress)\n  const { inputs, name = '', signatureHash } = method\n  const args = inputs?.map(extractMethodArgs(signatureHash, values)) || []\n\n  return contract.methods[name](...args)\n}\n\nexport const isReadMethod = (method: AbiItemExtended): boolean => method && method.action === 'read'\n\nexport const getValueFromTxInputs = (key: string, type: string, tx: TransactionReviewType): string => {\n  if (isArrayParameter(type)) {\n    key = key.replace('[]', '')\n  }\n\n  let value = tx[key]\n\n  if (type === 'bool') {\n    value = String(value)\n  }\n\n  return value\n}\n","import { lg, md, secondaryText, sm, border } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    wordBreak: 'break-word',\n  },\n  value: {\n    marginLeft: sm,\n  },\n  outerData: {\n    borderRadius: '5px',\n    border: `1px solid ${border}`,\n    padding: '11px',\n    minHeight: '21px',\n  },\n  data: {\n    wordBreak: 'break-all',\n    overflow: 'auto',\n    fontSize: '14px',\n    fontFamily: 'Averta',\n    maxHeight: '100px',\n    letterSpacing: 'normal',\n    fontStretch: 'normal',\n    lineHeight: '1.43',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    '& > button': {\n      fontFamily: 'Averta',\n      fontSize: md,\n    },\n  },\n  submitButton: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginLeft: '15px',\n  },\n  dataInput: {\n    '& TextField-root-294': {\n      lineHeight: 'auto',\n      border: 'green',\n    },\n  },\n  selectAddress: {\n    cursor: 'pointer',\n  },\n  fullWidth: {\n    justifyContent: 'space-between',\n  },\n})\n","import { getIn } from 'final-form';\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\n//      \n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar createDecorator = function createDecorator() {\n  for (var _len = arguments.length, calculations = new Array(_len), _key = 0; _key < _len; _key++) {\n    calculations[_key] = arguments[_key];\n  }\n\n  return function (form) {\n    var previousValues = {};\n    var unsubscribe = form.subscribe(function (_ref) {\n      var values = _ref.values;\n      form.batch(function () {\n        var runUpdates = function runUpdates(field, isEqual, updates) {\n          var next = values && getIn(values, field);\n          var previous = previousValues && getIn(previousValues, field);\n\n          if (!isEqual(next, previous)) {\n            if (typeof updates === 'function') {\n              var results = updates(next, field, values, previousValues);\n\n              if (isPromise(results)) {\n                results.then(function (resolved) {\n                  Object.keys(resolved).forEach(function (destField) {\n                    form.change(destField, resolved[destField]);\n                  });\n                });\n              } else {\n                Object.keys(results).forEach(function (destField) {\n                  form.change(destField, results[destField]);\n                });\n              }\n            } else {\n              Object.keys(updates).forEach(function (destField) {\n                var update = updates[destField];\n                var result = update(next, values, previousValues);\n\n                if (isPromise(result)) {\n                  result.then(function (resolved) {\n                    form.change(destField, resolved);\n                  });\n                } else {\n                  form.change(destField, result);\n                }\n              });\n            }\n          }\n        };\n\n        var fields = form.getRegisteredFields();\n        calculations.forEach(function (_ref2) {\n          var field = _ref2.field,\n              isEqual = _ref2.isEqual,\n              updates = _ref2.updates;\n\n          if (typeof field === 'string') {\n            runUpdates(field, isEqual || tripleEquals, updates);\n          } else {\n            // field is a either array or regex\n            var matches = Array.isArray(field) ? function (name) {\n              return ~field.indexOf(name) || field.findIndex(function (f) {\n                return f instanceof RegExp && f.test(name);\n              }) !== -1;\n            } : function (name) {\n              return field.test(name);\n            };\n            fields.forEach(function (fieldName) {\n              if (matches(fieldName)) {\n                runUpdates(fieldName, isEqual || tripleEquals, updates);\n              }\n            });\n          }\n        });\n        previousValues = values;\n      });\n    }, {\n      values: true\n    });\n    return unsubscribe;\n  };\n};\n\n//\n\nexport default createDecorator;\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      borderRadius: 4,\n      fontSize: '15px',\n      width: '500px',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    root: {\n      fontSize: '14px',\n      width: '420px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport React, { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { isFeatureEnabled } from 'src/config'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromENS } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport { trimSpaces } from 'src/utils/strings'\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  pristine?: boolean\n  recipientAddress?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (address: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(address)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: address })\n    return filteredEntries.length === 1 ? filteredEntries[0] : address\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name } = value as AddressBookEntry\n        updateAddressInfo({ address, name })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (isFeatureEnabled(FEATURES.ENS_LOOKUP) && isValidEnsName(normalizedValue)) {\n          const address = await getAddressFromENS(normalizedValue).catch(() => normalizedValue)\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry = typeof validatedAddress === 'string' ? { address, name: normalizedValue } : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string' ? { address: validatedAddress, name: '' } : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus={true}\n          error={!!validationText}\n          fullWidth\n          id=\"filled-error-helper-text\"\n          variant=\"filled\"\n          label={validationText ? validationText : 'Recipient'}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <EthHashInfo hash={address} name={name} showIdenticon />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(addressBookSelector)\n  const [validationText, setValidationText] = useState<string>('')\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(addressBookSelector)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\n\nconst styles = () => ({\n  textarea: {\n    '& > div': {\n      height: '140px',\n      paddingTop: '0',\n      paddingBottom: '0',\n      alignItems: 'auto',\n      '& > textarea': {\n        fontSize: '15px',\n        letterSpacing: '-0.5px',\n        lineHeight: '20px',\n        height: '102px',\n      },\n    },\n  },\n})\n\nconst TextareaField = ({ classes, ...props }) => (\n  <Field {...props} className={classes.textarea} component={TextField} multiline rows=\"5\" />\n)\n\nexport default withStyles(styles as any)(TextareaField)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\ninterface HeaderProps {\n  onClose: () => void\n  subTitle: string\n  title: string\n}\n\nconst Header = ({ onClose, subTitle, title }: HeaderProps) => {\n  const classes = useStyles()\n\n  return (\n    <Row align=\"center\" className={classes.heading} grow>\n      <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n        {title}\n      </Paragraph>\n      <Paragraph className={classes.annotation}>{subTitle}</Paragraph>\n      <IconButton disableRipple onClick={onClose}>\n        <Close className={classes.closeIcon} />\n      </IconButton>\n    </Row>\n  )\n}\n\nexport default Header\n","module.exports = __webpack_public_path__ + \"static/media/check.2e8629da.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst buttonWidth = '140px'\nexport const useDropdownStyles = makeStyles({\n  listItem: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    boxSizing: 'border-box',\n  },\n  listItemSearch: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    padding: '0',\n    boxSizing: 'border-box',\n  },\n  localFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    height: '20px !important',\n    width: '26px !important',\n  },\n  etherFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    width: '26px',\n    height: '26px',\n  },\n  iconLeft: {\n    marginRight: '10px',\n  },\n  iconRight: {\n    marginLeft: '18px',\n  },\n  button: {\n    backgroundColor: '#e8e7e6',\n    border: 'none',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    color: '#5d6d74',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    height: '24px',\n    lineHeight: '1.33',\n    marginRight: '20px',\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    outline: 'none',\n    padding: '0',\n    textAlign: 'left',\n    '&:active': {\n      opacity: '0.8',\n    },\n  },\n  buttonInner: {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '100%',\n    lineHeight: '24px',\n    padding: '0 22px 0 8px',\n    position: 'relative',\n    width: '100%',\n    '&::after': {\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: '5px solid #5d6d74',\n      content: '\"\"',\n      height: '0',\n      position: 'absolute',\n      right: '8px',\n      top: '9px',\n      width: '0',\n    },\n  },\n  openMenuButton: {\n    '&::after': {\n      borderBottom: '5px solid #5d6d74',\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: 'none',\n    },\n  },\n  dropdownItemsScrollWrapper: {\n    maxHeight: '280px',\n    overflow: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: '0',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    marginRight: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    left: '12px',\n    margin: '0',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '18px',\n    '& path': {\n      fill: '#b2b5b2',\n    },\n  },\n  inputRoot: {\n    color: '#5d6d74',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    lineHeight: '1.43',\n    width: '100%',\n  },\n  inputInput: {\n    boxSizing: 'border-box',\n    height: '44px',\n    padding: '12px 12px 12px 40px',\n    width: '100%',\n  },\n})\n"],"sourceRoot":""}