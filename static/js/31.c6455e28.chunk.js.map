{"version":3,"sources":["components/WhenFieldChanges/index.tsx","routes/safe/components/Balances/SendModal/screens/SendCollectible/CollectibleSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendCollectible/CollectibleSelectField/index.tsx","routes/safe/components/Balances/SendModal/screens/SendCollectible/style.ts","routes/safe/components/Balances/SendModal/screens/SendCollectible/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendCollectible/TokenSelectField/index.tsx","routes/safe/components/Balances/SendModal/screens/SendCollectible/index.tsx","components/forms/Field/index.tsx","components/layout/Bold/index.tsx","components/forms/GnoForm/index.tsx","components/AddressInfo/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/utils/setCollectibleImageToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/utils.ts","components/ScanQRModal/index.tsx","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg","components/ScanQRModal/ScanQRWrapper/index.tsx","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/forms/SelectField/index.tsx","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js"],"names":["WhenFieldChanges","field","set","to","name","subscription","onChange","input","selectedTokenStyles","createStyles","container","minHeight","padding","width","tokenData","margin","lineHeight","tokenImage","marginRight","sm","selectStyles","selectMenu","paddingRight","useSelectedCollectibleStyles","makeStyles","SelectedCollectible","tokenId","tokens","classes","token","find","id","shortener","textShortener","charsStart","charsEnd","MenuItem","className","ListItemIcon","Img","alt","description","height","onError","setImageToPlaceholder","src","image","ListItemText","primary","secondary","toString","Paragraph","color","size","style","opacity","weight","useCollectibleSelectFieldStyles","CollectibleSelectField","initialValue","Field","component","SelectField","disabled","length","renderValue","nftTokenId","validate","required","map","key","assetAddress","value","styles","heading","md","lg","justifyContent","boxSizing","maxHeight","annotation","letterSpacing","secondaryText","marginLeft","manage","fontSize","closeIcon","qrCodeBtn","cursor","formContainer","buttonRow","fontFamily","submitButton","boxShadow","selectAddress","useSelectedTokenStyles","SelectedToken","assets","asset","numberOfTokens","formatAmount","symbol","useTokenSelectFieldStyles","TokenSelectField","assetsAddresses","Object","keys","slug","formMutators","setMax","args","state","utils","changeValue","onTokenChange","setRecipient","useStyles","SendCollectible","initialValues","onClose","onNext","recipientAddress","selectedToken","nftAssets","useSelector","safeActiveSelectorMap","nftTokens","nftTokensSelector","addressBook","addressBookSelector","useState","defaultEntry","address","predefinedAddress","addressBookEntry","sameAddress","selectedEntry","setSelectedEntry","pristine","setPristine","isValidAddress","setIsValidAddress","React","useMemo","Row","align","grow","noMargin","IconButton","disableRipple","onClick","Hairline","GnoForm","onSubmit","values","assetName","formState","mutators","selectedNFTTokens","filter","nftToken","handleScan","closeQrModal","scannedAddress","startsWith","replace","scannedName","getNameFromAddressBook","shouldDisableSubmitButton","Block","SafeInfo","Col","xs","ArrowDown","center","layout","onKeyDown","e","role","tabIndex","Identicon","diameter","justify","CopyBtn","content","explorerUrl","getExplorerInfo","AddressBookInput","fieldMutator","middle","ScanQRWrapper","between","Button","minWidth","data-testid","type","variant","GnoField","props","Bold","this","children","stylesBasedOn","flexDirection","flex","decorators","testId","validation","render","handleSubmit","rest","submitting","validating","form","Wrapper","styled","div","StyledBlock","border","nativeCoin","getNetworkInfo","AddressInfo","ethBalance","safeAddress","safeName","error","currentTarget","onerror","TokenPlaceholder","setCollectibleImageToPlaceholder","NFTIcon","module","exports","loaderContainer","close","detailsContainer","backgroundColor","background","button","navigatorCp","navigator","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","ScanQRModal","isOpen","onScan","useWebcam","setUseWebcam","fileUploadModalOpen","setFileUploadModalOpen","setError","scannerRef","openImageDialog","current","useEffect","success","err","video","onFileScannedResolve","successData","console","Modal","handleClose","open","title","CircularProgress","legacyMode","data","ref","safeSelector","qrModalOpen","setQrModalOpen","QRIcon","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","previous","_proto","componentDidUpdate","_this$props","setState","OnChange","_ref","createElement","allowNull","SelectInput","disableError","formControlProps","restInput","label","meta","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","useTextFieldLabelStyle","root","overflow","borderRadius","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","setValidationText","validationText","updateAddressInfo","addressEntry","validateAddress","addressErrorMessage","mustBeEthereumAddress","filteredEntries","filterAddressEntries","inputValue","onInputChange","_","reason","a","normalizedValue","trimSpaces","isFeatureEnabled","FEATURES","ENS_LOOKUP","isValidEnsName","getAddressFromENS","catch","validatedAddress","labelStyles","inputStyles","Autocomplete","openOnFocus","filterOptions","freeSolo","options","renderInput","params","autoFocus","fullWidth","InputLabelProps","shrink","InputProps","getOptionLabel","renderOption","hash","showIdenticon","display","flexGrow","ContractsAddressBookInput","setFilteredEntries","filterContractAddressBookEntries","filteredADBK","filterContractAddresses","onSetSelectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","other","_objectWithoutProperties","context","ListContext","clsx","alignItems","alignItemsFlexStart","withStyles","theme","palette","action","active","flexShrink","marginTop"],"mappings":"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","file":"static/js/31.c6455e28.chunk.js","sourcesContent":["import React from 'react'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport GnoField from 'src/components/forms/Field'\n\nconst WhenFieldChanges = ({ field, set, to }) => (\n  <GnoField name={set} subscription={{}}>\n    {(\n      // No subscription. We only use Field to get to the change function\n      { input: { onChange } },\n    ) => (\n      <OnChange name={field}>\n        {() => {\n          onChange(to)\n        }}\n      </OnChange>\n    )}\n  </GnoField>\n)\nexport default WhenFieldChanges\n","import { sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const selectedTokenStyles = createStyles({\n  container: {\n    minHeight: '55px',\n    padding: 0,\n    width: '100%',\n  },\n  tokenData: {\n    padding: 0,\n    margin: 0,\n    lineHeight: '14px',\n  },\n  tokenImage: {\n    marginRight: sm,\n  },\n})\n\nexport const selectStyles = createStyles({\n  selectMenu: {\n    paddingRight: 0,\n  },\n  tokenImage: {\n    marginRight: sm,\n  },\n})\n","import ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { selectStyles, selectedTokenStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport { required } from 'src/components/forms/validator'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { textShortener } from 'src/utils/strings'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles.d'\n\nconst useSelectedCollectibleStyles = makeStyles(selectedTokenStyles)\n\ntype SelectedCollectibleProps = {\n  tokenId?: number | string\n  tokens: NFTToken[]\n}\n\nconst SelectedCollectible = ({ tokenId, tokens }: SelectedCollectibleProps): React.ReactElement => {\n  const classes = useSelectedCollectibleStyles()\n  const token = tokenId && tokens ? tokens.find(({ tokenId: id }) => tokenId === id) : null\n  const shortener = textShortener({ charsStart: 40, charsEnd: 0 })\n\n  return (\n    <MenuItem className={classes.container}>\n      {token ? (\n        <>\n          <ListItemIcon className={classes.tokenImage}>\n            <Img alt={token.description} height={28} onError={setImageToPlaceholder} src={token.image} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.tokenData}\n            primary={shortener(token.name)}\n            secondary={`token ID: ${shortener(token.tokenId.toString())}`}\n          />\n        </>\n      ) : (\n        <Paragraph color=\"disabled\" size=\"md\" style={{ opacity: 0.5 }} weight=\"light\">\n          Select a token*\n        </Paragraph>\n      )}\n    </MenuItem>\n  )\n}\n\nconst useCollectibleSelectFieldStyles = makeStyles(selectStyles)\n\ntype CollectibleSelectFieldProps = {\n  initialValue?: number | string\n  tokens: NFTToken[]\n}\n\nexport const CollectibleSelectField = ({ initialValue, tokens }: CollectibleSelectFieldProps): React.ReactElement => {\n  const classes = useCollectibleSelectFieldStyles()\n\n  return (\n    <Field\n      className={classes.selectMenu}\n      component={SelectField}\n      disabled={!tokens.length}\n      initialValue={initialValue}\n      name=\"nftTokenId\"\n      renderValue={(nftTokenId) => <SelectedCollectible tokenId={nftTokenId} tokens={tokens} />}\n      validate={required}\n    >\n      {tokens.map((token) => (\n        <MenuItem key={`${token.assetAddress}-${token.tokenId}`} value={token.tokenId}>\n          <ListItemIcon className={classes.tokenImage}>\n            <Img alt={token.name} height={28} onError={setImageToPlaceholder} src={token.image} />\n          </ListItemIcon>\n          <ListItemText primary={token.name} secondary={`token ID: ${token.tokenId}`} />\n        </MenuItem>\n      ))}\n    </Field>\n  )\n}\n","import { lg, md, secondaryText } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    '& > button': {\n      fontFamily: 'Averta',\n      fontSize: md,\n    },\n  },\n  submitButton: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginLeft: '15px',\n  },\n  selectAddress: {\n    cursor: 'pointer',\n  },\n})\n","import { sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const selectedTokenStyles = createStyles({\n  container: {\n    minHeight: '55px',\n    padding: 0,\n    width: '100%',\n  },\n  tokenData: {\n    padding: 0,\n    margin: 0,\n    lineHeight: '14px',\n  },\n  tokenImage: {\n    marginRight: sm,\n  },\n})\n\nexport const selectStyles = createStyles({\n  selectMenu: {\n    paddingRight: 0,\n  },\n  tokenImage: {\n    marginRight: sm,\n  },\n})\n","import ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { selectStyles, selectedTokenStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport { required } from 'src/components/forms/validator'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { textShortener } from 'src/utils/strings'\nimport { NFTAssets } from 'src/logic/collectibles/sources/collectibles.d'\n\nconst useSelectedTokenStyles = makeStyles(selectedTokenStyles)\n\ntype SelectedTokenProps = {\n  assetAddress?: string\n  assets: NFTAssets\n}\n\nconst SelectedToken = ({ assetAddress, assets }: SelectedTokenProps): React.ReactElement => {\n  const classes = useSelectedTokenStyles()\n  const asset = assetAddress ? assets[assetAddress] : null\n  const shortener = textShortener({ charsStart: 40, charsEnd: 0 })\n\n  return (\n    <MenuItem className={classes.container}>\n      {asset && asset.numberOfTokens ? (\n        <>\n          <ListItemIcon className={classes.tokenImage}>\n            <Img alt={asset.name} height={28} onError={setImageToPlaceholder} src={asset.image} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.tokenData}\n            primary={shortener(asset.name)}\n            secondary={`${formatAmount(asset.numberOfTokens.toString())} ${asset.symbol}`}\n          />\n        </>\n      ) : (\n        <Paragraph color=\"disabled\" size=\"md\" style={{ opacity: 0.5 }} weight=\"light\">\n          Select an asset*\n        </Paragraph>\n      )}\n    </MenuItem>\n  )\n}\n\nconst useTokenSelectFieldStyles = makeStyles(selectStyles)\n\ntype TokenSelectFieldProps = {\n  assets: NFTAssets\n  initialValue?: string\n}\n\nconst TokenSelectField = ({ assets, initialValue }: TokenSelectFieldProps): React.ReactElement => {\n  const classes = useTokenSelectFieldStyles()\n  const assetsAddresses = Object.keys(assets)\n\n  return (\n    <Field\n      className={classes.selectMenu}\n      component={SelectField}\n      disabled={!assetsAddresses.length}\n      initialValue={initialValue}\n      name=\"assetAddress\"\n      renderValue={(assetAddress) => <SelectedToken assetAddress={assetAddress} assets={assets} />}\n      validate={required}\n    >\n      {assetsAddresses.map((assetAddress) => {\n        const asset = assets[assetAddress]\n\n        return (\n          <MenuItem key={asset.slug} value={assetAddress}>\n            <ListItemIcon className={classes.tokenImage}>\n              <Img alt={asset.name} height={28} onError={setImageToPlaceholder} src={asset.image} />\n            </ListItemIcon>\n            <ListItemText\n              primary={asset.name}\n              secondary={`Count: ${formatAmount(asset.numberOfTokens.toString())} ${asset.symbol}`}\n            />\n          </MenuItem>\n        )\n      })}\n    </Field>\n  )\n}\n\nexport default TokenSelectField\n","import { ExplorerButton } from '@gnosis.pm/safe-react-components'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport WhenFieldChanges from 'src/components/WhenFieldChanges'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { getNameFromAddressBook } from 'src/logic/addressBook/utils'\nimport { nftTokensSelector, safeActiveSelectorMap } from 'src/logic/collectibles/store/selectors'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles.d'\nimport { getExplorerInfo } from 'src/config'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { sm } from 'src/theme/variables'\n\nimport ArrowDown from 'src/routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg'\n\nimport { CollectibleSelectField } from './CollectibleSelectField'\nimport { styles } from './style'\nimport TokenSelectField from './TokenSelectField'\n\nconst formMutators = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'amount', () => args[0])\n  },\n  onTokenChange: (args, state, utils) => {\n    utils.changeValue(state, 'amount', () => '')\n  },\n  setRecipient: (args, state, utils) => {\n    utils.changeValue(state, 'recipientAddress', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype SendCollectibleProps = {\n  initialValues: any\n  onClose: () => void\n  onNext: (txInfo: SendCollectibleTxInfo) => void\n  recipientAddress?: string\n  selectedToken?: NFTToken\n}\n\nexport type SendCollectibleTxInfo = {\n  assetAddress: string\n  assetName: string\n  nftTokenId: string\n  recipientAddress?: string\n}\n\nconst SendCollectible = ({\n  initialValues,\n  onClose,\n  onNext,\n  recipientAddress,\n  selectedToken,\n}: SendCollectibleProps): React.ReactElement => {\n  const classes = useStyles()\n  const nftAssets = useSelector(safeActiveSelectorMap)\n  const nftTokens = useSelector(nftTokensSelector)\n  const addressBook = useSelector(addressBookSelector)\n  const [selectedEntry, setSelectedEntry] = useState<{ address: string; name: string } | null>(() => {\n    const defaultEntry = { address: '', name: '' }\n\n    // if there's nothing to lookup for, we return the default entry\n    if (!initialValues?.recipientAddress && !recipientAddress) {\n      return defaultEntry\n    }\n\n    // if there's something to lookup for, `initialValues` has precedence over `recipientAddress`\n    const predefinedAddress = initialValues?.recipientAddress ?? recipientAddress\n    const addressBookEntry = addressBook.find(({ address }) => {\n      return sameAddress(predefinedAddress, address)\n    })\n\n    // if found in the Address Book, then we return the entry\n    if (addressBookEntry) {\n      return addressBookEntry\n    }\n\n    // otherwise we return the default entry\n    return defaultEntry\n  })\n  const [pristine, setPristine] = useState(true)\n  const [isValidAddress, setIsValidAddress] = useState(false)\n\n  React.useMemo(() => {\n    if (selectedEntry === null && pristine) {\n      setPristine(false)\n    }\n  }, [selectedEntry, pristine])\n\n  const handleSubmit = (values: SendCollectibleTxInfo) => {\n    // If the input wasn't modified, there was no mutation of the recipientAddress\n    if (!values.recipientAddress) {\n      values.recipientAddress = selectedEntry?.address\n    }\n\n    values.assetName = nftAssets[values.assetAddress].name\n\n    onNext(values)\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Send Collectible\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm formMutators={formMutators} initialValues={initialValues} onSubmit={handleSubmit}>\n        {(...args) => {\n          const formState = args[2]\n          const mutators = args[3]\n          const { assetAddress } = formState.values\n          const selectedNFTTokens = nftTokens.filter((nftToken) => nftToken.assetAddress === assetAddress)\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            const scannedName = addressBook ? getNameFromAddressBook(addressBook, scannedAddress) : ''\n            mutators.setRecipient(scannedAddress)\n            setSelectedEntry({\n              name: scannedName ?? '',\n              address: scannedAddress,\n            })\n            closeQrModal()\n          }\n\n          let shouldDisableSubmitButton = !isValidAddress\n\n          if (selectedEntry) {\n            shouldDisableSubmitButton = !selectedEntry.address\n          }\n\n          return (\n            <>\n              <WhenFieldChanges field=\"assetAddress\" set=\"nftTokenId\" to={''} />\n              <Block className={classes.formContainer}>\n                <SafeInfo />\n                <Row margin=\"md\">\n                  <Col xs={1}>\n                    <img alt=\"Arrow Down\" src={ArrowDown} style={{ marginLeft: sm }} />\n                  </Col>\n                  <Col center=\"xs\" layout=\"column\" xs={11}>\n                    <Hairline />\n                  </Col>\n                </Row>\n                {selectedEntry && selectedEntry.address ? (\n                  <div\n                    onKeyDown={(e) => {\n                      if (e.key === 'Tab') {\n                        return\n                      }\n                      setSelectedEntry({ address: '', name: '' })\n                    }}\n                    onClick={() => {\n                      setSelectedEntry({ address: '', name: '' })\n                    }}\n                    role=\"listbox\"\n                    tabIndex={0}\n                  >\n                    <Row margin=\"xs\">\n                      <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                        Recipient\n                      </Paragraph>\n                    </Row>\n                    <Row align=\"center\" margin=\"md\">\n                      <Col xs={1}>\n                        <Identicon address={selectedEntry.address} diameter={32} />\n                      </Col>\n                      <Col layout=\"column\" xs={11}>\n                        <Block justify=\"left\">\n                          <Block>\n                            <Paragraph\n                              className={classes.selectAddress}\n                              noMargin\n                              onClick={() => setSelectedEntry({ address: '', name: 'string' })}\n                              weight=\"bolder\"\n                            >\n                              {selectedEntry.name}\n                            </Paragraph>\n                            <Paragraph\n                              className={classes.selectAddress}\n                              noMargin\n                              onClick={() => setSelectedEntry({ address: '', name: 'string' })}\n                              weight=\"bolder\"\n                            >\n                              {selectedEntry.address}\n                            </Paragraph>\n                          </Block>\n                          <CopyBtn content={selectedEntry.address} />\n                          <ExplorerButton explorerUrl={getExplorerInfo(selectedEntry.address)} />\n                        </Block>\n                      </Col>\n                    </Row>\n                  </div>\n                ) : (\n                  <>\n                    <Row margin=\"md\">\n                      <Col xs={11}>\n                        <AddressBookInput\n                          fieldMutator={mutators.setRecipient}\n                          pristine={pristine}\n                          setIsValidAddress={setIsValidAddress}\n                          setSelectedEntry={setSelectedEntry}\n                        />\n                      </Col>\n                      <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                        <ScanQRWrapper handleScan={handleScan} />\n                      </Col>\n                    </Row>\n                  </>\n                )}\n                <Row margin=\"xs\">\n                  <Col between=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                      Collectible\n                    </Paragraph>\n                  </Col>\n                </Row>\n                <Row margin=\"sm\">\n                  <Col>\n                    <TokenSelectField assets={nftAssets} initialValue={selectedToken?.assetAddress} />\n                  </Col>\n                </Row>\n                <Row margin=\"xs\">\n                  <Col between=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                      Token ID\n                    </Paragraph>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col>\n                    <CollectibleSelectField initialValue={selectedToken?.tokenId} tokens={selectedNFTTokens} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button minWidth={140} onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button\n                  className={classes.submitButton}\n                  color=\"primary\"\n                  data-testid=\"review-tx-btn\"\n                  disabled={shouldDisableSubmitButton}\n                  minWidth={140}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Review\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default SendCollectible\n","import * as React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = TokenPlaceholder\n}\n","import { SyntheticEvent } from 'react'\n\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\n\nexport const setCollectibleImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = NFTIcon\n}\n","module.exports = __webpack_public_path__ + \"static/media/token_placeholder.a8034531.svg\";","module.exports = __webpack_public_path__ + \"static/media/qrcode.6dd6e2b4.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '420px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","const navigatorCp: any = navigator\n\nnavigatorCp.getMedia =\n  navigatorCp.getUserMedia || // use the proper vendor prefix\n  navigatorCp.webkitGetUserMedia ||\n  navigatorCp.mozGetUserMedia ||\n  navigatorCp.msGetUserMedia\n\nexport const checkWebcam = (success, err) =>\n  navigatorCp.getMedia(\n    { video: true },\n    () => {\n      success()\n    },\n    () => {\n      err()\n    },\n  )\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\nimport { checkWebcam } from './utils'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [useWebcam, setUseWebcam] = useState<boolean | null>(null)\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    checkWebcam(\n      () => {\n        setUseWebcam(true)\n      },\n      () => {\n        setUseWebcam(false)\n      },\n    )\n  }, [])\n\n  useEffect(() => {\n    if (useWebcam === false && !fileUploadModalOpen && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [useWebcam, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: string | null, successData: string | null) => {\n    if (successData) {\n      onScan(successData)\n    }\n    if (error) {\n      console.error('Error uploading file', error)\n      setError(`The QR could not be read`)\n    }\n    if (!useWebcam) {\n      setError(`The QR could not be read`)\n    }\n\n    setFileUploadModalOpen(false)\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error}\n        {useWebcam === null ? (\n          <Block className={classes.loaderContainer} justify=\"center\">\n            <CircularProgress />\n          </Block>\n        ) : (\n          <QrReader\n            legacyMode={!useWebcam}\n            onError={(err) => onFileScannedResolve(err, null)}\n            onScan={(data) => onFileScannedResolve(null, data)}\n            ref={scannerRef}\n            style={{ width: '400px', height: '400px' }}\n          />\n        )}\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setUseWebcam(false)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport AddressInfo from 'src/components/AddressInfo'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\n\nconst SafeInfo = () => {\n  const { address: safeAddress = '', ethBalance, name: safeName } = useSelector(safeSelector) || {}\n  return <AddressInfo ethBalance={ethBalance} safeAddress={safeAddress} safeName={safeName} />\n}\n\nexport default SafeInfo\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";","import { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport * as React from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import { Component, createElement } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\n//\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      borderRadius: 4,\n      fontSize: '15px',\n      width: '500px',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    root: {\n      fontSize: '14px',\n      width: '420px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport React, { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { isFeatureEnabled } from 'src/config'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromENS } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport { trimSpaces } from 'src/utils/strings'\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  pristine?: boolean\n  recipientAddress?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (address: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(address)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: address })\n    return filteredEntries.length === 1 ? filteredEntries[0] : address\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name } = value as AddressBookEntry\n        updateAddressInfo({ address, name })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (isFeatureEnabled(FEATURES.ENS_LOOKUP) && isValidEnsName(normalizedValue)) {\n          const address = await getAddressFromENS(normalizedValue).catch(() => normalizedValue)\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry = typeof validatedAddress === 'string' ? { address, name: normalizedValue } : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string' ? { address: validatedAddress, name: '' } : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus={true}\n          error={!!validationText}\n          fullWidth\n          id=\"filled-error-helper-text\"\n          variant=\"filled\"\n          label={validationText ? validationText : 'Recipient'}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <EthHashInfo hash={address} name={name} showIdenticon />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(addressBookSelector)\n  const [validationText, setValidationText] = useState<string>('')\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(addressBookSelector)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);"],"sourceRoot":""}