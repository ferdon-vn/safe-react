{"version":3,"sources":["components/Table/TableHead.tsx","components/Table/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","assets/icons/info_red.svg","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","routes/safe/components/Balances/AssetTableCell/index.tsx","routes/safe/components/Balances/dataFetcher.ts","routes/safe/components/Balances/Coins/styles.ts","routes/safe/components/Balances/Coins/index.tsx"],"names":["cellWidth","width","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","align","key","id","padding","disablePadding","sortDirection","static","style","label","active","direction","onClick","React","styles","root","backgroundColor","borderTopRightRadius","sm","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","xl","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","orderProp","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","emptyRows","height","display","justifyContent","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","value","undefined","defaultOrderBy","find","children","classes","data","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","size","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","input","sortedData","stableSort","getSorting","slice","Math","min","isEmpty","aria-labelledby","className","backIconButtonProps","component","count","nextIconButtonProps","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","defaultProps","withStyles","Toolbar","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","gutters","theme","position","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","name","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","useTheme","IconButton","event","disabled","color","ceil","defaultLabelDisplayedRows","from","to","concat","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","length","Typography","caption","Select","select","icon","selectIcon","InputBase","onChange","rowsPerPageOption","menuItem","actions","title","palette","text","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","marginLeft","textAlign","textAlignLast","module","exports","Skeleton","_props$animation","animation","hasChildren","Boolean","withChildren","fitContent","heightAuto","fade","type","marginTop","transformOrigin","transform","borderRadius","shape","content","rect","circle","pulse","opacity","wave","background","action","hover","bottom","left","right","top","visibility","AssetTableCell","asset","Block","justify","Img","alt","onError","setImageToPlaceholder","src","logoUri","Paragraph","noMargin","nativeCoin","getNetworkInfo","getBalanceData","activeTokens","currencySelected","currencyValues","currencyRate","token","address","symbol","formatAmountInUsFormat","balance","toString","FIXED","currencyValue","tokenAddress","balanceInBaseCurrency","BigNumber","times","toFixed","getTokenPriceInCurrency","createStyles","iconSmall","tooltipInfo","hide","receive","minWidth","xs","send","leftIcon","currencyValueRow","useStyles","makeStyles","CurrencyTooltip","balanceWithSymbol","valueWithCurrency","replace","Tooltip","placement","InfoIcon","Coins","showReceiveFunds","showSendFunds","assetColumn","custom","balanceColumn","borderBottomWidth","fontFamily","fontWeight","fontStyle","List","generateColumns","autoColumns","filter","c","selectedCurrency","useSelector","currentCurrencySelector","currencyRateSelector","extendedSafeTokensSelector","safeFiatBalancesListSelector","granted","grantedSelector","trackEvent","useAnalytics","useEffect","category","SAFE_NAVIGATION_EVENT","filteredData","useMemo","TableContainer","Table","row","index","TableRow","data-testid","BALANCE_ROW_TEST_ID","tabIndex","cellItem","showCurrencyValueRow","Row","Button","testId"],"mappings":"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","file":"static/js/45.a0097018.chunk.js","sourcesContent":["import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xl, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: xl,\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_HEIGHT = 49\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = (emptyRows) => ({\n    height: FIXED_HEIGHT * emptyRows,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n\n    let sortedData = stableSort(data, getSorting(orderParam, orderByParam, orderProp), fixedParam)\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const emptyRows = displayRows - Math.min(displayRows, data.size - page * displayRows)\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle(emptyRows + 1)}>\n            <CircularProgress size={60} />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","module.exports = __webpack_public_path__ + \"static/media/info_red.abaf3e92.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import * as React from 'react'\n\nimport Block from 'src/components/layout/Block'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\n\nconst AssetTableCell = (props) => {\n  const { asset } = props\n\n  return (\n    <Block justify=\"left\">\n      <Img alt={asset.name} height={26} onError={setImageToPlaceholder} src={asset.logoUri} />\n      <Paragraph noMargin size=\"lg\" style={{ marginLeft: 10 }}>\n        {asset.name}\n      </Paragraph>\n    </Block>\n  )\n}\n\nexport default AssetTableCell\n","import { BigNumber } from 'bignumber.js'\nimport { List } from 'immutable'\nimport { getNetworkInfo } from 'src/config'\nimport { FIXED } from 'src/components/Table/sorting'\nimport { formatAmountInUsFormat } from 'src/logic/tokens/utils/formatAmount'\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { BalanceCurrencyList } from 'src/logic/currencyValues/store/model/currencyValues'\nimport { Token } from 'src/logic/tokens/store/model/token'\n\nexport const BALANCE_TABLE_ASSET_ID = 'asset'\nexport const BALANCE_TABLE_BALANCE_ID = 'balance'\nexport const BALANCE_TABLE_VALUE_ID = 'value'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst getTokenPriceInCurrency = (\n  token: Token,\n  currencySelected?: string,\n  currencyValues?: BalanceCurrencyList,\n  currencyRate?: number,\n): string => {\n  if (!currencySelected) {\n    return ''\n  }\n  const currencyValue = currencyValues?.find(({ tokenAddress }) => {\n    if (token.address === nativeCoin.address && !tokenAddress) {\n      return true\n    }\n\n    return token.address === tokenAddress\n  })\n\n  if (!currencyValue || !currencyRate) {\n    return ''\n  }\n\n  const { balanceInBaseCurrency } = currencyValue\n  const balance = new BigNumber(balanceInBaseCurrency).times(currencyRate).toFixed(2)\n\n  return `${formatAmountInUsFormat(balance)} ${currencySelected}`\n}\n\nexport interface BalanceData {\n  asset: { name: string; logoUri: string; address: string; symbol: string }\n  assetOrder: string\n  balance: string\n  balanceOrder: number\n  fixed: boolean\n  value: string\n}\n\nexport const getBalanceData = (\n  activeTokens: List<Token>,\n  currencySelected?: string,\n  currencyValues?: BalanceCurrencyList,\n  currencyRate?: number,\n): List<BalanceData> => {\n  const { nativeCoin } = getNetworkInfo()\n  return activeTokens.map((token) => ({\n    [BALANCE_TABLE_ASSET_ID]: {\n      name: token.name,\n      logoUri: token.logoUri,\n      address: token.address,\n      symbol: token.symbol,\n    },\n    assetOrder: token.name,\n    [BALANCE_TABLE_BALANCE_ID]: `${formatAmountInUsFormat(token.balance?.toString() || '0')} ${token.symbol}`,\n    balanceOrder: Number(token.balance),\n    [FIXED]: token.symbol === nativeCoin.symbol,\n    [BALANCE_TABLE_VALUE_ID]: getTokenPriceInCurrency(token, currencySelected, currencyValues, currencyRate),\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const assetColumn: TableColumn = {\n    id: BALANCE_TABLE_ASSET_ID,\n    order: true,\n    disablePadding: false,\n    label: 'Asset',\n    custom: false,\n    width: 250,\n  }\n\n  const balanceColumn: TableColumn = {\n    id: BALANCE_TABLE_BALANCE_ID,\n    align: 'right',\n    order: true,\n    disablePadding: false,\n    label: 'Balance',\n    custom: false,\n  }\n\n  const actions: TableColumn = {\n    id: 'actions',\n    order: false,\n    disablePadding: false,\n    label: '',\n    custom: true,\n    static: true,\n  }\n\n  const value: TableColumn = {\n    id: BALANCE_TABLE_VALUE_ID,\n    order: false,\n    label: 'Value',\n    custom: false,\n    static: true,\n    disablePadding: false,\n    style: {\n      fontSize: '11px',\n      color: '#5d6d74',\n      borderBottomWidth: '2px',\n      width: '125px',\n      fontFamily: 'Averta',\n      fontWeight: 'normal',\n      fontStyle: 'normal',\n      textAlign: 'right',\n    },\n  }\n\n  return List([assetColumn, balanceColumn, value, actions])\n}\n","import { sm, xs } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  iconSmall: {\n    fontSize: 16,\n  },\n  tooltipInfo: {\n    position: 'relative',\n    top: '3px',\n    left: '3px',\n  },\n  hide: {\n    '&:hover': {\n      backgroundColor: '#fff3e2',\n    },\n    '&:hover $actions': {\n      visibility: 'initial',\n    },\n    '&:focus $actions': {\n      visibility: 'initial',\n    },\n  },\n  actions: {\n    justifyContent: 'flex-end',\n    visibility: 'hidden',\n  },\n  receive: {\n    width: '95px',\n    minWidth: '95px',\n    marginLeft: sm,\n    borderRadius: xs,\n    '& > span': {\n      fontSize: '14px',\n    },\n  },\n  send: {\n    width: '75px',\n    minWidth: '75px',\n    borderRadius: xs,\n    '& > span': {\n      fontSize: '14px',\n    },\n  },\n  leftIcon: {\n    marginRight: sm,\n  },\n  currencyValueRow: {\n    maxWidth: '125px',\n    textAlign: 'right',\n  },\n})\n","import React, { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { List } from 'immutable'\nimport TableCell from '@material-ui/core/TableCell'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport { Skeleton } from '@material-ui/lab'\n\nimport InfoIcon from 'src/assets/icons/info_red.svg'\n\nimport Img from 'src/components/layout/Img'\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Button from 'src/components/layout/Button'\nimport Row from 'src/components/layout/Row'\nimport {\n  currencyRateSelector,\n  currentCurrencySelector,\n  safeFiatBalancesListSelector,\n} from 'src/logic/currencyValues/store/selectors'\nimport { BALANCE_ROW_TEST_ID } from 'src/routes/safe/components/Balances'\nimport AssetTableCell from 'src/routes/safe/components/Balances/AssetTableCell'\nimport {\n  BALANCE_TABLE_ASSET_ID,\n  BALANCE_TABLE_BALANCE_ID,\n  BALANCE_TABLE_VALUE_ID,\n  generateColumns,\n  getBalanceData,\n  BalanceData,\n} from 'src/routes/safe/components/Balances/dataFetcher'\nimport { extendedSafeTokensSelector, grantedSelector } from 'src/routes/safe/container/selector'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { styles } from './styles'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  showReceiveFunds: () => void\n  showSendFunds: (tokenAddress: string) => void\n}\n\ntype CurrencyTooltipProps = {\n  valueWithCurrency: string\n  balanceWithSymbol: string\n}\n\nconst CurrencyTooltip = (props: CurrencyTooltipProps): React.ReactElement | null => {\n  const { balanceWithSymbol, valueWithCurrency } = props\n  const classes = useStyles()\n  const balance = balanceWithSymbol.replace(/[^\\d.-]/g, '')\n  const value = valueWithCurrency.replace(/[^\\d.-]/g, '')\n  if (!Number(value) && Number(balance)) {\n    return (\n      <Tooltip placement=\"top\" title=\"Balance may be zero due to missing token price information\">\n        <span>\n          <Img className={classes.tooltipInfo} alt=\"Info Tooltip\" height={16} src={InfoIcon} />\n        </span>\n      </Tooltip>\n    )\n  }\n  return null\n}\n\nconst Coins = (props: Props): React.ReactElement => {\n  const { showReceiveFunds, showSendFunds } = props\n  const classes = useStyles()\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const selectedCurrency = useSelector(currentCurrencySelector)\n  const currencyRate = useSelector(currencyRateSelector)\n  const activeTokens = useSelector(extendedSafeTokensSelector)\n  const currencyValues = useSelector(safeFiatBalancesListSelector)\n  const granted = useSelector(grantedSelector)\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Coins' })\n  }, [trackEvent])\n\n  const filteredData: List<BalanceData> = useMemo(\n    () => getBalanceData(activeTokens, selectedCurrency, currencyValues, currencyRate),\n    [activeTokens, selectedCurrency, currencyValues, currencyRate],\n  )\n\n  return (\n    <TableContainer>\n      <Table\n        columns={columns}\n        data={filteredData}\n        defaultFixed\n        defaultOrderBy={BALANCE_TABLE_ASSET_ID}\n        defaultRowsPerPage={10}\n        label=\"Balances\"\n        size={filteredData.size}\n      >\n        {(sortedData) =>\n          sortedData.map((row, index) => (\n            <TableRow className={classes.hide} data-testid={BALANCE_ROW_TEST_ID} key={index} tabIndex={-1}>\n              {autoColumns.map((column) => {\n                const { align, id, width } = column\n                let cellItem\n                switch (id) {\n                  case BALANCE_TABLE_ASSET_ID: {\n                    cellItem = <AssetTableCell asset={row[id]} />\n                    break\n                  }\n                  case BALANCE_TABLE_BALANCE_ID: {\n                    cellItem = <div data-testid={`balance-${row[BALANCE_TABLE_ASSET_ID].symbol}`}>{row[id]}</div>\n                    break\n                  }\n                  case BALANCE_TABLE_VALUE_ID: {\n                    // If there are no values for that row but we have balances, we display as '0.00 {CurrencySelected}'\n                    // In case we don't have balances, we display a skeleton\n                    const showCurrencyValueRow = row[id] || row[BALANCE_TABLE_BALANCE_ID]\n                    const valueWithCurrency = row[id] ? row[id] : `0.00 ${selectedCurrency}`\n                    cellItem =\n                      showCurrencyValueRow && selectedCurrency ? (\n                        <div className={classes.currencyValueRow}>\n                          {valueWithCurrency}\n                          <CurrencyTooltip\n                            valueWithCurrency={valueWithCurrency}\n                            balanceWithSymbol={row[BALANCE_TABLE_BALANCE_ID]}\n                          />\n                        </div>\n                      ) : (\n                        <Skeleton animation=\"wave\" />\n                      )\n                    break\n                  }\n                  default: {\n                    cellItem = null\n                    break\n                  }\n                }\n                return (\n                  <TableCell align={align} component=\"td\" key={id} style={cellWidth(width)}>\n                    {cellItem}\n                  </TableCell>\n                )\n              })}\n              <TableCell component=\"td\">\n                <Row align=\"end\" className={classes.actions}>\n                  {granted && (\n                    <Button\n                      className={classes.send}\n                      color=\"primary\"\n                      onClick={() => showSendFunds(row.asset.address)}\n                      size=\"small\"\n                      testId=\"balance-send-btn\"\n                      variant=\"contained\"\n                    >\n                      {/* <CallMade alt=\"Send Transaction\" className={classNames(classes.leftIcon, classes.iconSmall)} /> */}\n                      Send\n                    </Button>\n                  )}\n                  <Button\n                    className={classes.receive}\n                    color=\"primary\"\n                    onClick={showReceiveFunds}\n                    size=\"small\"\n                    variant=\"contained\"\n                  >\n                    {/* <CallReceived\n                      alt=\"Receive Transaction\"\n                      className={classNames(classes.leftIcon, classes.iconSmall)}\n                    /> */}\n                    Receive\n                  </Button>\n                </Row>\n              </TableCell>\n            </TableRow>\n          ))\n        }\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default Coins\n"],"sourceRoot":""}