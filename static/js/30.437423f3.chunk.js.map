{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/index.tsx","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/index.tsx","components/forms/Field/index.tsx","components/layout/Bold/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","components/AddressInfo/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/utils/setCollectibleImageToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/utils.ts","components/ScanQRModal/index.tsx","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg","components/ScanQRModal/ScanQRWrapper/index.tsx","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/forms/SelectField/index.tsx","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js"],"names":["SelectedTokenStyled","withStyles","container","minHeight","padding","width","tokenData","margin","lineHeight","tokenImage","marginRight","sm","classes","tokenAddress","token","tokens","find","address","MenuItem","className","ListItemIcon","Img","alt","name","height","onError","setImageToPlaceholder","src","logoUri","ListItemText","primary","secondary","formatAmount","balance","symbol","Paragraph","color","size","style","opacity","weight","selectMenu","paddingRight","initialValue","isValid","Field","component","SelectField","displayEmpty","renderValue","validate","required","map","key","value","data-testid","styles","createStyles","heading","md","lg","justifyContent","boxSizing","maxHeight","annotation","letterSpacing","secondaryText","marginLeft","manage","fontSize","closeIcon","qrCodeBtn","cursor","formContainer","buttonRow","fontFamily","submitButton","boxShadow","selectAddress","formMutators","setMax","args","state","utils","changeValue","onTokenChange","formState","values","amount","setRecipient","useStyles","makeStyles","nativeCoin","getNetworkInfo","SendFunds","onClose","onNext","recipientAddress","selectedToken","useSelector","extendedSafeTokensSelector","addressBook","addressBookSelector","useState","defaultEntry","addressBookEntry","sameAddress","selectedEntry","setSelectedEntry","pristine","setPristine","isValidAddress","setIsValidAddress","useEffect","Row","align","grow","noMargin","IconButton","disableRipple","onClick","Hairline","GnoForm","initialValues","onSubmit","submitValues","mutators","selectedTokenRecord","handleScan","closeQrModal","scannedAddress","startsWith","replace","scannedName","getNameFromAddressBook","shouldDisableSubmitButton","Block","SafeInfo","Col","xs","ArrowDown","center","layout","onKeyDown","e","role","tabIndex","hash","showIdenticon","showCopyBtn","explorerUrl","getExplorerInfo","AddressBookInput","fieldMutator","middle","ScanQRWrapper","String","toUpperCase","between","ButtonLink","testId","TextField","inputAdornment","endAdornment","InputAdornment","position","placeholder","text","type","composeValidators","mustBeFloat","minValue","maxValue","Button","minWidth","disabled","variant","GnoField","props","Bold","this","children","React","overflowStyle","overflow","input","onChange","restInput","meta","multiline","rows","rest","helperText","undefined","showError","touched","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","root","statusClasses","inputProps","autoComplete","inputRootProps","InputProps","PureComponent","paddingTop","paddingBottom","stylesBasedOn","flexDirection","flex","decorators","subscription","validation","render","handleSubmit","submitting","validating","form","Wrapper","styled","div","StyledBlock","border","AddressInfo","ethBalance","safeAddress","safeName","diameter","content","currentTarget","onerror","TokenPlaceholder","setCollectibleImageToPlaceholder","NFTIcon","module","exports","loaderContainer","close","detailsContainer","backgroundColor","background","button","navigatorCp","navigator","getMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","ScanQRModal","isOpen","onScan","useWebcam","setUseWebcam","fileUploadModalOpen","setFileUploadModalOpen","setError","scannerRef","openImageDialog","current","success","err","video","onFileScannedResolve","successData","console","Modal","description","handleClose","open","title","justify","CircularProgress","legacyMode","data","ref","safeSelector","qrModalOpen","setQrModalOpen","QRIcon","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","previous","_proto","componentDidUpdate","_this$props","setState","OnChange","_ref","createElement","allowNull","SelectInput","disableError","formControlProps","label","dirtySinceLastSubmit","htmlFor","useTextFieldLabelStyle","borderRadius","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","setValidationText","validationText","updateAddressInfo","addressEntry","validateAddress","addressErrorMessage","mustBeEthereumAddress","filteredEntries","filterAddressEntries","inputValue","onInputChange","_","reason","a","normalizedValue","trimSpaces","isFeatureEnabled","FEATURES","ENS_LOOKUP","isValidEnsName","getAddressFromENS","catch","validatedAddress","labelStyles","inputStyles","Autocomplete","openOnFocus","filterOptions","freeSolo","options","renderInput","params","autoFocus","fullWidth","id","InputLabelProps","shrink","getOptionLabel","renderOption","display","flexGrow","ContractsAddressBookInput","setFilteredEntries","filterContractAddressBookEntries","filteredADBK","filterContractAddresses","onSetSelectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","other","_objectWithoutProperties","context","ListContext","clsx","alignItems","alignItemsFlexStart","theme","palette","action","flexShrink","marginTop"],"mappings":"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","file":"static/js/30.437423f3.chunk.js","sourcesContent":["import ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { selectStyles, selectedTokenStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport { required } from 'src/components/forms/validator'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\n\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\n\nconst SelectedToken = ({ classes, tokenAddress, tokens }) => {\n  const token = tokens.find(({ address }) => address === tokenAddress)\n\n  return (\n    <MenuItem className={classes.container}>\n      {token ? (\n        <>\n          <ListItemIcon className={classes.tokenImage}>\n            <Img alt={token.name} height={28} onError={setImageToPlaceholder} src={token.logoUri} />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.tokenData}\n            primary={token.name}\n            secondary={`${formatAmount(token.balance)} ${token.symbol}`}\n          />\n        </>\n      ) : (\n        <Paragraph color=\"disabled\" size=\"md\" style={{ opacity: 0.5 }} weight=\"light\">\n          Select an asset*\n        </Paragraph>\n      )}\n    </MenuItem>\n  )\n}\nconst SelectedTokenStyled = withStyles(selectedTokenStyles)(SelectedToken)\n\nconst TokenSelectField = ({ classes, initialValue, isValid, tokens }) => (\n  <Field\n    classes={{ selectMenu: classes.selectMenu }}\n    className={isValid ? 'isValid' : 'isInvalid'}\n    component={SelectField}\n    displayEmpty\n    initialValue={initialValue}\n    name=\"token\"\n    renderValue={(tokenAddress) => <SelectedTokenStyled tokenAddress={tokenAddress} tokens={tokens} />}\n    validate={required}\n  >\n    {tokens.map((token) => (\n      <MenuItem key={token.address} value={token.address}>\n        <ListItemIcon>\n          <Img alt={token.name} height={28} onError={setImageToPlaceholder} src={token.logoUri} />\n        </ListItemIcon>\n        <ListItemText\n          primary={token.name}\n          secondary={`${formatAmount(token.balance)} ${token.symbol}`}\n          data-testid={`select-token-${token.name}`}\n        />\n      </MenuItem>\n    ))}\n  </Field>\n)\n\nexport default withStyles(selectStyles)(TokenSelectField)\n","import { sm } from 'src/theme/variables'\n\nexport const selectedTokenStyles = () => ({\n  container: {\n    minHeight: '55px',\n    padding: 0,\n    width: '100%',\n  },\n  tokenData: {\n    padding: 0,\n    margin: 0,\n    lineHeight: '14px',\n  },\n  tokenImage: {\n    marginRight: sm,\n  },\n})\n\nexport const selectStyles = () => ({\n  selectMenu: {\n    paddingRight: 0,\n  },\n})\n","import { lg, md, secondaryText } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  manage: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    '& > button': {\n      fontFamily: 'Averta',\n      fontSize: md,\n    },\n  },\n  submitButton: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginLeft: '15px',\n  },\n  selectAddress: {\n    cursor: 'pointer',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport React, { useEffect, useState } from 'react'\nimport { OnChange } from 'react-final-form-listeners'\nimport { useSelector } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, maxValue, minValue, mustBeFloat, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport ButtonLink from 'src/components/layout/ButtonLink'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { getNameFromAddressBook } from 'src/logic/addressBook/utils'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport TokenSelectField from 'src/routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\nimport { sm } from 'src/theme/variables'\n\nimport ArrowDown from '../assets/arrow-down.svg'\n\nimport { styles } from './style'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nconst formMutators = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'amount', () => args[0])\n  },\n  onTokenChange: (args, state, utils) => {\n    utils.changeValue(state, 'amount', () => state.formState.values.amount)\n  },\n  setRecipient: (args, state, utils) => {\n    utils.changeValue(state, 'recipientAddress', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype SendFundsProps = {\n  onClose: () => void\n  onNext: (txInfo: unknown) => void\n  recipientAddress?: string\n  selectedToken?: string\n  amount?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst SendFunds = ({\n  onClose,\n  onNext,\n  recipientAddress,\n  selectedToken = '',\n  amount,\n}: SendFundsProps): React.ReactElement => {\n  const classes = useStyles()\n  const tokens = useSelector(extendedSafeTokensSelector)\n  const addressBook = useSelector(addressBookSelector)\n  const [selectedEntry, setSelectedEntry] = useState<{ address: string; name: string } | null>(() => {\n    const defaultEntry = { address: recipientAddress || '', name: '' }\n\n    // if there's nothing to lookup for, we return the default entry\n    if (!recipientAddress) {\n      return defaultEntry\n    }\n\n    const addressBookEntry = addressBook.find(({ address }) => {\n      return sameAddress(recipientAddress, address)\n    })\n\n    // if found in the Address Book, then we return the entry\n    if (addressBookEntry) {\n      return addressBookEntry\n    }\n\n    // otherwise we return the default entry\n    return defaultEntry\n  })\n  const [pristine, setPristine] = useState(true)\n  const [isValidAddress, setIsValidAddress] = useState(false)\n\n  useEffect(() => {\n    if (selectedEntry === null && pristine) {\n      setPristine(false)\n    }\n  }, [selectedEntry, pristine])\n\n  const handleSubmit = (values) => {\n    const submitValues = values\n    // If the input wasn't modified, there was no mutation of the recipientAddress\n    if (!values.recipientAddress) {\n      submitValues.recipientAddress = selectedEntry?.address\n    }\n    onNext(submitValues)\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow data-testid=\"modal-title-send-funds\">\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Send Funds\n        </Paragraph>\n        <Paragraph className={classes.annotation}>1 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        initialValues={{ amount, recipientAddress, token: selectedToken }}\n        onSubmit={handleSubmit}\n      >\n        {(...args) => {\n          const formState = args[2]\n          const mutators = args[3]\n          const { token: tokenAddress } = formState.values\n          const selectedTokenRecord = tokens.find((token) => token.address === tokenAddress)\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            const scannedName = addressBook ? getNameFromAddressBook(addressBook, scannedAddress) : ''\n            mutators.setRecipient(scannedAddress)\n            setSelectedEntry({\n              name: scannedName || '',\n              address: scannedAddress,\n            })\n            closeQrModal()\n          }\n\n          let shouldDisableSubmitButton = !isValidAddress\n          if (selectedEntry) {\n            shouldDisableSubmitButton = !selectedEntry.address\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <SafeInfo />\n                <Row margin=\"md\">\n                  <Col xs={1}>\n                    <img alt=\"Arrow Down\" src={ArrowDown} style={{ marginLeft: sm }} />\n                  </Col>\n                  <Col center=\"xs\" layout=\"column\" xs={11}>\n                    <Hairline />\n                  </Col>\n                </Row>\n                {selectedEntry && selectedEntry.address ? (\n                  <div\n                    onKeyDown={(e) => {\n                      if (e.key === 'Tab') {\n                        return\n                      }\n                      setSelectedEntry({ address: '', name: '' })\n                    }}\n                    onClick={() => {\n                      setSelectedEntry({ address: '', name: '' })\n                    }}\n                    role=\"listbox\"\n                    tabIndex={0}\n                  >\n                    <Row margin=\"xs\">\n                      <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                        Recipient\n                      </Paragraph>\n                    </Row>\n                    <Row align=\"center\" margin=\"md\">\n                      <EthHashInfo\n                        hash={selectedEntry.address}\n                        name={selectedEntry.name}\n                        showIdenticon\n                        showCopyBtn\n                        explorerUrl={getExplorerInfo(selectedEntry.address)}\n                      />\n                    </Row>\n                  </div>\n                ) : (\n                  <Row margin=\"md\">\n                    <Col xs={11}>\n                      <AddressBookInput\n                        fieldMutator={mutators.setRecipient}\n                        pristine={pristine}\n                        setIsValidAddress={setIsValidAddress}\n                        setSelectedEntry={setSelectedEntry}\n                      />\n                    </Col>\n                    <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                      <ScanQRWrapper handleScan={handleScan} />\n                    </Col>\n                  </Row>\n                )}\n                <Row margin=\"sm\">\n                  <Col>\n                    <TokenSelectField\n                      initialValue={selectedToken}\n                      isValid={tokenAddress && String(tokenAddress).toUpperCase() !== nativeCoin.name.toUpperCase()}\n                      tokens={tokens}\n                    />\n                  </Col>\n                </Row>\n                <Row margin=\"xs\">\n                  <Col between=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                      Amount\n                    </Paragraph>\n                    <ButtonLink\n                      onClick={() => mutators.setMax(selectedTokenRecord?.balance)}\n                      weight=\"bold\"\n                      testId=\"send-max-btn\"\n                    >\n                      Send max\n                    </ButtonLink>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col>\n                    <Field\n                      component={TextField}\n                      inputAdornment={\n                        selectedTokenRecord && {\n                          endAdornment: <InputAdornment position=\"end\">{selectedTokenRecord.symbol}</InputAdornment>,\n                        }\n                      }\n                      name=\"amount\"\n                      placeholder=\"Amount*\"\n                      text=\"Amount*\"\n                      type=\"text\"\n                      testId=\"amount-input\"\n                      validate={composeValidators(\n                        required,\n                        mustBeFloat,\n                        minValue(0, false),\n                        maxValue(selectedTokenRecord?.balance || 0),\n                      )}\n                    />\n                    <OnChange name=\"token\">{() => mutators.onTokenChange()}</OnChange>\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button minWidth={140} onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button\n                  className={classes.submitButton}\n                  color=\"primary\"\n                  data-testid=\"review-tx-btn\"\n                  disabled={shouldDisableSubmitButton}\n                  minWidth={140}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Review\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default SendFunds\n","import * as React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import MuiTextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () => ({\n  root: {\n    paddingTop: lg,\n    paddingBottom: '12px',\n    lineHeight: 0,\n  },\n})\n\nclass TextField extends React.PureComponent<any> {\n  render() {\n    const {\n      classes,\n      input: { name, onChange, value, ...restInput },\n      inputAdornment,\n      meta,\n      multiline,\n      rows,\n      testId,\n      text,\n      ...rest\n    } = this.props\n    const helperText = value ? text : undefined\n    const showError = (meta.touched || !meta.pristine) && !meta.valid\n    const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n    const errorMessage = meta.error || meta.submitError\n    const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n    const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n    const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n    const inputRoot = helperText ? classes.root : ''\n    const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n    const inputProps = {\n      ...restInput,\n      autoComplete: 'off',\n      'data-testid': testId,\n    }\n    const inputRootProps = {\n      ...inputAdornment,\n      className: `${inputRoot} ${statusClasses}`,\n      disableUnderline: disableUnderline,\n    }\n\n    return (\n      <MuiTextField\n        error={hasError && showError}\n        helperText={hasError && showError ? errorMessage : helperText || ' '}\n        inputProps={inputProps} // blank in order to force to have helper text\n        InputProps={inputRootProps}\n        multiline={multiline}\n        name={name}\n        onChange={onChange}\n        rows={rows}\n        style={overflowStyle}\n        value={value}\n        {...rest}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles as any)(TextField)\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = TokenPlaceholder\n}\n","import { SyntheticEvent } from 'react'\n\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\n\nexport const setCollectibleImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = NFTIcon\n}\n","module.exports = __webpack_public_path__ + \"static/media/token_placeholder.a8034531.svg\";","module.exports = __webpack_public_path__ + \"static/media/qrcode.6dd6e2b4.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '420px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","const navigatorCp: any = navigator\n\nnavigatorCp.getMedia =\n  navigatorCp.getUserMedia || // use the proper vendor prefix\n  navigatorCp.webkitGetUserMedia ||\n  navigatorCp.mozGetUserMedia ||\n  navigatorCp.msGetUserMedia\n\nexport const checkWebcam = (success, err) =>\n  navigatorCp.getMedia(\n    { video: true },\n    () => {\n      success()\n    },\n    () => {\n      err()\n    },\n  )\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\nimport { checkWebcam } from './utils'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [useWebcam, setUseWebcam] = useState<boolean | null>(null)\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    checkWebcam(\n      () => {\n        setUseWebcam(true)\n      },\n      () => {\n        setUseWebcam(false)\n      },\n    )\n  }, [])\n\n  useEffect(() => {\n    if (useWebcam === false && !fileUploadModalOpen && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [useWebcam, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: string | null, successData: string | null) => {\n    if (successData) {\n      onScan(successData)\n    }\n    if (error) {\n      console.error('Error uploading file', error)\n      setError(`The QR could not be read`)\n    }\n    if (!useWebcam) {\n      setError(`The QR could not be read`)\n    }\n\n    setFileUploadModalOpen(false)\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error}\n        {useWebcam === null ? (\n          <Block className={classes.loaderContainer} justify=\"center\">\n            <CircularProgress />\n          </Block>\n        ) : (\n          <QrReader\n            legacyMode={!useWebcam}\n            onError={(err) => onFileScannedResolve(err, null)}\n            onScan={(data) => onFileScannedResolve(null, data)}\n            ref={scannerRef}\n            style={{ width: '400px', height: '400px' }}\n          />\n        )}\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setUseWebcam(false)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport AddressInfo from 'src/components/AddressInfo'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\n\nconst SafeInfo = () => {\n  const { address: safeAddress = '', ethBalance, name: safeName } = useSelector(safeSelector) || {}\n  return <AddressInfo ethBalance={ethBalance} safeAddress={safeAddress} safeName={safeName} />\n}\n\nexport default SafeInfo\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";","import { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport * as React from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n}\n\nexport const ScanQRWrapper = ({ handleScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId=\"qr-icon\"\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import { Component, createElement } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\n//\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport React from 'react'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      borderRadius: 4,\n      fontSize: '15px',\n      width: '500px',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    root: {\n      fontSize: '14px',\n      width: '420px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport React, { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { isFeatureEnabled } from 'src/config'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookSelector } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromENS } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport { trimSpaces } from 'src/utils/strings'\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  pristine?: boolean\n  recipientAddress?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (address: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(address)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: address })\n    return filteredEntries.length === 1 ? filteredEntries[0] : address\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name } = value as AddressBookEntry\n        updateAddressInfo({ address, name })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (isFeatureEnabled(FEATURES.ENS_LOOKUP) && isValidEnsName(normalizedValue)) {\n          const address = await getAddressFromENS(normalizedValue).catch(() => normalizedValue)\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry = typeof validatedAddress === 'string' ? { address, name: normalizedValue } : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string' ? { address: validatedAddress, name: '' } : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus={true}\n          error={!!validationText}\n          fullWidth\n          id=\"filled-error-helper-text\"\n          variant=\"filled\"\n          label={validationText ? validationText : 'Recipient'}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <EthHashInfo hash={address} name={name} showIdenticon />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(addressBookSelector)\n  const [validationText, setValidationText] = useState<string>('')\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(addressBookSelector)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);"],"sourceRoot":""}