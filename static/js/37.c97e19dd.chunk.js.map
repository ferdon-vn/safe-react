{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/TextField/index.tsx","components/forms/GnoForm/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/utils/setCollectibleImageToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","components/forms/AddressInput/index.tsx","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts","routes/safe/components/Balances/Tokens/style.ts","routes/safe/components/Balances/Tokens/screens/AddCustomAsset/utils.ts","routes/safe/components/Balances/Tokens/screens/AddCustomAsset/validators.ts","routes/safe/components/Balances/Tokens/screens/AddCustomAsset/index.tsx","routes/safe/components/Balances/Tokens/screens/AddCustomAsset/style.ts","routes/safe/components/Balances/Tokens/screens/AddCustomToken/style.ts","routes/safe/components/Balances/Tokens/screens/AddCustomToken/utils.ts","routes/safe/components/Balances/Tokens/screens/AddCustomToken/validators.ts","logic/safe/store/actions/updateActiveTokens.ts","routes/safe/components/Balances/Tokens/screens/AddCustomToken/index.tsx","routes/safe/components/Balances/Tokens/screens/AssetsList/style.ts","routes/safe/components/Balances/Tokens/screens/TokenList/style.ts","routes/safe/components/Balances/Tokens/screens/AssetsList/AssetRow.tsx","logic/safe/store/actions/updateActiveAssets.ts","logic/safe/store/actions/updateBlacklistedAssets.ts","routes/safe/components/Balances/Tokens/screens/AssetsList/index.tsx","routes/safe/components/Balances/Tokens/screens/TokenList/TokenRow.tsx","logic/safe/store/actions/updateBlacklistedTokens.ts","routes/safe/components/Balances/Tokens/screens/TokenList/index.tsx","routes/safe/components/Balances/Tokens/index.tsx","routes/safe/components/Balances/style.ts","routes/safe/components/CurrencyDropdown/index.tsx","logic/tokens/store/actions/activateAssetsByBalance.ts","logic/safe/hooks/useFetchTokens.tsx","logic/currencyValues/store/actions/fetchSelectedCurrency.ts","routes/safe/components/Balances/index.tsx"],"names":["GnoField","props","overflowStyle","overflow","width","TextField","this","classes","input","name","onChange","value","restInput","inputAdornment","meta","multiline","rows","testId","text","rest","helperText","undefined","showError","touched","pristine","valid","hasError","error","modifiedSinceLastSubmit","submitError","errorMessage","isInactiveAndPristineOrUntouched","active","isInvalidAndUntouched","disableUnderline","inputRoot","root","statusClasses","inputProps","autoComplete","inputRootProps","className","InputProps","style","React","PureComponent","withStyles","paddingTop","lg","paddingBottom","lineHeight","stylesBasedOn","padding","flexDirection","flex","GnoForm","children","decorators","formMutators","initialValues","onSubmit","subscription","validation","mutators","render","handleSubmit","data-testid","submitting","validating","form","validate","setImageToPlaceholder","currentTarget","onerror","src","TokenPlaceholder","setCollectibleImageToPlaceholder","NFTIcon","module","exports","AddressInput","placeholder","fieldMutator","validators","defaultValue","disabled","component","type","composeValidators","required","mustBeEthereumAddress","a","address","trimSpaces","isValidEnsName","getAddressFromENS","resolverAddr","formattedAddress","checksumAddress","console","useDropdownStyles","makeStyles","listItem","maxWidth","buttonWidth","boxSizing","listItemSearch","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","height","etherFlag","iconLeft","marginRight","iconRight","marginLeft","button","backgroundColor","border","borderRadius","color","cursor","fontSize","fontWeight","minWidth","outline","textAlign","opacity","buttonInner","display","position","borderLeft","borderRight","borderTop","content","right","top","openMenuButton","borderBottom","dropdownItemsScrollWrapper","maxHeight","search","searchIcon","alignItems","justifyContent","left","margin","pointerEvents","transform","fill","inputInput","styles","createStyles","heading","md","close","getSymbolAndDecimalsFromContract","tokenAddress","getHumanFriendlyToken","tokenContract","at","token","Promise","all","symbol","decimals","values","toString","addressIsAssetContract","memoize","isERC721Contract","doesntExistInAssetsList","assetsList","findIndex","sameAddress","INITIAL_FORM_STATE","logoUri","AddCustomAssetComponent","title","formContainer","minHeight","addressInput","marginBottom","flexGrow","tokenImageHeading","checkbox","checkboxLabel","letterSpacing","buttonRow","onClose","parentList","setActiveScreen","nftAssetsList","useSelector","nftAssetsListSelector","useState","formValues","setFormValues","populateFormValuesFromAddress","tokenData","length","formSpyOnChangeHandler","state","dirty","errors","submitSucceeded","goBack","setAssetAddress","args","utils","changeValue","Block","Paragraph","noMargin","size","weight","Row","Col","layout","xs","Field","minMaxLength","justify","Checkbox","label","align","Img","alt","Hairline","Button","onClick","variant","addressIsTokenContract","isAddressAToken","doesntExistInTokenList","tokenList","updateActiveTokens","safeAddress","activeTokens","dispatch","updateTokensList","useStyles","AddCustomToken","tokens","useDispatch","addToken","showForAllSafes","activateTokenForAllSafes","activeTokensAddresses","Set","map","add","setTokenAddress","secondaryText","paddingLeft","sm","paddingRight","addBtnLabel","mediumFontSize","actions","list","overflowY","tokenIcon","searchInput","progressContainer","searchContainer","searchRoot","boxShadow","tokenRoot","nativeCoin","getNetworkInfo","AssetRow","memo","data","index","activeAssetsAddresses","assets","onSwitch","asset","image","isActive","includes","ListItem","ListItemIcon","onError","ListItemText","primary","secondary","ListItemSecondaryAction","Switch","checked","displayName","updateActiveAssets","activeAssets","updateAssetsList","updateBlacklistedAssets","blacklistedAssets","AssetsList","filter","searchClasses","iconButton","activeAssetsList","safeActiveAssetsListSelector","safeBlacklistedAssetsSelector","safeParamAddressFromStateSelector","filterValue","setFilterValue","setActiveAssetsAddresses","blacklistedAssetsAddresses","setBlacklistedAssetsAddresses","newActiveAssetsAddresses","newBlacklistedAssetsAddresses","has","delete","nftAssetsFilteredList","description","toLowerCase","itemData","cn","onCancelSearch","Spacer","Divider","CircularProgress","itemCount","itemKey","itemSize","overscanCount","TokenRow","get","updateBlacklistedTokens","blacklistedTokens","TokenList","setActiveTokensAddresses","blacklistedTokensAddresses","setBlacklistedTokensAddresses","setFilter","newActiveTokensAddresses","newBlacklistedTokensAddresses","filteredTokens","filterBy","createItemData","Tokens","modalScreen","orderedTokenListSelector","extendedSafeTokensSelector","safeBlacklistedTokensSelector","activeScreen","grow","IconButton","disableRipple","controls","assetTabs","order","screenSm","assetDivider","borderRightColor","assetTab","textDecoration","assetTabActive","tokenControls","manageTokensButton","receiveModal","send","CurrencyDropdown","anchorEl","setAnchorEl","selectedCurrency","currentCurrencySelector","searchParams","setSearchParams","currenciesList","Object","AVAILABLE_CURRENCIES","tokenImage","currenciesListFiltered","currency","handleClose","theme","DropdownListTheme","event","classNames","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","open","Boolean","transformOrigin","MenuItem","key","InputBase","target","currencyName","newCurrencySelectedName","setSelectedCurrency","sameString","toLocaleLowerCase","CheckIcon","activateAssetsByBalance","getState","safes","safesMapSelector","availableAssets","nftAssetsSelector","alreadyActiveAssets","safeActiveAssetsSelectorBySafe","safeBlacklistedAssetsSelectorBySafe","activeByBalance","entries","numberOfTokens","union","useFetchTokens","location","useLocation","useMemo","COINS_LOCATION_REGEX","test","pathname","batch","fetchTokens","loadSelectedCurrency","storedSelectedCurrency","USD","resolve","fetchSelectedCurrency","fetchSafeTokens","COLLECTIBLES_LOCATION_REGEX","fetchCollectibles","then","Collectibles","lazy","Coins","MANAGE_TOKENS_BUTTON_TEST_ID","BALANCE_ROW_TEST_ID","INITIAL_STATE","erc721Enabled","showToken","showManageCollectibleModal","sendFunds","isOpen","selectedToken","showReceive","Balances","setState","featuresEnabled","safeFeaturesEnabledSelector","safeName","safeNameSelector","useEffect","FEATURES","ERC721","prevState","onShow","action","onHide","showSendFunds","start","to","SAFELIST_ADDRESS","activeClassName","exact","path","end","ButtonLink","Modal","wrapInSuspense","showReceiveFunds","SendModal","activeScreenType","paperClassName","ReceiveModal"],"mappings":"kHAAA,qBAMeA,IAFE,SAAC,GAAD,IAAMC,EAAN,2BAAuB,gBAAC,IAAUA,K,6HCG7CC,EAAgB,CACpBC,SAAU,SACVC,MAAO,QAWHC,E,uKACM,IAAD,EAWHC,KAAKL,MATPM,EAFK,EAELA,QAFK,IAGLC,MAASC,EAHJ,EAGIA,KAAMC,EAHV,EAGUA,SAAUC,EAHpB,EAGoBA,MAAUC,EAH9B,2CAILC,EAJK,EAILA,eACAC,EALK,EAKLA,KACAC,EANK,EAMLA,UACAC,EAPK,EAOLA,KACAC,EARK,EAQLA,OACAC,EATK,EASLA,KACGC,EAVE,8FAYDC,EAAaT,EAAQO,OAAOG,EAC5BC,GAAaR,EAAKS,UAAYT,EAAKU,YAAcV,EAAKW,MACtDC,IAAaZ,EAAKa,QAAWb,EAAKc,2BAA6Bd,EAAKe,YACpEC,EAAehB,EAAKa,OAASb,EAAKe,YAClCE,GAAoCjB,EAAKkB,SAAWlB,EAAKU,WAAaV,EAAKS,SAC3EU,EAA8C,qBAAfnB,EAAKa,QAAgCb,EAAKS,QAEzEW,EAAmBH,GAAoCE,EAEvDE,EAAYf,EAAab,EAAQ6B,KAAO,GACxCC,EAAgBvB,EAAKW,MAAQ,UAAYC,GAAYJ,EAAY,YAAc,GAC/EgB,EAAU,2BACX1B,GADW,IAEd2B,aAAc,MACd,cAAetB,IAEXuB,EAAc,2BACf3B,GADe,IAElB4B,UAAU,GAAD,OAAKN,EAAL,YAAkBE,GAC3BH,iBAAkBA,IAGpB,OACE,kBAAC,IAAD,eACEP,MAAOD,GAAYJ,EACnBF,WAAYM,GAAYJ,EAAYQ,EAAeV,GAAc,IACjEkB,WAAYA,EACZI,WAAYF,EACZzB,UAAWA,EACXN,KAAMA,EACNC,SAAUA,EACVM,KAAMA,EACN2B,MAAOzC,EACPS,MAAOA,GACHQ,Q,GA/CYyB,IAAMC,eAqDfC,iBA7DA,iBAAO,CACpBV,KAAM,CACJW,WAAYC,KACZC,cAAe,OACfC,WAAY,MAyDDJ,CAA0BzC,I,+DCtEnC8C,EAAgB,SAACC,GAAD,MAAc,CAClCA,QAAQ,KAAD,OAAOA,EAAP,KACPC,cAAe,SACfC,KAAM,aA6BOC,IA1BC,SAAC,GAAD,IACdC,EADc,EACdA,SACAC,EAFc,EAEdA,WACAC,EAHc,EAGdA,aACAC,EAJc,EAIdA,cACAC,EALc,EAKdA,SALc,IAMdR,eANc,MAMJ,EANI,EAOdS,EAPc,EAOdA,aAPc,IAQd5C,cARc,MAQL,GARK,EASd6C,EATc,EASdA,WATc,OAWd,gBAAC,IAAD,CACEL,WAAYA,EACZE,cAAeA,EACfI,SAAUL,EACVE,SAAUA,EACVI,OAAQ,gBAAGC,EAAH,EAAGA,aAAiB9C,EAApB,uCACN,wBAAM+C,cAAajD,EAAQ2C,SAAUK,EAActB,MAAOQ,EAAcC,IACrEI,EAASrC,EAAKgD,WAAYhD,EAAKiD,WAAYjD,EAAMA,EAAKkD,KAAKN,YAGhEF,aAAcA,EACdS,SAAUR,M,6HC3BDS,EAAwB,SAAC5C,GACpCA,EAAM6C,cAAcC,QAAU,KAC9B9C,EAAM6C,cAAcE,IAAMC,K,kBCFfC,EAAmC,SAACjD,GAC/CA,EAAM6C,cAAcC,QAAU,KAC9B9C,EAAM6C,cAAcE,IAAMG,M,qBCN5BC,EAAOC,QAAU,IAA0B,+C,qJCyE5BC,IA9CM,SAAC,GAAD,QACnBvC,iBADmB,MACP,GADO,MAEnBhC,YAFmB,MAEZ,mBAFY,MAGnBS,YAHmB,MAGZ,aAHY,MAInB+D,mBAJmB,MAIL,aAJK,EAKnBC,EALmB,EAKnBA,aACAjE,EANmB,EAMnBA,OACAJ,EAPmB,EAOnBA,eAPmB,IAQnBsE,kBARmB,MAQN,GARM,EASnBC,EATmB,EASnBA,aACAC,EAVmB,EAUnBA,SAVmB,OAYnB,gCACE,gBAAC,IAAD,CACE5C,UAAWA,EACX6C,UAAWjF,IACX+E,aAAcA,EACdC,SAAUA,EACVxE,eAAgBA,EAChBJ,KAAMA,EACNwE,YAAaA,EACbhE,OAAQA,EACRC,KAAMA,EACNqE,KAAK,OACLjB,SAAUkB,IAAiB,WAAjB,GAAkBC,IAAUC,KAA5B,mBAAsDP,OAElE,gBAAC,IAAD,CAAU1E,KAAMA,GAAhB,uCACG,WAAOE,GAAP,qBAAAgF,EAAA,yDACOC,EAAUC,YAAWlF,IACvBmF,YAAeF,GAFpB,0CAIgCG,YAAkBH,GAJlD,OAIWI,EAJX,OAKWC,EAAmBC,YAAgBF,GACzCd,EAAae,GANlB,kDAQKE,QAAQxE,MAAM,2CAAd,MARL,gCAWSsE,EAAmBC,YAAgBN,GACzCV,EAAae,GAZhB,0DADH,0D,qBCrDJnB,EAAOC,QAAU,IAA0B,mC,kCCA3C,+CAGaqB,EAAoBC,YAAW,CAC1CC,SAAU,CACRC,SAAU,SAACtG,GAAD,OAAiBA,EAAMuG,YAAcvG,EAAMuG,YAHrC,SAIhBC,UAAW,cAEbC,eAAgB,CACdH,SAAU,SAACtG,GAAD,OAAiBA,EAAMuG,YAAcvG,EAAMuG,YAPrC,SAQhBpD,QAAS,IACTqD,UAAW,cAEbE,UAAW,CACTC,mBAAoB,UACpBC,iBAAkB,YAClBC,eAAgB,UAChBC,OAAQ,kBACR3G,MAAO,mBAET4G,UAAW,CACTJ,mBAAoB,UACpBC,iBAAkB,YAClBC,eAAgB,UAChB1G,MAAO,OACP2G,OAAQ,QAEVE,SAAU,CACRC,YAAa,QAEfC,UAAW,CACTC,WAAY,QAEdC,OAAQ,CACNC,gBAAiB,UACjBC,OAAQ,OACRC,aAAc,MACdf,UAAW,aACXgB,MAAO,UACPC,OAAQ,UACRC,SAAU,OACVC,WAAY,SACZb,OAAQ,OACR7D,WAAY,OACZgE,YAAa,OACbW,SAAU,SAAC5H,GAAD,OAAiBA,EAAMuG,YAAcvG,EAAMuG,YA3CrC,SA4ChBsB,QAAS,OACT1E,QAAS,IACT2E,UAAW,OACX,WAAY,CACVC,QAAS,QAGbC,YAAa,CACXxB,UAAW,aACXyB,QAAS,QACTnB,OAAQ,OACR7D,WAAY,OACZE,QAAS,eACT+E,SAAU,WACV/H,MAAO,OACP,WAAY,CACVgI,WAAY,wBACZC,YAAa,wBACbC,UAAW,oBACXC,QAAS,KACTxB,OAAQ,IACRoB,SAAU,WACVK,MAAO,MACPC,IAAK,MACLrI,MAAO,MAGXsI,eAAgB,CACd,WAAY,CACVC,aAAc,oBACdP,WAAY,wBACZC,YAAa,wBACbC,UAAW,SAGfM,2BAA4B,CAC1BC,UAAW,QACX1I,SAAU,QAEZ2I,OAAQ,CACNX,SAAU,WACVX,aAAc,IACdF,gBAAiB,OACjB,UAAW,CACTA,gBAAiB,QAEnBJ,YAAa,EACb9G,MAAO,QAET2I,WAAY,CACVC,WAAY,SACZd,QAAS,OACTnB,OAAQ,OACRkC,eAAgB,SAChBC,KAAM,OACNC,OAAQ,IACRC,cAAe,OACfjB,SAAU,WACVM,IAAK,MACLY,UAAW,mBACXjJ,MAAO,OACP,SAAU,CACRkJ,KAAM,YAGVnH,UAAW,CACTsF,MAAO,UACPE,SAAU,OACVC,WAAY,SACZ1E,WAAY,OACZ9C,MAAO,QAETmJ,WAAY,CACV9C,UAAW,aACXM,OAAQ,OACR3D,QAAS,sBACThD,MAAO,W,+XCvHEoJ,EAASC,YAAa,CACjCC,QAAS,CACPtG,QAAQ,GAAD,OAAKuG,KAAL,YAAW3G,MAClBiG,eAAgB,gBAChBJ,UAAW,OACXpC,UAAW,cAEbmD,MAAO,CACL7C,OAAQ,OACR3G,MAAO,U,oFCVEyJ,EAAgC,uCAAG,WAAOC,GAAP,2BAAAnE,EAAA,sEAClBoE,cADkB,cACxCC,EADwC,gBAE1BA,EAAcC,GAAGH,GAFS,cAExCI,EAFwC,yBAMXC,QAAQC,IAAI,CAACF,EAAMG,SAAUH,EAAMI,aANxB,mCAMrCD,EANqC,KAM7BC,EAN6B,KAO5CC,EAAS,CAACF,EAAQC,EAASE,YAPiB,kDAS5CD,EAAS,GATmC,iCAYvCA,GAZuC,0DAAH,sD,iICGhCE,EAAyBC,IAAO,uCAAC,WAAOZ,GAAP,SAAAnE,EAAA,sEACtBgF,YAAiBb,GADK,0DAGnC,uBAHmC,2CAAD,uDAQhCc,EAA0B,SAACC,GAAD,OACrCH,KAAQ,SAACZ,GAGP,IAAoB,IAFDe,EAAWC,WAAU,gBAAGlF,EAAH,EAAGA,QAAH,OAAiBmF,YAAYnF,EAASkE,MAG5E,MAAO,8C,2BCgBPkB,EAAqB,CACzBpF,QAAS,GACT0E,SAAU,GACVD,OAAQ,GACRY,QAAS,IAoJIC,EAFiBpI,aCtLV,iBAAO,CAC3BqI,MAAO,CACL/H,QAAQ,GAAD,OAAKJ,KAAL,WACP2E,SAAUgC,MAEZyB,cAAe,CACbhI,QAAS,SACTiI,UAAW,SAEbC,aAAc,CACZC,aAAc,OACdrD,QAAS,OACTsD,SAAU,EACVlE,gBAAiB,OAEnBmE,kBAAmB,CACjBtC,OAAQ,YAEVuC,SAAU,CACRtI,QAAS,YACThD,MAAO,OACP2G,OAAQ,QAEV4E,cAAe,CACbC,cAAe,UAEjBC,UAAW,CACT9E,OAAQ,OACRkC,eAAgB,aD0JYnG,EA/IT,SAAC7C,GAAW,IACzBM,EAAkDN,EAAlDM,QAASuL,EAAyC7L,EAAzC6L,QAASC,EAAgC9L,EAAhC8L,WAAYC,EAAoB/L,EAApB+L,gBAEhCC,EAAgBC,YAAYC,KAHF,EAIIC,mBAASpB,GAJb,mBAIzBqB,EAJyB,KAIbC,EAJa,KAU1BC,EAA6B,uCAAG,WAAOzC,GAAP,qBAAAnE,EAAA,sEACZkE,EAAiCC,GADrB,QAC9B0C,EAD8B,QAGtBC,SAAS,EAAD,YACOD,EADP,GACbnC,EADa,KACLC,EADK,KAGpBgC,EAAc,CACZ1G,QAASkE,EACTO,SACAC,WACA7J,KAAM4J,KAV0B,2CAAH,sDAe7BqC,EAAsB,uCAAG,WAAOC,GAAP,uBAAAhH,EAAA,yDACrBiH,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,OAAQC,EAAwCH,EAAxCG,gBAAiB1I,EAAuBuI,EAAvBvI,WAAYmG,EAAWoC,EAAXpC,QAGhDuC,EAJyB,oDAQzBF,IAAUxI,GAAcyI,EAAOjH,SACjC0G,EAActB,GAGX6B,EAAOjH,SAAYxB,IAAcwI,EAZT,gCAarBL,EAA8BhC,EAAO3E,SAbhB,2CAAH,sDAuBtBmH,EAAS,WACbf,EAAgBD,IAGlB,OACE,oCACE,kBAACxI,EAAA,EAAD,CACEI,cAAe0I,EACfzI,SAlDe,WACnBkI,KAkDIpI,aAfe,CACnBsJ,gBAAiB,SAACC,EAAMN,EAAOO,GAC7BA,EAAMC,YAAYR,EAAO,WAAW,kBAAMM,EAAK,QAc7ChM,OAnE6B,0BAqE5B,WACC,IAAM8C,EAAQ,wCAEd,OACE,oCACE,kBAACqJ,EAAA,EAAD,CAAO3K,UAAWlC,EAAQ6K,eACxB,kBAACiC,EAAA,EAAD,CAAW5K,UAAWlC,EAAQ4K,MAAOmC,UAAQ,EAACC,KAAK,KAAKC,OAAO,UAA/D,oBAGA,kBAACxI,EAAA,EAAD,CACEE,aAAcnB,EAASiJ,gBACvBvK,UAAWlC,EAAQ+K,aACnB7K,KAAK,UACLwE,YAAY,0BACZhE,OAtFoC,iCAuFpCC,KAAK,0BACLiE,WAAY,CAACyF,EAAwBqB,GAAgBxB,KAEvD,kBAAC,IAAD,CACE/J,SAAUgM,EACV7I,aAAc,CACZ0G,QAAQ,EACRsC,QAAQ,EACRzI,YAAY,EACZwI,OAAO,EACPE,iBAAiB,KAGrB,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,OAAO,SAASC,GAAI,GACvB,kBAACC,EAAA,EAAD,CACEpL,UAAWlC,EAAQ+K,aACnBhG,UAAWjF,IACXI,KAAK,SACLwE,YAAY,gBACZhE,OA1GgC,iCA2GhCC,KAAK,eACLqE,KAAK,OACLjB,SAAUkB,YAAkBC,IAAUqI,YAAa,EAAG,OAExD,kBAACD,EAAA,EAAD,CACEpL,UAAWlC,EAAQ+K,aACnBhG,UAAWjF,IACXgF,UAAQ,EACR5E,KAAK,WACLwE,YAAY,kBACZhE,OApHiC,kCAqHjCC,KAAK,kBACLqE,KAAK,SAEP,kBAAC6H,EAAA,EAAD,CAAOW,QAAQ,UACb,kBAACF,EAAA,EAAD,CACEpL,UAAWlC,EAAQmL,SACnBpG,UAAW0I,WACXvN,KAAK,kBACL8E,KAAK,WACL0I,MAAM,oCAIZ,kBAACP,EAAA,EAAD,CAAKQ,MAAM,SAASP,OAAO,SAASC,GAAI,GACtC,kBAACP,EAAA,EAAD,CAAW5K,UAAWlC,EAAQkL,mBAA9B,eACA,kBAAC0C,EAAA,EAAD,CAAKC,IAAI,cAAcrH,OAAQ,IAAKrC,IAAKC,SAI/C,kBAAC0J,EAAA,EAAD,MACA,kBAACZ,EAAA,EAAD,CAAKS,MAAM,SAASzL,UAAWlC,EAAQsL,WACrC,kBAACyC,EAAA,EAAD,CAAQjD,UAAW,GAAIxD,SAAU,IAAK0G,QAASxB,GAA/C,UAGA,kBAACuB,EAAA,EAAD,CAAQ7G,MAAM,UAAU4D,UAAW,GAAIxD,SAAU,IAAKtC,KAAK,SAASiJ,QAAQ,aAA5E,iBEzKHhF,EAASC,YAAa,CACjC0B,MAAO,CACL/H,QAAQ,GAAD,OAAKJ,KAAL,WACP2E,SAAUgC,MAEZyB,cAAe,CACbhI,QAAS,SACTiI,UAAW,SAEbC,aAAc,CACZC,aAAc,OACdrD,QAAS,OACTsD,SAAU,EACVlE,gBAAiB,OAEnBmE,kBAAmB,CACjBtC,OAAQ,YAEVuC,SAAU,CACRtI,QAAS,YACThD,MAAO,OACP2G,OAAQ,QAEV4E,cAAe,CACbC,cAAe,UAEjBC,UAAW,CACT9E,OAAQ,OACRkC,eAAgB,YC7BPY,EAAgC,uCAAG,WAAOC,GAAP,2BAAAnE,EAAA,sEAClBoE,cADkB,cACxCC,EADwC,gBAE1BA,EAAcC,GAAGH,GAFS,cAExCI,EAFwC,yBAMXC,QAAQC,IAAI,CAACF,EAAMG,SAAUH,EAAMI,aANxB,mCAMrCD,EANqC,KAM7BC,EAN6B,KAO5CC,EAAS,CAACF,EAAQC,EAASE,YAPiB,kDAS5CD,EAAS,GATmC,iCAYvCA,GAZuC,0DAAH,sD,SCGhCkE,EAAyB/D,IAAO,uCAAC,WAAOZ,GAAP,SAAAnE,EAAA,sEAUtB+I,YAAgB5E,GAVM,0DAanC,uBAbmC,2CAAD,uDAkBhC6E,EAAyB,SAACC,GAAD,OACpClE,KAAQ,SAACZ,GAGP,IAAoB,IAFD8E,EAAU9D,WAAU,gBAAGlF,EAAH,EAAGA,QAAH,OAAiBmF,YAAYnF,EAASkE,MAG3E,MAAO,8C,6BCVE+E,GAJY,SAACC,EAAqBC,GAAtB,OAAoD,SAACC,GAC9EA,EAASC,aAAiB,CAAEH,cAAaC,oB,mBCqBrC/D,GAAqB,CACzBpF,QAAS,GACT0E,SAAU,GACVD,OAAQ,GACRY,QAAS,IAGLiE,GAAY7I,YAAWmD,GA0Kd2F,GA/JQ,SAAClP,GAAsC,IACpD8O,EAA4E9O,EAA5E8O,aAAcjD,EAA8D7L,EAA9D6L,QAASC,EAAqD9L,EAArD8L,WAAY+C,EAAyC7O,EAAzC6O,YAAa9C,EAA4B/L,EAA5B+L,gBAAiBoD,EAAWnP,EAAXmP,OADd,EAEvBhD,mBAASpB,IAFc,mBAEpDqB,EAFoD,KAExCC,EAFwC,KAGrD/L,EAAU2O,KACVF,EAAWK,cAsBX9C,EAA6B,uCAAG,WAAOzC,GAAP,qBAAAnE,EAAA,sEACZkE,EAAiCC,GADrB,QAC9B0C,EAD8B,QAGtBC,SAAS,EAAD,YACOD,EADP,GACbnC,EADa,KACLC,EADK,KAGpBgC,EAAc,CACZ1G,QAASkE,EACTO,SACAC,WACA7J,KAAM4J,KAV0B,2CAAH,sDAe7BqC,EAAsB,uCAAG,WAAOC,GAAP,uBAAAhH,EAAA,yDACrBiH,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,OAAQC,EAAwCH,EAAxCG,gBAAiB1I,EAAuBuI,EAAvBvI,WAAYmG,EAAWoC,EAAXpC,QAGhDuC,EAJyB,oDAQzBF,IAAUxI,GAAcyI,EAAOjH,SACjC0G,EAActB,IAGX6B,EAAOjH,SAAYxB,IAAcwI,EAZT,gCAarBL,EAA8BhC,EAAO3E,SAbhB,2CAAH,sDAuBtBmH,EAAS,WACbf,EAAgBD,IAGlB,OACE,oCACE,kBAACxI,EAAA,EAAD,CACEI,cAAe0I,EACfzI,SAlEe,SAAC2G,GACpB,IACML,EAAQ,CACZtE,QAFcM,aAAgBqE,EAAO3E,SAGrC0E,SAAUC,EAAOD,SACjBD,OAAQE,EAAOF,OACf5J,KAAM8J,EAAOF,QAIf,GADA2E,EAASM,aAASpF,IACdK,EAAOgF,gBACTP,EAASQ,aAAyBtF,EAAMtE,cACnC,CACL,IAAM6J,EAAwBC,aAAIX,EAAaY,KAAI,qBAAG/J,YACtDoJ,EAASH,GAAmBC,EAAaW,EAAsBG,IAAI1F,EAAMtE,WAG3EkG,KAkDIpI,aAfe,CACnBmM,gBAAiB,SAAC5C,EAAMN,EAAOO,GAC7BA,EAAMC,YAAYR,EAAO,WAAW,kBAAMM,EAAK,QAc7ChM,OA9F6B,0BAgG5B,WACC,IAAM8C,EAAQ,wCAEd,OACE,oCACE,kBAACqJ,EAAA,EAAD,CAAO3K,UAAWlC,EAAQ6K,eACxB,kBAACiC,EAAA,EAAD,CAAW5K,UAAWlC,EAAQ4K,MAAOmC,UAAQ,EAACC,KAAK,KAAKC,OAAO,UAA/D,oBAGA,kBAACxI,EAAA,EAAD,CACEE,aAAcnB,EAAS8L,gBACvBpN,UAAWlC,EAAQ+K,aACnB7K,KAAK,UACLwE,YAAY,0BACZhE,OAjHoC,iCAkHpCC,KAAK,0BACLiE,WAAY,CAACwJ,EAAuBS,GAASX,KAE/C,kBAAC,IAAD,CACE/N,SAAUgM,EACV7I,aAAc,CACZ0G,QAAQ,EACRsC,QAAQ,EACRzI,YAAY,EACZwI,OAAO,EACPE,iBAAiB,KAGrB,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,OAAO,SAASC,GAAI,GACvB,kBAACC,EAAA,EAAD,CACEpL,UAAWlC,EAAQ+K,aACnBhG,UAAWjF,IACXI,KAAK,SACLwE,YAAY,gBACZhE,OArIgC,iCAsIhCC,KAAK,eACLqE,KAAK,OACLjB,SAAUkB,YAAkBC,IAAUqI,YAAa,EAAG,OAExD,kBAACD,EAAA,EAAD,CACEpL,UAAWlC,EAAQ+K,aACnBhG,UAAWjF,IACXgF,UAAQ,EACR5E,KAAK,WACLwE,YAAY,kBACZhE,OA/IiC,kCAgJjCC,KAAK,kBACLqE,KAAK,SAEP,kBAAC6H,EAAA,EAAD,CAAOW,QAAQ,UACb,kBAACF,EAAA,EAAD,CACEpL,UAAWlC,EAAQmL,SACnBpG,UAAW0I,WACXvN,KAAK,kBACL8E,KAAK,WACL0I,MAAM,mCAIZ,kBAACP,EAAA,EAAD,CAAKQ,MAAM,SAASP,OAAO,SAASC,GAAI,GACtC,kBAACP,EAAA,EAAD,CAAW5K,UAAWlC,EAAQkL,mBAA9B,eACA,kBAAC0C,EAAA,EAAD,CAAKC,IAAI,cAAcrH,OAAQ,IAAKrC,IAAKC,SAI/C,kBAAC0J,EAAA,EAAD,MACA,kBAACZ,EAAA,EAAD,CAAKS,MAAM,SAASzL,UAAWlC,EAAQsL,WACrC,kBAACyC,EAAA,EAAD,CAAQjD,UAAW,GAAIxD,SAAU,IAAK0G,QAASxB,GAA/C,UAGA,kBAACuB,EAAA,EAAD,CAAQ7G,MAAM,UAAU4D,UAAW,GAAIxD,SAAU,IAAKtC,KAAK,SAASiJ,QAAQ,aAA5E,e,8FCrMHU,GAAY7I,YACvBoD,YAAa,CACXrH,KAAM,CACJiJ,UAAW,QAEbvC,OAAQ,CACNrB,MAAOqI,gBACPC,YAAaC,MAEf5M,QAAS,CACPA,QAAQ,KAAD,OAAOuG,OAEhBiG,IAAK,CACHjI,SAAU,OACVC,WAAY,SACZqI,aAActG,KACdoG,YAAapG,MAEfuG,YAAa,CACXvI,SAAUwI,kBAEZC,QAAS,CACPrJ,OAAQ,QAEVsJ,KAAM,CACJlQ,SAAU,SACVmQ,UAAW,SACXlN,QAAS,EACT2D,OAAQ,QAEVwJ,UAAW,CACTrJ,YAAa8I,KACbjJ,OAAQ,OACR3G,MAAO,QAEToQ,YAAa,CACXlJ,gBAAiB,cACjBpE,WAAY,UACZyE,SAAU,OACVvE,QAAS,EACT,yBAA0B,CACxBwI,cAAe,SACfjE,SAAUwI,iBACV1I,MAAO,SAET,YAAa,CACXmE,cAAe,WAGnB6E,kBAAmB,CACjBrQ,MAAO,OACP2G,OAAQ,OACRiC,WAAY,UAEd0H,gBAAiB,CACftQ,MAAO,QACPgH,WAAYwG,KACZ1G,YAAa0G,MAEf+C,WAAY,CACV/E,cAAe,SACfjE,SAAU,OACVJ,OAAQ,OACRqJ,UAAW,OACX,aAAc,CACZ1I,QAAS,SAGba,WAAY,CACV,UAAW,CACTzB,gBAAiB,8B,0ECtEZ4H,GAAY7I,YACvBoD,YAAa,CACXrH,KAAM,CACJiJ,UAAW,QAEbvC,OAAQ,CACNrB,MAAOqI,gBACPC,YAAaC,MAEf5M,QAAS,CACPA,QAAQ,KAAD,OAAOuG,OAEhBiG,IAAK,CACHjI,SAAU,OACVC,WAAY,SACZqI,aAActG,KACdoG,YAAapG,MAEfuG,YAAa,CACXvI,SAAUwI,kBAEZC,QAAS,CACPrJ,OAAQ,QAEVsJ,KAAM,CACJlQ,SAAU,SACVmQ,UAAW,SACXlN,QAAS,EACT2D,OAAQ,QAEVmD,MAAO,CACLmB,UAAW,OACX1C,aAAa,aAAD,OAAepB,WAE7BsJ,UAAW,CACT9N,WAAY,EACZE,cAAe,GAEjBuN,YAAa,CACXlJ,gBAAiB,cACjBpE,WAAY,UACZyE,SAAU,OACVvE,QAAS,EACT,yBAA0B,CACxBwI,cAAe,SACfjE,SAAUwI,iBACV1I,MAAO,SAET,YAAa,CACXmE,cAAe,WAGnB2E,UAAW,CACTrJ,YAAayC,KACb5C,OAAQ,OACR3G,MAAO,QAETqQ,kBAAmB,CACjBrQ,MAAO,OACP2G,OAAQ,OACRiC,WAAY,UAEd0H,gBAAiB,CACftQ,MAAO,QACPgH,WAAYwG,KACZ1G,YAAa0G,MAEf+C,WAAY,CACV/E,cAAe,SACfjE,SAAU,OACVJ,OAAQ,OACRqJ,UAAW,OACX,aAAc,CACZ1I,QAAS,SAGba,WAAY,CACV,UAAW,CACTzB,gBAAiB,8B,oBCpEjBwJ,GAAeC,eAAfD,WAEFE,GAAWC,gBAAK,YAAkC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOxO,EAAiB,EAAjBA,MAC9BpC,EAAU2O,KACRkC,EAA4CF,EAA5CE,sBAAuBC,EAAqBH,EAArBG,OAAQC,EAAaJ,EAAbI,SACjCC,EAAQF,EAAOF,GACbvL,EAAiC2L,EAAjC3L,QAAS4L,EAAwBD,EAAxBC,MAAO/Q,EAAiB8Q,EAAjB9Q,KAAM4J,EAAWkH,EAAXlH,OACxBoH,EAAWL,EAAsBM,SAASH,EAAM3L,SAEtD,OACE,yBAAKjD,MAAOA,GACV,kBAACgP,GAAA,EAAD,CAAUpR,QAAS,CAAE6B,KAAM7B,EAAQsQ,WAAapO,UAAWlC,EAAQ2J,OACjE,kBAAC0H,GAAA,EAAD,CAAcnP,UAAWlC,EAAQgQ,WAC/B,kBAACpC,EAAA,EAAD,CAAKC,IAAK3N,EAAMsG,OAAQ,GAAI8K,QAASjN,KAAkCF,IAAK8M,KAE9E,kBAACM,GAAA,EAAD,CAAcC,QAAS1H,EAAQ2H,UAAWvR,IACzCmF,IAAYkL,GAAWlL,SACtB,kBAACqM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,QAASV,EACTnP,WAAY,CAAE,cAAc,GAAd,OAAkB+H,EAAlB,YAtBQ,qBAuBtB3J,SAAU4Q,EAASC,WASjCP,GAASoB,YAAc,WAERpB,U,UCtCAqB,GAJY,SAACvD,EAAqBwD,GAAtB,OAAoD,SAACtD,GAC9EA,EAASuD,aAAiB,CAAEzD,cAAawD,oBCG5BE,GAJiB,SAAC1D,EAAqB2D,GAAtB,OAAyD,SAACzD,GACxFA,EAASuD,aAAiB,CAAEzD,cAAa2D,yB,SCwJ5BC,GAlHI,SAACzS,GAClB,IAVgB0S,EAUVpS,EAAU2O,KACV0D,EAAgB,CACpBpS,MAAOD,EAAQiQ,YACfpO,KAAM7B,EAAQoQ,WACdkC,WAAYtS,EAAQwI,WACpB2H,gBAAiBnQ,EAAQmQ,iBAErB1B,EAAWK,cACXyD,EAAmB5G,YAAY6G,MAC/BN,EAAoBvG,YAAY8G,MAChClE,EAAc5C,YAAY+G,MAXuB,EAYjB7G,mBAAS,IAZQ,mBAYhD8G,EAZgD,KAYnCC,EAZmC,OAaG/G,mBAAS0G,GAbZ,mBAahD1B,EAbgD,KAazBgC,EAbyB,OAcahH,mBAASqG,GAdtB,mBAchDY,EAdgD,KAcpBC,EAdoB,KAejDrH,EAAgBC,YAAYC,KAc5BmF,EAAW,SAACC,GAAD,OAAW,WAC1B,IAAIgC,EACAC,EACApC,EAAsBqC,IAAIlC,EAAM3L,UAClC2N,EAA2BnC,EAAsBsC,OAAOnC,EAAM3L,SAC9D4N,EAAgCH,EAA2BzD,IAAI2B,EAAM3L,WAErE2N,EAA2BnC,EAAsBxB,IAAI2B,EAAM3L,SAC3D4N,EAAgCH,EAA2BK,OAAOnC,EAAM3L,UAI1EwN,EAAyBG,GACzBD,EAA8BE,GAE9BxE,EAASqD,GAAmBvD,EAAayE,IACzCvE,EAASwD,GAAwB1D,EAAa0E,MAW1CG,GAjEUhB,EAiEuBO,EAAajH,EAhE/C0G,QACH,SAACpB,GAAD,OACGoB,GACDpB,EAAMqC,YAAYC,cAAcnC,SAASiB,EAAOkB,gBAChDtC,EAAM9Q,KAAKoT,cAAcnC,SAASiB,EAAOkB,gBACzCtC,EAAMlH,OAAOwJ,cAAcnC,SAASiB,EAAOkB,mBA4DzCC,EARG,CACLzC,OAO4BsC,EAN5BvC,wBACAE,YAOJ,OACE,oCACE,kBAAClE,EAAA,EAAD,CAAO3K,UAAWlC,EAAQ6B,MACxB,kBAACqL,EAAA,EAAD,CAAKS,MAAM,SAASzL,UAAWsR,KAAGxT,EAAQ6C,QAAS7C,EAAQ6P,UACzD,kBAAC,KAAD,CAAQ3N,UAAWlC,EAAQuI,SAC3B,kBAAC,KAAD,CACEvI,QAASqS,EACToB,eAjDa,WACrBb,EAAe,KAiDPzS,SA9CgB,SAACC,GACzBwS,EAAexS,IA8CPsE,YAAY,2BACZ8D,WAAY,8BACZpI,MAAOuS,IAET,kBAACe,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACD,GAAA,EAAD,MACA,kBAAC3F,EAAA,EAAD,CACE/N,QAAS,CAAE0N,MAAO1N,EAAQ2P,aAC1BzN,UAAWlC,EAAQqP,IACnBnI,MAAM,UACNpC,UAAQ,EACRkJ,QAtB2B,kBAAMtO,EAAM+L,gBAAgB,mBAuBvDuB,KAAK,QACLtM,OAjGmC,uBAkGnCuN,QAAQ,aARV,uBAaF,kBAACH,EAAA,EAAD,SAED,OAACpC,QAAD,IAACA,OAAD,EAACA,EAAeQ,SACf,kBAACW,EAAA,EAAD,CAAO3K,UAAWlC,EAAQkQ,kBAAmB1C,QAAQ,UACjD9B,EAAuC,kBAACoB,EAAA,EAAD,kCAAvB,kBAAC8G,GAAA,EAAD,OAGrBR,EAAsBlH,OAAS,GAC9B,kBAAC,KAAD,CAAShK,UAAWlC,EAAQ8P,MAC1B,kBAAC,KAAD,CACEtJ,OAAQ,IACRqN,UAAWT,EAAsBlH,OACjCqH,SAAUA,EACVO,QA5ES,SAAClD,GAClB,OAAOA,GA4ECmD,SAAU,GACVC,cAAuD,GACvDnU,MAAO,KAEN4Q,O,UChILF,GAAeC,eAAfD,WAEF0D,GAAWvD,gBAAK,YAAiE,IAA9DC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,MAAOxO,EAAgD,EAAhDA,MAC9BpC,EAAU2O,KACRO,EAA4CyB,EAA5CzB,sBAAuB6B,EAAqBJ,EAArBI,SACzBpH,EAD8CgH,EAAX9B,OACpBqF,IAAItD,GAEzB,IAAKjH,EACH,OAAO,KAGT,IAAMuH,EAAWhC,EAAsBgE,IAAIvJ,EAAMtE,SAEjD,OACE,yBAAKjD,MAAOA,GACV,kBAACgP,GAAA,EAAD,CAAUpR,QAAS,CAAE6B,KAAM7B,EAAQsQ,WAAapO,UAAWlC,EAAQ2J,OACjE,kBAAC0H,GAAA,EAAD,CAAcnP,UAAWlC,EAAQgQ,WAC/B,kBAACpC,EAAA,EAAD,CAAKC,IAAKlE,EAAMzJ,KAAMsG,OAAQ,GAAI8K,QAAStN,KAAuBG,IAAKwF,EAAMe,WAE/E,kBAAC6G,GAAA,EAAD,CAAcC,QAAS7H,EAAMG,OAAQ2H,UAAW9H,EAAMzJ,OACrDyJ,EAAMtE,UAAYkL,GAAWlL,SAC5B,kBAACqM,GAAA,EAAD,CAAyB/N,cAAA,UAAgBgG,EAAMG,OAAtB,YA7BC,qBA8BxB,kBAAC6H,GAAA,EAAD,CAAQC,QAASV,EAAU/Q,SAAU4Q,EAASpH,WAQ1DsK,GAASpC,YAAc,WAERoC,UC7CAE,GAJiB,SAAC5F,EAAqB6F,GAAtB,OAAyD,SAAC3F,GACxFA,EAASC,aAAiB,CAAEH,cAAa6F,yBC0C9BC,GAAY,SAAC3U,GACxB,IAAMM,EAAU2O,KACRlD,EAA0E/L,EAA1E+L,gBAAiBoD,EAAyDnP,EAAzDmP,OAAQL,EAAiD9O,EAAjD8O,aAAc4F,EAAmC1U,EAAnC0U,kBAAmB7F,EAAgB7O,EAAhB6O,YAFL,EAGH1C,mBAASsD,aAAIX,EAAaY,KAAI,qBAAG/J,aAH9B,mBAGtD6J,EAHsD,KAG/BoF,EAH+B,OAIOzI,mBAAsBuI,GAJ7B,mBAItDG,EAJsD,KAI1BC,EAJ0B,OAKjC3I,mBAAS,IALwB,mBAKtDuG,EALsD,KAK9CqC,EAL8C,KAMvDhG,EAAWK,cAEXuD,EAAgB,CACpBpS,MAAOD,EAAQiQ,YACfpO,KAAM7B,EAAQoQ,WACdkC,WAAYtS,EAAQwI,WACpB2H,gBAAiBnQ,EAAQmQ,iBAWrBY,EAAW,SAACpH,GAAD,OAAkB,WACjC,IAAI+K,EACAC,EACAzF,EAAsBgE,IAAIvJ,EAAMtE,UAClCqP,EAA2BxF,EAAsBiE,OAAOxJ,EAAMtE,SAC9DsP,EAAgCJ,EAA2BlF,IAAI1F,EAAMtE,WAErEqP,EAA2BxF,EAAsBG,IAAI1F,EAAMtE,SAC3DsP,EAAgCJ,EAA2BpB,OAAOxJ,EAAMtE,UAI1EiP,EAAyBI,GACzBF,EAA8BG,GAE9BlG,EAASH,GAAmBC,EAAamG,IACzCjG,EAAS0F,GAAwB5F,EAAaoG,MAe1CC,EA5ES,SAACxC,EAAgBvD,GAAjB,OACfA,EAAOuD,QACL,SAACzI,GAAD,OACGyI,GACDzI,EAAMG,OAAOwJ,cAAcnC,SAASiB,EAAOkB,gBAC3C3J,EAAMzJ,KAAKoT,cAAcnC,SAASiB,EAAOkB,kBAuEtBuB,CAASzC,EAAQvD,GAClC0E,EAbiB,SAAC1E,EAAqBK,GAAtB,MAAwE,CAC7FL,SACAK,wBACA6B,YAUe+D,CAAeF,EAAgB1F,GAEhD,OACE,oCACE,kBAACrC,EAAA,EAAD,CAAO3K,UAAWlC,EAAQ6B,MACxB,kBAACqL,EAAA,EAAD,CAAKS,MAAM,SAASzL,UAAWsR,KAAGxT,EAAQ6C,QAAS7C,EAAQ6P,UACzD,kBAAC,KAAD,CAAQ3N,UAAWlC,EAAQuI,SAC3B,kBAAC,KAAD,CACEvI,QAASqS,EACToB,eAjDa,WACrBgB,EAAU,KAiDFtU,SA9CgB,SAACC,GACzBqU,EAAUrU,IA8CFsE,YAAY,2BACZ8D,WAAY,8BACZpI,MAAOgS,IAET,kBAACsB,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACD,GAAA,EAAD,MACA,kBAAC3F,EAAA,EAAD,CACE/N,QAAS,CAAE0N,MAAO1N,EAAQ2P,aAC1BzN,UAAWlC,EAAQqP,IACnBnI,MAAM,UACN8G,QA7B2B,kBAAMvC,EAAgB,mBA8BjDuB,KAAK,QACLtM,OAvGmC,uBAwGnCuN,QAAQ,aAPV,uBAYF,kBAACH,EAAA,EAAD,QAEAe,EAAO7B,MACP,kBAACH,EAAA,EAAD,CAAO3K,UAAWlC,EAAQkQ,kBAAmB1C,QAAQ,UACnD,kBAACoG,GAAA,EAAD,OAGH/E,EAAO7B,KAAO,GACb,kBAAC,KAAD,CAAS9K,UAAWlC,EAAQ8P,MAC1B,kBAAC,KAAD,CACEtJ,OAAQ,IACRqN,UAAWe,EAAe5H,KAC1BuG,SAAUA,EACVO,QAhDS,SAAClD,EAAD,GACjB,OADwD,EAArB/B,OACrBqF,IAAItD,GAAOvL,SAgDjB0O,SAAU,GACVC,cAAuD,GACvDnU,MAAO,KAENoU,OC9HPtF,GAAY7I,YAAWmD,GAsDd8L,GA9CA,SAACrV,GAAsC,IAC5CsV,EAAsCtV,EAAtCsV,YAAazJ,EAAyB7L,EAAzB6L,QAASgD,EAAgB7O,EAAhB6O,YACxBM,EAASlD,YAAYsJ,KACrBzG,EAAe7C,YAAYuJ,MAC3Bd,EAAoBzI,YAAYwJ,MAChCnV,EAAU2O,KALmC,EAMX9C,mBAASmJ,GANE,mBAM5CI,EAN4C,KAM9B3J,EAN8B,KAQnD,OACE,oCACE,kBAACyB,EAAA,EAAD,CAAKS,MAAM,SAASzL,UAAWlC,EAAQmJ,QAASkM,MAAI,GAClD,kBAACvI,EAAA,EAAD,CAAWC,UAAQ,EAACC,KAAK,KAAKC,OAAO,UAArC,eAGA,kBAACqI,EAAA,EAAD,CAAY3R,cAxBoC,gCAwBmB4R,eAAa,EAACvH,QAASzC,GACxF,kBAAC,IAAD,CAAOrJ,UAAWlC,EAAQqJ,UAG9B,kBAACyE,EAAA,EAAD,MACkB,cAAjBsH,GACC,kBAAC,GAAD,CACE5G,aAAcA,EACd4F,kBAAmBA,EACnB7F,YAAaA,EACb9C,gBAAiBA,EACjBoD,OAAQA,IAGM,eAAjBuG,GAAiC,kBAAC,GAAD,CAAY3J,gBAAiBA,IAC7C,mBAAjB2J,GACC,kBAAC,GAAD,CACE5G,aAAcA,EACdjD,QAASA,EACTC,WAAY,YACZ+C,YAAaA,EACb9C,gBAAiBA,EACjBoD,OAAQA,IAGM,mBAAjBuG,GACC,kBAAC,EAAD,CAAyB7J,QAASA,EAASC,WAAY,aAAcC,gBAAiBA,MCrEjFxC,GAASC,YAAa,CACjCsM,SAAU,CACR/M,WAAY,SACZvC,UAAW,aACXwC,eAAgB,gBAChB7F,QAAQ,GAAD,OAAKuG,KAAL,OAETqM,UAAU,aACRhN,WAAY,SACZd,QAAS,OACT+N,MAAO,GAHA,6BAKgBC,WALhB,OAKgC,CACrCD,MAAO,MAGXE,aAAc,CACZC,iBAAiB,GAAD,OAAKpE,YAAL,eAChBjL,OAAQ,mBAEVsP,SAAU,CACR5O,MAAO,UACP0B,OAAQ,QACR/F,QAAS,SACTkT,eAAgB,YAEhB,UAAW,CACT5O,OAAQ,YAGZ6O,eAAgB,CACd9O,MAAOuK,YACPpK,WAAY,OACZuB,OAAQ,QACR/F,QAAS,SACTkT,eAAgB,QAElBE,cAAc,aACZxN,WAAY,SACZd,QAAS,OACTe,eAAgB,gBAChBgN,MAAO,EACP7S,QAAS,YALE,6BAOY8S,WAPZ,OAO4B,CACrCjN,eAAgB,WAChBgN,MAAO,IACP7S,QAAS,MAGbqT,mBAAmB,aACjBrP,WAAY,QADI,6BAGO8O,WAHP,OAGuB,CACrC9O,WAAY,MAGhBsP,aAAc,CACZ3P,OAAQ,OACRR,SAAU,oBACV8E,UAAW,QACXlL,SAAU,UAEZwW,KAAM,CACJvW,MAAO,OACPyH,SAAU,OACVL,aAAcoG,KACd,WAAY,CACVjG,SAAU,W,8KC9CRmJ,GAAeC,eAAfD,WAqHO8F,GAnHU,WACvB,IAAM9H,EAAc5C,YAAY+G,MAC1BjE,EAAWK,cAFuC,EAGxBjD,mBAAS,MAHe,mBAGjDyK,EAHiD,KAGvCC,EAHuC,KAIlDC,EAAmB7K,YAAY8K,MAJmB,EAKhB5K,mBAAS,IALO,mBAKjD6K,EALiD,KAKnCC,EALmC,KAOlDC,EAAiBC,OAAO7M,OAAO8M,MAC/BC,EAAaxG,GAAW7F,QACxB1K,EAAU6F,eACVmR,EAAyBJ,EAAexE,QAAO,SAAC6E,GAAD,OACnDA,EAAS3D,cAAcnC,SAASuF,EAAapD,kBAOzC4D,EAAc,WAClBX,EAAY,OAQd,OAAKC,EAKH,kBAAC,KAAD,CAAkBW,MAAOC,MACvB,oCACE,4BAAQlV,UAAWlC,EAAQ8G,OAAQkH,QApBrB,SAACqJ,GACnBd,EAAYc,EAAMpT,gBAmB2Ce,KAAK,UAC5D,0BAAM9C,UAAWoV,KAAWtX,EAAQ0H,YAAa4O,GAAYtW,EAAQmI,iBAClEqO,IAGL,kBAACe,GAAA,EAAD,CACEjB,SAAUA,EACVkB,aAAc,CACZC,WAAY,SACZC,SAAU,UAEZC,UAAW,EACXC,mBAAoB,KACpBC,GAAG,iBACHC,aAAW,EACXvM,QAAS2L,EACTa,KAAMC,QAAQ1B,GACd2B,gBAAiB,CACfR,WAAY,SACZC,SAAU,QAGZ,kBAACQ,GAAA,EAAD,CAAUhW,UAAWlC,EAAQmG,eAAgBgS,IAAI,KAC/C,yBAAKjW,UAAWlC,EAAQuI,QACtB,yBAAKrG,UAAWlC,EAAQwI,YACtB,kBAAC,KAAD,OAEF,kBAAC4P,GAAA,EAAD,CACEpY,QAAS,CACP6B,KAAM7B,EAAQ4B,UACd3B,MAAOD,EAAQgJ,YAEjBjH,WAAY,CAAE,aAAc,UAC5B5B,SAAU,SAACkX,GAAD,OAAWV,EAAgBU,EAAMgB,OAAOjY,QAClDsE,YAAY,eACZtE,MAAOsW,MAIb,yBAAKxU,UAAWlC,EAAQqI,4BACrB2O,EAAuB5H,KAAI,SAACkJ,GAAD,OAC1B,kBAACJ,GAAA,EAAD,CACEhW,UAAWlC,EAAQ+F,SACnBoS,IAAKG,EACLtK,QAAS,kBAxDkBuK,EAwDoBD,EAvD3D7J,EAAS+J,aAAoBjK,EAAagK,SAC1CrB,IAFsC,IAACqB,GAyD3BnY,MAAOkY,GAEP,kBAACjH,GAAA,EAAD,CAAcnP,UAAWlC,EAAQ0G,UAC9B+R,aAAWH,EAAc/H,GAAWzG,QACnC,kBAAC8D,EAAA,EAAD,CACEC,IAAK0C,GAAWzG,OAAO4O,oBACvBpH,QAAStN,KACTG,IAAK4S,EACL7U,UAAWoV,KAAWtX,EAAQyG,aAGhC,yBACEvE,UAAWoV,KACTtX,EAAQoG,UACR,gBACA,mBAHmB,wBAIFkS,EAAahF,mBAKtC,kBAAC/B,GAAA,EAAD,CAAcC,QAAS8G,IACtBA,IAAiB9B,EAChB,kBAACnF,GAAA,EAAD,CAAcnP,UAAWlC,EAAQ4G,WAC/B,yBAAKiH,IAAI,UAAU1J,IAAKwU,QAExB,aA7ET,M,uCCZIC,GAnCiB,SAACrK,GAAD,8CAAiB,WAAOE,EAAUoK,GAAjB,2BAAAzT,EAAA,kEAEvCgH,EAAQyM,IAGK,KAFbC,EAAQC,aAAiB3M,IAErBY,KALmC,iDASvCgM,EAAkBC,YAAkB7M,GACpC8M,EAAsBC,aAA+B5K,EAAauK,GAClE5G,EAAoBkH,aAAoC7K,EAAauK,GAGrEO,EAAkBxC,OAAOyC,QAAQN,GACpC5G,QAAO,SAACpB,GAAW,IAAD,EACwBA,EAAM,GAAvC3L,EADS,EACTA,QAASkU,EADA,EACAA,eACjB,OAAmB,OAAZlU,IAAqB6M,EAAkBgB,IAAI7N,IAAYkU,EAAiB,KAEhFnK,KAAI,SAAC4B,GACJ,OAAOA,EAAM,MAIXe,EAAemH,EAAoBM,MAAMH,GAG/C5K,EAASqD,GAAmBvD,EAAawD,IA3BI,kDA6B7CnM,QAAQxE,MAAM,oCAAd,MA7B6C,iCAgCxC,MAhCwC,0DAAjB,yD,UCInBqY,GAAiB,SAAClL,GAC7B,IAAME,EAAWK,cACX4K,EAAWC,eAEjBC,mBAAQ,WACFC,GAAqBC,KAAKJ,EAASK,WACrCC,aAAM,WAEJvL,EAASwL,eACTxL,ECd6B,SAACF,GAAD,8CAAyB,WAC5DE,GAD4D,eAAArJ,EAAA,+EAIrB8U,eAJqB,OAIpDC,EAJoD,OAM1D1L,EAAS+J,aAAoBjK,EAAa4L,GAA0BrD,KAAqBsD,MAN/B,gDAQ1DxU,QAAQxE,MAAM,iCAAd,MAR0D,iCAUrDwI,QAAQyQ,WAV6C,yDAAzB,sDDcpBC,CAAsB/L,IAC/BE,EAAS8L,aAAgBhM,OAIzBiM,GAA4BV,KAAKJ,EAASK,WAC5CC,aAAM,WACJvL,EAASgM,aAAkBlM,IAAcmM,MAAK,WAC5CjM,EAASmK,GAAwBrK,YAItC,CAACE,EAAUiL,EAASK,SAAUxL,K,mBEL7BoM,GAAetY,IAAMuY,MAAK,kBAAM,mCAChCC,GAAQxY,IAAMuY,MAAK,kBAAM,mCAElBE,GAA+B,oBAC/BC,GAAsB,cAE7BC,GAAgB,CACpBC,eAAe,EACfC,WAAW,EACXC,4BAA4B,EAC5BC,UAAW,CACTC,QAAQ,EACRC,cAAe,IAEjBC,aAAa,GAGF1B,GAAuB,iBACvBW,GAA8B,4BAErC7L,GAAY7I,YAAWmD,IA8LduS,UA5LE,WAA2B,IAAD,EACnCxb,EAAU2O,KADyB,EAEf9C,mBAASmP,IAFM,mBAElC5O,EAFkC,KAE3BqP,EAF2B,KAInCpW,EAAUsG,YAAY+G,MACtBgJ,EAAkB/P,YAAYgQ,MAC9BC,EAAQ,UAAGjQ,YAAYkQ,aAAf,QAAoC,GAElDpC,GAAepU,GAEfyW,qBAAU,WACR,IAAMb,EAAgBjD,QAAO,OAAC0D,QAAD,IAACA,OAAD,EAACA,EAAiBvK,SAAS4K,KAASC,SAEjEP,GAAS,SAACQ,GAAD,mBAAC,eACLA,GADI,IAEPhB,uBAED,CAACS,IAEJ,IAAMQ,EAAS,SAACC,GACdV,GAAS,SAACQ,GAAD,mBAAC,eAAoBA,GAArB,gCAAwCE,IAAW,QAGxDC,EAAS,SAACD,GACdV,GAAS,SAACQ,GAAD,mBAAC,eAAoBA,GAArB,gCAAwCE,IAAW,QAGxDE,EAAgB,SAAC9S,GACrBkS,GAAS,SAACQ,GAAD,mBAAC,eACLA,GADI,IAEPb,UAAW,CACTC,QAAQ,EACRC,cAAe/R,SAgBnBqM,EAQE5V,EARF4V,aACAE,EAOE9V,EAPF8V,SACAE,EAMEhW,EANFgW,eACAP,EAKEzV,EALFyV,UACAD,EAIExV,EAJFwV,SACAU,EAGElW,EAHFkW,mBACAC,EAEEnW,EAFFmW,aACAF,EACEjW,EADFiW,cAEMgF,EAAiF7O,EAAjF6O,cAAeG,EAAkEhP,EAAlEgP,UAAWD,EAAuD/O,EAAvD+O,2BAA4BI,EAA2BnP,EAA3BmP,YAAaL,EAAc9O,EAAd8O,UAE3E,OACE,oCACE,kBAAChO,EAAA,EAAD,CAAKS,MAAM,SAASzL,UAAWsT,GAC7B,kBAACrI,EAAA,EAAD,CAAKjL,UAAWuT,EAAWhG,GAAI,EAAG6M,MAAM,KAAKjP,GAAI,IAC/C,kBAAC,KAAD,CACEkP,GAAE,UAAKC,KAAL,YAAyBnX,EAAzB,aACFoX,gBAAiBzG,EACjB9T,UAAW4T,EACXnS,cAAa,mBACb+Y,OAAK,GALP,SASCzB,EACC,oCACE,kBAACtH,GAAA,EAAD,CAASzR,UAAW0T,IACpB,kBAAC,KAAD,CACE2G,GAAE,UAAKC,KAAL,YAAyBnX,EAAzB,0BACFoX,gBAAiBzG,EACjB9T,UAAW4T,EACXnS,cAAa,0BACb+Y,OAAK,GALP,iBAUA,MAEN,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEC,KAAI,UAAKH,KAAL,YAAyBnX,EAAzB,0BACJqX,OAAK,EACLjZ,OAAQ,WACN,OAAQwX,EAGN,kBAAC9N,EAAA,EAAD,CAAKjL,UAAW+T,EAAe2G,IAAI,KAAKnN,GAAI,EAAGpC,GAAI,IACjD,kBAACwP,GAAA,EAAD,CACE3a,UAAWgU,EACXlI,QAAS,kBAAMkO,EAAO,2BACtBlP,KAAK,KACLtM,OAAO,qBAJT,eAQA,kBAACoc,GAAA,EAAD,CACEzJ,YAAa,yCACb6D,YAAa,kBAAMkF,EAAO,2BAC1BrE,KAAMoD,EACNvQ,MAAM,eAEN,kBAAC,GAAD,CACEoK,YAAa,aACbzJ,QAAS,kBAAM6Q,EAAO,2BACtB7N,YAAalJ,MApBnB,kBAAC,KAAD,CAAUkX,GAAE,UAAKC,KAAL,YAAyBnX,EAAzB,kBA2BlB,kBAAC,KAAD,CACEsX,KAAI,UAAKH,KAAL,YAAyBnX,EAAzB,aACJqX,OAAK,EACLjZ,OAAQ,WACN,OACE,oCACE,kBAAC0J,EAAA,EAAD,CAAKjL,UAAW+T,EAAe2G,IAAI,KAAKnN,GAAI,EAAGpC,GAAI,IACjD,kBAAC,GAAD,MACA,kBAACwP,GAAA,EAAD,CACE3a,UAAWgU,EACXlI,QAAS,kBAAMkO,EAAO,UACtBlP,KAAK,KACLtM,OAAO,qBAJT,eAQA,kBAACoc,GAAA,EAAD,CACEzJ,YAAa,yCACb6D,YAAa,kBAAMkF,EAAO,UAC1BrE,KAAMmD,EACNtQ,MAAM,eAEN,kBAAC,GAAD,CAAQoK,YAAa,YAAazJ,QAAS,kBAAM6Q,EAAO,UAAU7N,YAAalJ,YAS/F,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEsX,KAAI,UAAKH,KAAL,YAAyBnX,EAAzB,0BACJqX,OAAK,EACLjZ,OAAQ,WACN,OAAIwX,EACK8B,aAAe,kBAACpC,GAAD,OAEjB,QAGX,kBAAC,KAAD,CACEgC,KAAI,UAAKH,KAAL,YAAyBnX,EAAzB,aACJ5B,OAAQ,WACN,OAAOsZ,aAAe,kBAAClC,GAAD,CAAOmC,iBAAkB,kBAAMd,EAAO,YAAYG,cAAeA,SAI7F,kBAACY,GAAA,EAAD,CACEC,iBAAiB,YACjB7B,OAAQD,EAAUC,OAClB9P,QAvIgB,WACpBkQ,GAAS,SAACQ,GAAD,mBAAC,eACLA,GADI,IAEPb,UAAW,CACTC,QAAQ,EACRC,cAAe,UAmIfA,cAAeF,EAAUE,gBAE3B,kBAACwB,GAAA,EAAD,CACEzJ,YAAY,sBACZ6D,YAAa,kBAAMkF,EAAO,YAC1BrE,KAAMwD,EACN4B,eAAgBhH,EAChBvL,MAAM,kBAEN,kBAACwS,EAAA,EAAD,CAAc7O,YAAalJ,EAASuW,SAAUA,EAAUrQ,QAAS,kBAAM6Q,EAAO","file":"static/js/37.c97e19dd.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import MuiTextField from '@material-ui/core/TextField'\nimport { withStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nimport { lg } from 'src/theme/variables'\n\n// Neded for solving a fix in Windows browsers\nconst overflowStyle = {\n  overflow: 'hidden',\n  width: '100%',\n}\n\nconst styles = () => ({\n  root: {\n    paddingTop: lg,\n    paddingBottom: '12px',\n    lineHeight: 0,\n  },\n})\n\nclass TextField extends React.PureComponent<any> {\n  render() {\n    const {\n      classes,\n      input: { name, onChange, value, ...restInput },\n      inputAdornment,\n      meta,\n      multiline,\n      rows,\n      testId,\n      text,\n      ...rest\n    } = this.props\n    const helperText = value ? text : undefined\n    const showError = (meta.touched || !meta.pristine) && !meta.valid\n    const hasError = !!meta.error || (!meta.modifiedSinceLastSubmit && !!meta.submitError)\n    const errorMessage = meta.error || meta.submitError\n    const isInactiveAndPristineOrUntouched = !meta.active && (meta.pristine || !meta.touched)\n    const isInvalidAndUntouched = typeof meta.error === 'undefined' ? true : !meta.touched\n\n    const disableUnderline = isInactiveAndPristineOrUntouched && isInvalidAndUntouched\n\n    const inputRoot = helperText ? classes.root : ''\n    const statusClasses = meta.valid ? 'isValid' : hasError && showError ? 'isInvalid' : ''\n    const inputProps = {\n      ...restInput,\n      autoComplete: 'off',\n      'data-testid': testId,\n    }\n    const inputRootProps = {\n      ...inputAdornment,\n      className: `${inputRoot} ${statusClasses}`,\n      disableUnderline: disableUnderline,\n    }\n\n    return (\n      <MuiTextField\n        error={hasError && showError}\n        helperText={hasError && showError ? errorMessage : helperText || ' '}\n        inputProps={inputProps} // blank in order to force to have helper text\n        InputProps={inputRootProps}\n        multiline={multiline}\n        name={name}\n        onChange={onChange}\n        rows={rows}\n        style={overflowStyle}\n        value={value}\n        {...rest}\n      />\n    )\n  }\n}\n\nexport default withStyles(styles as any)(TextField)\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = TokenPlaceholder\n}\n","import { SyntheticEvent } from 'react'\n\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\n\nexport const setCollectibleImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = NFTIcon\n}\n","module.exports = __webpack_public_path__ + \"static/media/token_placeholder.a8034531.svg\";","import * as React from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromENS } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\n// an idea for second field was taken from here\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => (\n  <>\n    <Field\n      className={className}\n      component={TextField as any}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      inputAdornment={inputAdornment}\n      name={name}\n      placeholder={placeholder}\n      testId={testId}\n      text={text}\n      type=\"text\"\n      validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\n    />\n    <OnChange name={name}>\n      {async (value) => {\n        const address = trimSpaces(value)\n        if (isValidEnsName(address)) {\n          try {\n            const resolverAddr = await getAddressFromENS(address)\n            const formattedAddress = checksumAddress(resolverAddr)\n            fieldMutator(formattedAddress)\n          } catch (err) {\n            console.error('Failed to resolve address for ENS name: ', err)\n          }\n        } else {\n          const formattedAddress = checksumAddress(address)\n          fieldMutator(formattedAddress)\n        }\n      }}\n    </OnChange>\n  </>\n)\n\nexport default AddressInput\n","module.exports = __webpack_public_path__ + \"static/media/check.2e8629da.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst buttonWidth = '140px'\nexport const useDropdownStyles = makeStyles({\n  listItem: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    boxSizing: 'border-box',\n  },\n  listItemSearch: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    padding: '0',\n    boxSizing: 'border-box',\n  },\n  localFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    height: '20px !important',\n    width: '26px !important',\n  },\n  etherFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    width: '26px',\n    height: '26px',\n  },\n  iconLeft: {\n    marginRight: '10px',\n  },\n  iconRight: {\n    marginLeft: '18px',\n  },\n  button: {\n    backgroundColor: '#e8e7e6',\n    border: 'none',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    color: '#5d6d74',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    height: '24px',\n    lineHeight: '1.33',\n    marginRight: '20px',\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    outline: 'none',\n    padding: '0',\n    textAlign: 'left',\n    '&:active': {\n      opacity: '0.8',\n    },\n  },\n  buttonInner: {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '100%',\n    lineHeight: '24px',\n    padding: '0 22px 0 8px',\n    position: 'relative',\n    width: '100%',\n    '&::after': {\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: '5px solid #5d6d74',\n      content: '\"\"',\n      height: '0',\n      position: 'absolute',\n      right: '8px',\n      top: '9px',\n      width: '0',\n    },\n  },\n  openMenuButton: {\n    '&::after': {\n      borderBottom: '5px solid #5d6d74',\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: 'none',\n    },\n  },\n  dropdownItemsScrollWrapper: {\n    maxHeight: '280px',\n    overflow: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: '0',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    marginRight: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    left: '12px',\n    margin: '0',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '18px',\n    '& path': {\n      fill: '#b2b5b2',\n    },\n  },\n  inputRoot: {\n    color: '#5d6d74',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    lineHeight: '1.43',\n    width: '100%',\n  },\n  inputInput: {\n    boxSizing: 'border-box',\n    height: '44px',\n    padding: '12px 12px 12px 40px',\n    width: '100%',\n  },\n})\n","import { lg, md } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  close: {\n    height: '35px',\n    width: '35px',\n  },\n})\n","import { getHumanFriendlyToken } from 'src/logic/tokens/store/actions/fetchTokens'\n\nexport const getSymbolAndDecimalsFromContract = async (tokenAddress) => {\n  const tokenContract = await getHumanFriendlyToken()\n  const token = await tokenContract.at(tokenAddress)\n  let values\n\n  try {\n    const [symbol, decimals] = await Promise.all([token.symbol(), token.decimals()])\n    values = [symbol, decimals.toString()]\n  } catch {\n    values = []\n  }\n\n  return values\n}\n","import memoize from 'lodash.memoize'\nimport { isERC721Contract } from 'src/logic/collectibles/utils'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\n// eslint-disable-next-line\nexport const addressIsAssetContract = memoize(async (tokenAddress) => {\n  const isAsset = await isERC721Contract(tokenAddress)\n  if (!isAsset) {\n    return 'Not a asset address'\n  }\n})\n\n// eslint-disable-next-line\nexport const doesntExistInAssetsList = (assetsList) =>\n  memoize((tokenAddress) => {\n    const tokenIndex = assetsList.findIndex(({ address }) => sameAddress(address, tokenAddress))\n\n    if (tokenIndex !== -1) {\n      return 'Token already exists in your token list'\n    }\n  })\n","import { withStyles } from '@material-ui/core/styles'\nimport React, { useState } from 'react'\nimport { FormSpy } from 'react-final-form'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\nimport { getSymbolAndDecimalsFromContract } from './utils'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport { composeValidators, minMaxLength, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { nftAssetsListSelector } from 'src/logic/collectibles/store/selectors'\n\nimport {\n  addressIsAssetContract,\n  doesntExistInAssetsList,\n} from 'src/routes/safe/components/Balances/Tokens/screens/AddCustomAsset/validators'\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\nimport { Checkbox } from '@gnosis.pm/safe-react-components'\n\nexport const ADD_CUSTOM_ASSET_ADDRESS_INPUT_TEST_ID = 'add-custom-asset-address-input'\nexport const ADD_CUSTOM_ASSET_SYMBOLS_INPUT_TEST_ID = 'add-custom-asset-symbols-input'\nexport const ADD_CUSTOM_ASSET_DECIMALS_INPUT_TEST_ID = 'add-custom-asset-decimals-input'\nexport const ADD_CUSTOM_ASSET_FORM = 'add-custom-asset-form'\n\nconst INITIAL_FORM_STATE = {\n  address: '',\n  decimals: '',\n  symbol: '',\n  logoUri: '',\n}\n\nconst AddCustomAsset = (props) => {\n  const { classes, onClose, parentList, setActiveScreen } = props\n\n  const nftAssetsList = useSelector(nftAssetsListSelector)\n  const [formValues, setFormValues] = useState(INITIAL_FORM_STATE)\n\n  const handleSubmit = () => {\n    onClose()\n  }\n\n  const populateFormValuesFromAddress = async (tokenAddress) => {\n    const tokenData = await getSymbolAndDecimalsFromContract(tokenAddress)\n\n    if (tokenData.length) {\n      const [symbol, decimals] = tokenData\n\n      setFormValues({\n        address: tokenAddress,\n        symbol,\n        decimals,\n        name: symbol,\n      } as any)\n    }\n  }\n\n  const formSpyOnChangeHandler = async (state) => {\n    const { dirty, errors, submitSucceeded, validating, values } = state\n    // for some reason this is called after submitting, we don't need to update the values\n    // after submit\n    if (submitSucceeded) {\n      return\n    }\n\n    if (dirty && !validating && errors.address) {\n      setFormValues(INITIAL_FORM_STATE)\n    }\n\n    if (!errors.address && !validating && dirty) {\n      await populateFormValuesFromAddress(values.address)\n    }\n  }\n\n  const formMutators = {\n    setAssetAddress: (args, state, utils) => {\n      utils.changeValue(state, 'address', () => args[0])\n    },\n  }\n\n  const goBack = () => {\n    setActiveScreen(parentList)\n  }\n\n  return (\n    <>\n      <GnoForm\n        initialValues={formValues}\n        onSubmit={handleSubmit}\n        formMutators={formMutators}\n        testId={ADD_CUSTOM_ASSET_FORM}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Paragraph className={classes.title} noMargin size=\"lg\" weight=\"bolder\">\n                  Add custom asset\n                </Paragraph>\n                <AddressInput\n                  fieldMutator={mutators.setAssetAddress}\n                  className={classes.addressInput}\n                  name=\"address\"\n                  placeholder=\"Asset contract address*\"\n                  testId={ADD_CUSTOM_ASSET_ADDRESS_INPUT_TEST_ID}\n                  text=\"Asset contract address*\"\n                  validators={[doesntExistInAssetsList(nftAssetsList), addressIsAssetContract]}\n                />\n                <FormSpy\n                  onChange={formSpyOnChangeHandler}\n                  subscription={{\n                    values: true,\n                    errors: true,\n                    validating: true,\n                    dirty: true,\n                    submitSucceeded: true,\n                  }}\n                />\n                <Row>\n                  <Col layout=\"column\" xs={6}>\n                    <Field\n                      className={classes.addressInput}\n                      component={TextField}\n                      name=\"symbol\"\n                      placeholder=\"Token symbol*\"\n                      testId={ADD_CUSTOM_ASSET_SYMBOLS_INPUT_TEST_ID}\n                      text=\"Token symbol\"\n                      type=\"text\"\n                      validate={composeValidators(required, minMaxLength(2, 12))}\n                    />\n                    <Field\n                      className={classes.addressInput}\n                      component={TextField}\n                      disabled\n                      name=\"decimals\"\n                      placeholder=\"Token decimals*\"\n                      testId={ADD_CUSTOM_ASSET_DECIMALS_INPUT_TEST_ID}\n                      text=\"Token decimals*\"\n                      type=\"text\"\n                    />\n                    <Block justify=\"center\">\n                      <Field\n                        className={classes.checkbox}\n                        component={Checkbox}\n                        name=\"showForAllSafes\"\n                        type=\"checkbox\"\n                        label=\"Activate assets for all Safes\"\n                      />\n                    </Block>\n                  </Col>\n                  <Col align=\"center\" layout=\"column\" xs={6}>\n                    <Paragraph className={classes.tokenImageHeading}>Token Image</Paragraph>\n                    <Img alt=\"Token image\" height={100} src={TokenPlaceholder} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button minHeight={42} minWidth={140} onClick={goBack}>\n                  Cancel\n                </Button>\n                <Button color=\"primary\" minHeight={42} minWidth={140} type=\"submit\" variant=\"contained\">\n                  Save\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nconst AddCustomAssetComponent = withStyles(styles as any)(AddCustomAsset)\n\nexport default AddCustomAssetComponent\n","import { lg, md } from 'src/theme/variables'\n\nexport const styles = () => ({\n  title: {\n    padding: `${lg} 0 20px`,\n    fontSize: md,\n  },\n  formContainer: {\n    padding: '0 20px',\n    minHeight: '369px',\n  },\n  addressInput: {\n    marginBottom: '15px',\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: 'red',\n  },\n  tokenImageHeading: {\n    margin: '0 0 15px',\n  },\n  checkbox: {\n    padding: '0 7px 0 0',\n    width: '18px',\n    height: '18px',\n  },\n  checkboxLabel: {\n    letterSpacing: '-0.5px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n})\n","import { lg, md } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  title: {\n    padding: `${lg} 0 20px`,\n    fontSize: md,\n  },\n  formContainer: {\n    padding: '0 20px',\n    minHeight: '369px',\n  },\n  addressInput: {\n    marginBottom: '15px',\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: 'red',\n  },\n  tokenImageHeading: {\n    margin: '0 0 15px',\n  },\n  checkbox: {\n    padding: '0 7px 0 0',\n    width: '18px',\n    height: '18px',\n  },\n  checkboxLabel: {\n    letterSpacing: '-0.5px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n})\n","import { getHumanFriendlyToken } from 'src/logic/tokens/store/actions/fetchTokens'\n\nexport const getSymbolAndDecimalsFromContract = async (tokenAddress) => {\n  const tokenContract = await getHumanFriendlyToken()\n  const token = await tokenContract.at(tokenAddress)\n  let values\n\n  try {\n    const [symbol, decimals] = await Promise.all([token.symbol(), token.decimals()])\n    values = [symbol, decimals.toString()]\n  } catch {\n    values = []\n  }\n\n  return values\n}\n","import memoize from 'lodash.memoize'\n\nimport { isAddressAToken } from 'src/logic/tokens/utils/tokenHelpers'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\nexport const addressIsTokenContract = memoize(async (tokenAddress) => {\n  // SECOND APPROACH:\n  // They both seem to work the same\n  // const tokenContract = await getStandardTokenContract()\n  // try {\n  //   await tokenContract.at(tokenAddress)\n  // } catch {\n  //   return 'Not a token address'\n  // }\n\n  const isToken = await isAddressAToken(tokenAddress)\n\n  if (!isToken) {\n    return 'Not a token address'\n  }\n})\n\n// eslint-disable-next-line\nexport const doesntExistInTokenList = (tokenList) =>\n  memoize((tokenAddress: string) => {\n    const tokenIndex = tokenList.findIndex(({ address }) => sameAddress(address, tokenAddress))\n\n    if (tokenIndex !== -1) {\n      return 'Token already exists in your token list'\n    }\n  })\n","import { Set } from 'immutable'\nimport updateTokensList from './updateTokensList'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\n// the selector uses ownProps argument/router props to get the address of the safe\n// so in order to use it I had to recreate the same structure\n// const generateMatchProps = (safeAddress: string) => ({\n//   match: {\n//     params: {\n//       [SAFE_PARAM_ADDRESS]: safeAddress,\n//     },\n//   },\n// })\n\nconst updateActiveTokens = (safeAddress: string, activeTokens: Set<string>) => (dispatch: Dispatch): void => {\n  dispatch(updateTokensList({ safeAddress, activeTokens }))\n}\n\nexport default updateActiveTokens\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useState } from 'react'\nimport { FormSpy } from 'react-final-form'\n\nimport { styles } from './style'\nimport { getSymbolAndDecimalsFromContract } from './utils'\nimport { addressIsTokenContract, doesntExistInTokenList } from './validators'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport { composeValidators, minMaxLength, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Checkbox } from '@gnosis.pm/safe-react-components'\nimport { useDispatch } from 'react-redux'\nimport { addToken } from 'src/logic/tokens/store/actions/addToken'\nimport updateActiveTokens from 'src/logic/safe/store/actions/updateActiveTokens'\nimport activateTokenForAllSafes from 'src/logic/safe/store/actions/activateTokenForAllSafes'\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { List, Set } from 'immutable'\n\nexport const ADD_CUSTOM_TOKEN_ADDRESS_INPUT_TEST_ID = 'add-custom-token-address-input'\nexport const ADD_CUSTOM_TOKEN_SYMBOLS_INPUT_TEST_ID = 'add-custom-token-symbols-input'\nexport const ADD_CUSTOM_TOKEN_DECIMALS_INPUT_TEST_ID = 'add-custom-token-decimals-input'\nexport const ADD_CUSTOM_TOKEN_FORM = 'add-custom-token-form'\n\nconst INITIAL_FORM_STATE = {\n  address: '',\n  decimals: '',\n  symbol: '',\n  logoUri: '',\n}\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  activeTokens: List<Token>\n  onClose: () => void\n  parentList: string\n  safeAddress: string\n  setActiveScreen: (screen: string) => void\n  tokens: List<Token>\n}\n\nconst AddCustomToken = (props: Props): React.ReactElement => {\n  const { activeTokens, onClose, parentList, safeAddress, setActiveScreen, tokens } = props\n  const [formValues, setFormValues] = useState(INITIAL_FORM_STATE)\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleSubmit = (values) => {\n    const address = checksumAddress(values.address)\n    const token = {\n      address,\n      decimals: values.decimals,\n      symbol: values.symbol,\n      name: values.symbol,\n    }\n\n    dispatch(addToken(token))\n    if (values.showForAllSafes) {\n      dispatch(activateTokenForAllSafes(token.address))\n    } else {\n      const activeTokensAddresses = Set(activeTokens.map(({ address }) => address))\n      dispatch(updateActiveTokens(safeAddress, activeTokensAddresses.add(token.address)))\n    }\n\n    onClose()\n  }\n\n  const populateFormValuesFromAddress = async (tokenAddress) => {\n    const tokenData = await getSymbolAndDecimalsFromContract(tokenAddress)\n\n    if (tokenData.length) {\n      const [symbol, decimals] = tokenData\n\n      setFormValues({\n        address: tokenAddress,\n        symbol,\n        decimals,\n        name: symbol,\n      } as any)\n    }\n  }\n\n  const formSpyOnChangeHandler = async (state) => {\n    const { dirty, errors, submitSucceeded, validating, values } = state\n    // for some reason this is called after submitting, we don't need to update the values\n    // after submit\n    if (submitSucceeded) {\n      return\n    }\n\n    if (dirty && !validating && errors.address) {\n      setFormValues(INITIAL_FORM_STATE)\n    }\n\n    if (!errors.address && !validating && dirty) {\n      await populateFormValuesFromAddress(values.address)\n    }\n  }\n\n  const formMutators = {\n    setTokenAddress: (args, state, utils) => {\n      utils.changeValue(state, 'address', () => args[0])\n    },\n  }\n\n  const goBack = () => {\n    setActiveScreen(parentList)\n  }\n\n  return (\n    <>\n      <GnoForm\n        initialValues={formValues}\n        onSubmit={handleSubmit}\n        formMutators={formMutators}\n        testId={ADD_CUSTOM_TOKEN_FORM}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Paragraph className={classes.title} noMargin size=\"lg\" weight=\"bolder\">\n                  Add custom token\n                </Paragraph>\n                <AddressInput\n                  fieldMutator={mutators.setTokenAddress}\n                  className={classes.addressInput}\n                  name=\"address\"\n                  placeholder=\"Token contract address*\"\n                  testId={ADD_CUSTOM_TOKEN_ADDRESS_INPUT_TEST_ID}\n                  text=\"Token contract address*\"\n                  validators={[doesntExistInTokenList(tokens), addressIsTokenContract]}\n                />\n                <FormSpy\n                  onChange={formSpyOnChangeHandler}\n                  subscription={{\n                    values: true,\n                    errors: true,\n                    validating: true,\n                    dirty: true,\n                    submitSucceeded: true,\n                  }}\n                />\n                <Row>\n                  <Col layout=\"column\" xs={6}>\n                    <Field\n                      className={classes.addressInput}\n                      component={TextField}\n                      name=\"symbol\"\n                      placeholder=\"Token symbol*\"\n                      testId={ADD_CUSTOM_TOKEN_SYMBOLS_INPUT_TEST_ID}\n                      text=\"Token symbol\"\n                      type=\"text\"\n                      validate={composeValidators(required, minMaxLength(2, 12))}\n                    />\n                    <Field\n                      className={classes.addressInput}\n                      component={TextField}\n                      disabled\n                      name=\"decimals\"\n                      placeholder=\"Token decimals*\"\n                      testId={ADD_CUSTOM_TOKEN_DECIMALS_INPUT_TEST_ID}\n                      text=\"Token decimals*\"\n                      type=\"text\"\n                    />\n                    <Block justify=\"center\">\n                      <Field\n                        className={classes.checkbox}\n                        component={Checkbox}\n                        name=\"showForAllSafes\"\n                        type=\"checkbox\"\n                        label=\"Activate token for all Safes\"\n                      />\n                    </Block>\n                  </Col>\n                  <Col align=\"center\" layout=\"column\" xs={6}>\n                    <Paragraph className={classes.tokenImageHeading}>Token Image</Paragraph>\n                    <Img alt=\"Token image\" height={100} src={TokenPlaceholder} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Button minHeight={42} minWidth={140} onClick={goBack}>\n                  Cancel\n                </Button>\n                <Button color=\"primary\" minHeight={42} minWidth={140} type=\"submit\" variant=\"contained\">\n                  Save\n                </Button>\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default AddCustomToken\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { md, mediumFontSize, secondaryText, sm, xs } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      minHeight: '52px',\n    },\n    search: {\n      color: secondaryText,\n      paddingLeft: sm,\n    },\n    padding: {\n      padding: `0 ${md}`,\n    },\n    add: {\n      fontSize: '11px',\n      fontWeight: 'normal',\n      paddingRight: md,\n      paddingLeft: md,\n    },\n    addBtnLabel: {\n      fontSize: mediumFontSize,\n    },\n    actions: {\n      height: '50px',\n    },\n    list: {\n      overflow: 'hidden',\n      overflowY: 'scroll',\n      padding: 0,\n      height: '100%',\n    },\n    tokenIcon: {\n      marginRight: sm,\n      height: '28px',\n      width: '28px',\n    },\n    searchInput: {\n      backgroundColor: 'transparent',\n      lineHeight: 'initial',\n      fontSize: '13px',\n      padding: 0,\n      '& > input::placeholder': {\n        letterSpacing: '-0.5px',\n        fontSize: mediumFontSize,\n        color: 'black',\n      },\n      '& > input': {\n        letterSpacing: '-0.5px',\n      },\n    },\n    progressContainer: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n    },\n    searchContainer: {\n      width: '180px',\n      marginLeft: xs,\n      marginRight: xs,\n    },\n    searchRoot: {\n      letterSpacing: '-0.5px',\n      fontSize: '13px',\n      border: 'none',\n      boxShadow: 'none',\n      '& > button': {\n        display: 'none',\n      },\n    },\n    searchIcon: {\n      '&:hover': {\n        backgroundColor: 'transparent !important',\n      },\n    },\n  }),\n)\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { border, md, mediumFontSize, secondaryText, sm, xs } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      minHeight: '52px',\n    },\n    search: {\n      color: secondaryText,\n      paddingLeft: sm,\n    },\n    padding: {\n      padding: `0 ${md}`,\n    },\n    add: {\n      fontSize: '11px',\n      fontWeight: 'normal',\n      paddingRight: md,\n      paddingLeft: md,\n    },\n    addBtnLabel: {\n      fontSize: mediumFontSize,\n    },\n    actions: {\n      height: '50px',\n    },\n    list: {\n      overflow: 'hidden',\n      overflowY: 'scroll',\n      padding: 0,\n      height: '100%',\n    },\n    token: {\n      minHeight: '50px',\n      borderBottom: `1px solid ${border}`,\n    },\n    tokenRoot: {\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n    searchInput: {\n      backgroundColor: 'transparent',\n      lineHeight: 'initial',\n      fontSize: '13px',\n      padding: 0,\n      '& > input::placeholder': {\n        letterSpacing: '-0.5px',\n        fontSize: mediumFontSize,\n        color: 'black',\n      },\n      '& > input': {\n        letterSpacing: '-0.5px',\n      },\n    },\n    tokenIcon: {\n      marginRight: md,\n      height: '28px',\n      width: '28px',\n    },\n    progressContainer: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n    },\n    searchContainer: {\n      width: '180px',\n      marginLeft: xs,\n      marginRight: xs,\n    },\n    searchRoot: {\n      letterSpacing: '-0.5px',\n      fontSize: '13px',\n      border: 'none',\n      boxShadow: 'none',\n      '& > button': {\n        display: 'none',\n      },\n    },\n    searchIcon: {\n      '&:hover': {\n        backgroundColor: 'transparent !important',\n      },\n    },\n  }),\n)\n","import ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Switch from '@material-ui/core/Switch'\nimport React, { memo } from 'react'\n\nimport { useStyles } from 'src/routes/safe/components/Balances/Tokens/screens/TokenList/style'\nimport Img from 'src/components/layout/Img'\nimport { getNetworkInfo } from 'src/config'\nimport { setCollectibleImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\n\nexport const TOGGLE_ASSET_TEST_ID = 'toggle-asset-btn'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AssetRow = memo(({ data, index, style }: any) => {\n  const classes = useStyles()\n  const { activeAssetsAddresses, assets, onSwitch } = data\n  const asset = assets[index]\n  const { address, image, name, symbol } = asset\n  const isActive = activeAssetsAddresses.includes(asset.address)\n\n  return (\n    <div style={style}>\n      <ListItem classes={{ root: classes.tokenRoot }} className={classes.token}>\n        <ListItemIcon className={classes.tokenIcon}>\n          <Img alt={name} height={28} onError={setCollectibleImageToPlaceholder} src={image} />\n        </ListItemIcon>\n        <ListItemText primary={symbol} secondary={name} />\n        {address !== nativeCoin.address && (\n          <ListItemSecondaryAction>\n            <Switch\n              checked={isActive}\n              inputProps={{ 'data-testid': `${symbol}_${TOGGLE_ASSET_TEST_ID}` } as any}\n              onChange={onSwitch(asset)}\n            />\n          </ListItemSecondaryAction>\n        )}\n      </ListItem>\n    </div>\n  )\n})\n\nAssetRow.displayName = 'AssetRow'\n\nexport default AssetRow\n","import { Set } from 'immutable'\nimport updateAssetsList from './updateAssetsList'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nconst updateActiveAssets = (safeAddress: string, activeAssets: Set<string>) => (dispatch: Dispatch): void => {\n  dispatch(updateAssetsList({ safeAddress, activeAssets }))\n}\n\nexport default updateActiveAssets\n","import { Set } from 'immutable'\nimport updateAssetsList from './updateAssetsList'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nconst updateBlacklistedAssets = (safeAddress: string, blacklistedAssets: Set<string>) => (dispatch: Dispatch): void => {\n  dispatch(updateAssetsList({ safeAddress, blacklistedAssets }))\n}\n\nexport default updateBlacklistedAssets\n","import MuiList from '@material-ui/core/List'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Search from '@material-ui/icons/Search'\nimport cn from 'classnames'\nimport SearchBar from 'material-ui-search-bar'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FixedSizeList } from 'react-window'\nimport Paragraph from 'src/components/layout/Paragraph'\n\nimport { useStyles } from './style'\n\nimport Spacer from 'src/components/Spacer'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Divider from 'src/components/layout/Divider'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport { nftAssetsListSelector } from 'src/logic/collectibles/store/selectors'\nimport AssetRow from 'src/routes/safe/components/Balances/Tokens/screens/AssetsList/AssetRow'\nimport updateActiveAssets from 'src/logic/safe/store/actions/updateActiveAssets'\nimport updateBlacklistedAssets from 'src/logic/safe/store/actions/updateBlacklistedAssets'\nimport {\n  safeActiveAssetsListSelector,\n  safeBlacklistedAssetsSelector,\n  safeParamAddressFromStateSelector,\n} from 'src/logic/safe/store/selectors'\n\nexport const ADD_CUSTOM_ASSET_BUTTON_TEST_ID = 'add-custom-asset-btn'\n\ntype Props = {\n  setActiveScreen: (newScreen: string) => void\n}\n\nconst filterBy = (filter, nfts) =>\n  nfts.filter(\n    (asset) =>\n      !filter ||\n      asset.description.toLowerCase().includes(filter.toLowerCase()) ||\n      asset.name.toLowerCase().includes(filter.toLowerCase()) ||\n      asset.symbol.toLowerCase().includes(filter.toLowerCase()),\n  )\n\nconst AssetsList = (props: Props): React.ReactElement => {\n  const classes = useStyles()\n  const searchClasses = {\n    input: classes.searchInput,\n    root: classes.searchRoot,\n    iconButton: classes.searchIcon,\n    searchContainer: classes.searchContainer,\n  }\n  const dispatch = useDispatch()\n  const activeAssetsList = useSelector(safeActiveAssetsListSelector)\n  const blacklistedAssets = useSelector(safeBlacklistedAssetsSelector)\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n  const [filterValue, setFilterValue] = useState('')\n  const [activeAssetsAddresses, setActiveAssetsAddresses] = useState(activeAssetsList)\n  const [blacklistedAssetsAddresses, setBlacklistedAssetsAddresses] = useState(blacklistedAssets)\n  const nftAssetsList = useSelector(nftAssetsListSelector)\n\n  const onCancelSearch = () => {\n    setFilterValue('')\n  }\n\n  const onChangeSearchBar = (value) => {\n    setFilterValue(value)\n  }\n\n  const getItemKey = (index) => {\n    return index\n  }\n\n  const onSwitch = (asset) => () => {\n    let newActiveAssetsAddresses\n    let newBlacklistedAssetsAddresses\n    if (activeAssetsAddresses.has(asset.address)) {\n      newActiveAssetsAddresses = activeAssetsAddresses.delete(asset.address)\n      newBlacklistedAssetsAddresses = blacklistedAssetsAddresses.add(asset.address)\n    } else {\n      newActiveAssetsAddresses = activeAssetsAddresses.add(asset.address)\n      newBlacklistedAssetsAddresses = blacklistedAssetsAddresses.delete(asset.address)\n    }\n\n    // Set local state\n    setActiveAssetsAddresses(newActiveAssetsAddresses)\n    setBlacklistedAssetsAddresses(newBlacklistedAssetsAddresses)\n    // Dispatch to global state\n    dispatch(updateActiveAssets(safeAddress, newActiveAssetsAddresses))\n    dispatch(updateBlacklistedAssets(safeAddress, newBlacklistedAssetsAddresses))\n  }\n\n  const createItemData = (assetsList) => {\n    return {\n      assets: assetsList,\n      activeAssetsAddresses,\n      onSwitch,\n    }\n  }\n\n  const nftAssetsFilteredList = filterBy(filterValue, nftAssetsList)\n  const itemData = createItemData(nftAssetsFilteredList)\n  const switchToAddCustomAssetScreen = () => props.setActiveScreen('addCustomAsset')\n  return (\n    <>\n      <Block className={classes.root}>\n        <Row align=\"center\" className={cn(classes.padding, classes.actions)}>\n          <Search className={classes.search} />\n          <SearchBar\n            classes={searchClasses}\n            onCancelSearch={onCancelSearch}\n            onChange={onChangeSearchBar}\n            placeholder=\"Search by name or symbol\"\n            searchIcon={<div />}\n            value={filterValue}\n          />\n          <Spacer />\n          <Divider />\n          <Spacer />\n          <Button\n            classes={{ label: classes.addBtnLabel }}\n            className={classes.add}\n            color=\"primary\"\n            disabled\n            onClick={switchToAddCustomAssetScreen}\n            size=\"small\"\n            testId={ADD_CUSTOM_ASSET_BUTTON_TEST_ID}\n            variant=\"contained\"\n          >\n            + Add custom asset\n          </Button>\n        </Row>\n        <Hairline />\n      </Block>\n      {!nftAssetsList?.length && (\n        <Block className={classes.progressContainer} justify=\"center\">\n          {!nftAssetsList ? <CircularProgress /> : <Paragraph>No collectibles available</Paragraph>}\n        </Block>\n      )}\n      {nftAssetsFilteredList.length > 0 && (\n        <MuiList className={classes.list}>\n          <FixedSizeList\n            height={413}\n            itemCount={nftAssetsFilteredList.length}\n            itemData={itemData}\n            itemKey={getItemKey}\n            itemSize={51}\n            overscanCount={process.env.NODE_ENV === 'test' ? 100 : 10}\n            width={500}\n          >\n            {AssetRow}\n          </FixedSizeList>\n        </MuiList>\n      )}\n    </>\n  )\n}\n\nexport default AssetsList\n","import ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Switch from '@material-ui/core/Switch'\nimport React, { CSSProperties, memo, ReactElement } from 'react'\n\nimport { useStyles } from './style'\nimport Img from 'src/components/layout/Img'\nimport { getNetworkInfo } from 'src/config'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { ItemData } from 'src/routes/safe/components/Balances/Tokens/screens/TokenList/index'\n\nexport const TOGGLE_TOKEN_TEST_ID = 'toggle-token-btn'\n\ninterface TokenRowProps {\n  data: ItemData\n  index: number\n  style: CSSProperties\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst TokenRow = memo(({ data, index, style }: TokenRowProps): ReactElement | null => {\n  const classes = useStyles()\n  const { activeTokensAddresses, onSwitch, tokens } = data\n  const token = tokens.get(index)\n\n  if (!token) {\n    return null\n  }\n\n  const isActive = activeTokensAddresses.has(token.address)\n\n  return (\n    <div style={style}>\n      <ListItem classes={{ root: classes.tokenRoot }} className={classes.token}>\n        <ListItemIcon className={classes.tokenIcon}>\n          <Img alt={token.name} height={28} onError={setImageToPlaceholder} src={token.logoUri} />\n        </ListItemIcon>\n        <ListItemText primary={token.symbol} secondary={token.name} />\n        {token.address !== nativeCoin.address && (\n          <ListItemSecondaryAction data-testid={`${token.symbol}_${TOGGLE_TOKEN_TEST_ID}`}>\n            <Switch checked={isActive} onChange={onSwitch(token)} />\n          </ListItemSecondaryAction>\n        )}\n      </ListItem>\n    </div>\n  )\n})\n\nTokenRow.displayName = 'TokenRow'\n\nexport default TokenRow\n","import { Set } from 'immutable'\nimport updateTokensList from './updateTokensList'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nconst updateBlacklistedTokens = (safeAddress: string, blacklistedTokens: Set<string>) => (dispatch: Dispatch): void => {\n  dispatch(updateTokensList({ safeAddress, blacklistedTokens }))\n}\n\nexport default updateBlacklistedTokens\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport MuiList from '@material-ui/core/List'\nimport Search from '@material-ui/icons/Search'\nimport cn from 'classnames'\nimport { List, Set } from 'immutable'\nimport SearchBar from 'material-ui-search-bar'\nimport React, { useState } from 'react'\nimport { FixedSizeList } from 'react-window'\n\nimport TokenRow from './TokenRow'\nimport { useStyles } from './style'\n\nimport Spacer from 'src/components/Spacer'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Divider from 'src/components/layout/Divider'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { useDispatch } from 'react-redux'\nimport updateBlacklistedTokens from 'src/logic/safe/store/actions/updateBlacklistedTokens'\nimport updateActiveTokens from 'src/logic/safe/store/actions/updateActiveTokens'\n\nexport const ADD_CUSTOM_TOKEN_BUTTON_TEST_ID = 'add-custom-token-btn'\n\nconst filterBy = (filter: string, tokens: List<Token>): List<Token> =>\n  tokens.filter(\n    (token) =>\n      !filter ||\n      token.symbol.toLowerCase().includes(filter.toLowerCase()) ||\n      token.name.toLowerCase().includes(filter.toLowerCase()),\n  )\n\ntype Props = {\n  setActiveScreen: (newScreen: string) => void\n  tokens: List<Token>\n  activeTokens: List<Token>\n  blacklistedTokens: Set<string>\n  safeAddress: string\n}\n\nexport type ItemData = {\n  tokens: List<Token>\n  activeTokensAddresses: Set<string>\n  onSwitch: (token: Token) => () => void\n}\n\nexport const TokenList = (props: Props): React.ReactElement => {\n  const classes = useStyles()\n  const { setActiveScreen, tokens, activeTokens, blacklistedTokens, safeAddress } = props\n  const [activeTokensAddresses, setActiveTokensAddresses] = useState(Set(activeTokens.map(({ address }) => address)))\n  const [blacklistedTokensAddresses, setBlacklistedTokensAddresses] = useState<Set<string>>(blacklistedTokens)\n  const [filter, setFilter] = useState('')\n  const dispatch = useDispatch()\n\n  const searchClasses = {\n    input: classes.searchInput,\n    root: classes.searchRoot,\n    iconButton: classes.searchIcon,\n    searchContainer: classes.searchContainer,\n  }\n\n  const onCancelSearch = () => {\n    setFilter('')\n  }\n\n  const onChangeSearchBar = (value: string) => {\n    setFilter(value)\n  }\n\n  const onSwitch = (token: Token) => () => {\n    let newActiveTokensAddresses\n    let newBlacklistedTokensAddresses\n    if (activeTokensAddresses.has(token.address)) {\n      newActiveTokensAddresses = activeTokensAddresses.delete(token.address)\n      newBlacklistedTokensAddresses = blacklistedTokensAddresses.add(token.address)\n    } else {\n      newActiveTokensAddresses = activeTokensAddresses.add(token.address)\n      newBlacklistedTokensAddresses = blacklistedTokensAddresses.delete(token.address)\n    }\n\n    // Set local state\n    setActiveTokensAddresses(newActiveTokensAddresses)\n    setBlacklistedTokensAddresses(newBlacklistedTokensAddresses)\n    // Dispatch to global state\n    dispatch(updateActiveTokens(safeAddress, newActiveTokensAddresses))\n    dispatch(updateBlacklistedTokens(safeAddress, newBlacklistedTokensAddresses))\n  }\n\n  const createItemData = (tokens: List<Token>, activeTokensAddresses: Set<string>): ItemData => ({\n    tokens,\n    activeTokensAddresses,\n    onSwitch,\n  })\n\n  const switchToAddCustomTokenScreen = () => setActiveScreen('addCustomToken')\n\n  const getItemKey = (index: number, { tokens }): string => {\n    return tokens.get(index).address\n  }\n\n  const filteredTokens = filterBy(filter, tokens)\n  const itemData = createItemData(filteredTokens, activeTokensAddresses)\n\n  return (\n    <>\n      <Block className={classes.root}>\n        <Row align=\"center\" className={cn(classes.padding, classes.actions)}>\n          <Search className={classes.search} />\n          <SearchBar\n            classes={searchClasses}\n            onCancelSearch={onCancelSearch}\n            onChange={onChangeSearchBar}\n            placeholder=\"Search by name or symbol\"\n            searchIcon={<div />}\n            value={filter}\n          />\n          <Spacer />\n          <Divider />\n          <Spacer />\n          <Button\n            classes={{ label: classes.addBtnLabel }}\n            className={classes.add}\n            color=\"primary\"\n            onClick={switchToAddCustomTokenScreen}\n            size=\"small\"\n            testId={ADD_CUSTOM_TOKEN_BUTTON_TEST_ID}\n            variant=\"contained\"\n          >\n            + Add custom token\n          </Button>\n        </Row>\n        <Hairline />\n      </Block>\n      {!tokens.size && (\n        <Block className={classes.progressContainer} justify=\"center\">\n          <CircularProgress />\n        </Block>\n      )}\n      {tokens.size > 0 && (\n        <MuiList className={classes.list}>\n          <FixedSizeList\n            height={413}\n            itemCount={filteredTokens.size}\n            itemData={itemData}\n            itemKey={getItemKey}\n            itemSize={51}\n            overscanCount={process.env.NODE_ENV === 'test' ? 100 : 10}\n            width={500}\n          >\n            {TokenRow}\n          </FixedSizeList>\n        </MuiList>\n      )}\n    </>\n  )\n}\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\n\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\n\nimport { orderedTokenListSelector } from 'src/logic/tokens/store/selectors'\nimport AddCustomAssetComponent from 'src/routes/safe/components/Balances/Tokens/screens/AddCustomAsset'\nimport AddCustomToken from 'src/routes/safe/components/Balances/Tokens/screens/AddCustomToken'\nimport AssetsList from 'src/routes/safe/components/Balances/Tokens/screens/AssetsList'\n\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\nimport { safeBlacklistedTokensSelector } from 'src/logic/safe/store/selectors'\nimport { TokenList } from 'src/routes/safe/components/Balances/Tokens/screens/TokenList'\n\nexport const MANAGE_TOKENS_MODAL_CLOSE_BUTTON_TEST_ID = 'manage-tokens-close-modal-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  safeAddress: string\n  modalScreen: string\n  onClose: () => void\n}\n\nconst Tokens = (props: Props): React.ReactElement => {\n  const { modalScreen, onClose, safeAddress } = props\n  const tokens = useSelector(orderedTokenListSelector)\n  const activeTokens = useSelector(extendedSafeTokensSelector)\n  const blacklistedTokens = useSelector(safeBlacklistedTokensSelector)\n  const classes = useStyles()\n  const [activeScreen, setActiveScreen] = useState(modalScreen)\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\" weight=\"bolder\">\n          Manage List\n        </Paragraph>\n        <IconButton data-testid={MANAGE_TOKENS_MODAL_CLOSE_BUTTON_TEST_ID} disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      {activeScreen === 'tokenList' && (\n        <TokenList\n          activeTokens={activeTokens}\n          blacklistedTokens={blacklistedTokens}\n          safeAddress={safeAddress}\n          setActiveScreen={setActiveScreen}\n          tokens={tokens}\n        />\n      )}\n      {activeScreen === 'assetsList' && <AssetsList setActiveScreen={setActiveScreen} />}\n      {activeScreen === 'addCustomToken' && (\n        <AddCustomToken\n          activeTokens={activeTokens}\n          onClose={onClose}\n          parentList={'tokenList'}\n          safeAddress={safeAddress}\n          setActiveScreen={setActiveScreen}\n          tokens={tokens}\n        />\n      )}\n      {activeScreen === 'addCustomAsset' && (\n        <AddCustomAssetComponent onClose={onClose} parentList={'assetsList'} setActiveScreen={setActiveScreen} />\n      )}\n    </>\n  )\n}\n\nexport default Tokens\n","import { md, screenSm, secondary, xs } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  controls: {\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    justifyContent: 'space-between',\n    padding: `${md} 0`,\n  },\n  assetTabs: {\n    alignItems: 'center',\n    display: 'flex',\n    order: 2,\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      order: '1',\n    },\n  },\n  assetDivider: {\n    borderRightColor: `${secondary} !important`,\n    height: '18px !important',\n  },\n  assetTab: {\n    color: '#686868',\n    margin: '2px 0',\n    padding: '0 10px',\n    textDecoration: 'underline',\n\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  assetTabActive: {\n    color: secondary,\n    fontWeight: 'bold',\n    margin: '2px 0',\n    padding: '0 10px',\n    textDecoration: 'none',\n  },\n  tokenControls: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    order: 1,\n    padding: '0 0 10px',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      justifyContent: 'flex-end',\n      order: '2',\n      padding: '0',\n    },\n  },\n  manageTokensButton: {\n    marginLeft: 'auto',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      marginLeft: '0',\n    },\n  },\n  receiveModal: {\n    height: 'auto',\n    maxWidth: 'calc(100% - 30px)',\n    minHeight: '544px',\n    overflow: 'hidden',\n  },\n  send: {\n    width: '75px',\n    minWidth: '75px',\n    borderRadius: xs,\n    '& > span': {\n      fontSize: '14px',\n    },\n  },\n})\n","import InputBase from '@material-ui/core/InputBase'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport classNames from 'classnames'\nimport 'currency-flags/dist/currency-flags.min.css'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CheckIcon from './img/check.svg'\n\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\nimport { AVAILABLE_CURRENCIES } from 'src/logic/currencyValues/store/model/currencyValues'\nimport { currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\nimport { safeParamAddressFromStateSelector } from 'src/logic/safe/store/selectors'\nimport { DropdownListTheme } from 'src/theme/mui'\nimport { setImageToPlaceholder } from '../Balances/utils'\nimport Img from 'src/components/layout/Img/index'\nimport { getNetworkInfo } from 'src/config'\nimport { sameString } from 'src/utils/strings'\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst CurrencyDropdown = (): React.ReactElement | null => {\n  const safeAddress = useSelector(safeParamAddressFromStateSelector) as string\n  const dispatch = useDispatch()\n  const [anchorEl, setAnchorEl] = useState(null)\n  const selectedCurrency = useSelector(currentCurrencySelector)\n  const [searchParams, setSearchParams] = useState('')\n\n  const currenciesList = Object.values(AVAILABLE_CURRENCIES)\n  const tokenImage = nativeCoin.logoUri\n  const classes = useDropdownStyles()\n  const currenciesListFiltered = currenciesList.filter((currency) =>\n    currency.toLowerCase().includes(searchParams.toLowerCase()),\n  )\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const onCurrentCurrencyChangedHandler = (newCurrencySelectedName) => {\n    dispatch(setSelectedCurrency(safeAddress, newCurrencySelectedName))\n    handleClose()\n  }\n\n  if (!selectedCurrency) {\n    return null\n  }\n\n  return (\n    <MuiThemeProvider theme={DropdownListTheme}>\n      <>\n        <button className={classes.button} onClick={handleClick} type=\"button\">\n          <span className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}>\n            {selectedCurrency}\n          </span>\n        </button>\n        <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            horizontal: 'center',\n            vertical: 'bottom',\n          }}\n          elevation={0}\n          getContentAnchorEl={null}\n          id=\"customizedMenu\"\n          keepMounted\n          onClose={handleClose}\n          open={Boolean(anchorEl)}\n          transformOrigin={{\n            horizontal: 'center',\n            vertical: 'top',\n          }}\n        >\n          <MenuItem className={classes.listItemSearch} key=\"0\">\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(event) => setSearchParams(event.target.value)}\n                placeholder=\"Search…\"\n                value={searchParams}\n              />\n            </div>\n          </MenuItem>\n          <div className={classes.dropdownItemsScrollWrapper}>\n            {currenciesListFiltered.map((currencyName) => (\n              <MenuItem\n                className={classes.listItem}\n                key={currencyName}\n                onClick={() => onCurrentCurrencyChangedHandler(currencyName)}\n                value={currencyName}\n              >\n                <ListItemIcon className={classes.iconLeft}>\n                  {sameString(currencyName, nativeCoin.symbol) ? (\n                    <Img\n                      alt={nativeCoin.symbol.toLocaleLowerCase()}\n                      onError={setImageToPlaceholder}\n                      src={tokenImage}\n                      className={classNames(classes.etherFlag)}\n                    />\n                  ) : (\n                    <div\n                      className={classNames(\n                        classes.localFlag,\n                        'currency-flag',\n                        'currency-flag-lg',\n                        `currency-flag-${currencyName.toLowerCase()}`,\n                      )}\n                    />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={currencyName} />\n                {currencyName === selectedCurrency ? (\n                  <ListItemIcon className={classes.iconRight}>\n                    <img alt=\"checked\" src={CheckIcon} />\n                  </ListItemIcon>\n                ) : null}\n              </MenuItem>\n            ))}\n          </div>\n        </Menu>\n      </>\n    </MuiThemeProvider>\n  )\n}\n\nexport default CurrencyDropdown\n","import { nftAssetsSelector } from 'src/logic/collectibles/store/selectors'\nimport updateActiveAssets from 'src/logic/safe/store/actions/updateActiveAssets'\nimport {\n  safeActiveAssetsSelectorBySafe,\n  safeBlacklistedAssetsSelectorBySafe,\n  safesMapSelector,\n} from 'src/logic/safe/store/selectors'\n\nconst activateAssetsByBalance = (safeAddress) => async (dispatch, getState) => {\n  try {\n    const state = getState()\n    const safes = safesMapSelector(state)\n\n    if (safes.size === 0) {\n      return\n    }\n\n    const availableAssets = nftAssetsSelector(state)\n    const alreadyActiveAssets = safeActiveAssetsSelectorBySafe(safeAddress, safes)\n    const blacklistedAssets = safeBlacklistedAssetsSelectorBySafe(safeAddress, safes)\n\n    // active tokens by balance, excluding those already blacklisted and the `null` address\n    const activeByBalance = Object.entries(availableAssets)\n      .filter((asset) => {\n        const { address, numberOfTokens }: any = asset[1]\n        return address !== null && !blacklistedAssets.has(address) && numberOfTokens > 0\n      })\n      .map((asset) => {\n        return asset[0]\n      })\n\n    // need to persist those already active assets, despite its balances\n    const activeAssets = alreadyActiveAssets.union(activeByBalance)\n\n    // update list of active tokens\n    dispatch(updateActiveAssets(safeAddress, activeAssets))\n  } catch (err) {\n    console.error('Error fetching active assets list', err)\n  }\n\n  return null\n}\n\nexport default activateAssetsByBalance\n","import { useMemo } from 'react'\nimport { batch, useDispatch } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\n\nimport { fetchCollectibles } from 'src/logic/collectibles/store/actions/fetchCollectibles'\nimport { fetchSelectedCurrency } from 'src/logic/currencyValues/store/actions/fetchSelectedCurrency'\nimport activateAssetsByBalance from 'src/logic/tokens/store/actions/activateAssetsByBalance'\nimport fetchSafeTokens from 'src/logic/tokens/store/actions/fetchSafeTokens'\nimport { fetchTokens } from 'src/logic/tokens/store/actions/fetchTokens'\nimport { COINS_LOCATION_REGEX, COLLECTIBLES_LOCATION_REGEX } from 'src/routes/safe/components/Balances'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nexport const useFetchTokens = (safeAddress: string): void => {\n  const dispatch = useDispatch<Dispatch>()\n  const location = useLocation()\n\n  useMemo(() => {\n    if (COINS_LOCATION_REGEX.test(location.pathname)) {\n      batch(() => {\n        // fetch tokens there to get symbols for tokens in TXs list\n        dispatch(fetchTokens())\n        dispatch(fetchSelectedCurrency(safeAddress))\n        dispatch(fetchSafeTokens(safeAddress))\n      })\n    }\n\n    if (COLLECTIBLES_LOCATION_REGEX.test(location.pathname)) {\n      batch(() => {\n        dispatch(fetchCollectibles(safeAddress)).then(() => {\n          dispatch(activateAssetsByBalance(safeAddress))\n        })\n      })\n    }\n  }, [dispatch, location.pathname, safeAddress])\n}\n","import { setCurrencyBalances } from 'src/logic/currencyValues/store/actions/setCurrencyBalances'\nimport { setCurrencyRate } from 'src/logic/currencyValues/store/actions/setCurrencyRate'\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\nimport { AVAILABLE_CURRENCIES } from 'src/logic/currencyValues/store/model/currencyValues'\nimport { loadSelectedCurrency } from 'src/logic/currencyValues/store/utils/currencyValuesStorage'\nimport { Dispatch } from 'redux'\n\nexport const fetchSelectedCurrency = (safeAddress: string) => async (\n  dispatch: Dispatch<typeof setCurrencyBalances | typeof setSelectedCurrency | typeof setCurrencyRate>,\n): Promise<void> => {\n  try {\n    const storedSelectedCurrency = await loadSelectedCurrency()\n\n    dispatch(setSelectedCurrency(safeAddress, storedSelectedCurrency || AVAILABLE_CURRENCIES.USD))\n  } catch (err) {\n    console.error('Error fetching currency values', err)\n  }\n  return Promise.resolve()\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ReceiveModal from 'src/components/App/ReceiveModal'\nimport Tokens from './Tokens'\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport ButtonLink from 'src/components/layout/ButtonLink'\nimport Col from 'src/components/layout/Col'\nimport Divider from 'src/components/layout/Divider'\n\nimport Row from 'src/components/layout/Row'\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\nimport CurrencyDropdown from 'src/routes/safe/components/CurrencyDropdown'\nimport {\n  safeFeaturesEnabledSelector,\n  safeNameSelector,\n  safeParamAddressFromStateSelector,\n} from 'src/logic/safe/store/selectors'\n\nimport { wrapInSuspense } from 'src/utils/wrapInSuspense'\nimport { useFetchTokens } from 'src/logic/safe/hooks/useFetchTokens'\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom'\nimport { FEATURES } from 'src/config/networks/network.d'\n\nconst Collectibles = React.lazy(() => import('src/routes/safe/components/Balances/Collectibles'))\nconst Coins = React.lazy(() => import('src/routes/safe/components/Balances/Coins'))\n\nexport const MANAGE_TOKENS_BUTTON_TEST_ID = 'manage-tokens-btn'\nexport const BALANCE_ROW_TEST_ID = 'balance-row'\n\nconst INITIAL_STATE = {\n  erc721Enabled: false,\n  showToken: false,\n  showManageCollectibleModal: false,\n  sendFunds: {\n    isOpen: false,\n    selectedToken: '',\n  },\n  showReceive: false,\n}\n\nexport const COINS_LOCATION_REGEX = /\\/balances\\/?$/\nexport const COLLECTIBLES_LOCATION_REGEX = /\\/balances\\/collectibles$/\n\nconst useStyles = makeStyles(styles)\n\nconst Balances = (): React.ReactElement => {\n  const classes = useStyles()\n  const [state, setState] = useState(INITIAL_STATE)\n\n  const address = useSelector(safeParamAddressFromStateSelector)\n  const featuresEnabled = useSelector(safeFeaturesEnabledSelector)\n  const safeName = useSelector(safeNameSelector) ?? ''\n\n  useFetchTokens(address as string)\n\n  useEffect(() => {\n    const erc721Enabled = Boolean(featuresEnabled?.includes(FEATURES.ERC721))\n\n    setState((prevState) => ({\n      ...prevState,\n      erc721Enabled,\n    }))\n  }, [featuresEnabled])\n\n  const onShow = (action) => {\n    setState((prevState) => ({ ...prevState, [`show${action}`]: true }))\n  }\n\n  const onHide = (action) => {\n    setState((prevState) => ({ ...prevState, [`show${action}`]: false }))\n  }\n\n  const showSendFunds = (tokenAddress: string): void => {\n    setState((prevState) => ({\n      ...prevState,\n      sendFunds: {\n        isOpen: true,\n        selectedToken: tokenAddress,\n      },\n    }))\n  }\n\n  const hideSendFunds = () => {\n    setState((prevState) => ({\n      ...prevState,\n      sendFunds: {\n        isOpen: false,\n        selectedToken: '',\n      },\n    }))\n  }\n\n  const {\n    assetDivider,\n    assetTab,\n    assetTabActive,\n    assetTabs,\n    controls,\n    manageTokensButton,\n    receiveModal,\n    tokenControls,\n  } = classes\n  const { erc721Enabled, sendFunds, showManageCollectibleModal, showReceive, showToken } = state\n\n  return (\n    <>\n      <Row align=\"center\" className={controls}>\n        <Col className={assetTabs} sm={6} start=\"sm\" xs={12}>\n          <NavLink\n            to={`${SAFELIST_ADDRESS}/${address}/balances`}\n            activeClassName={assetTabActive}\n            className={assetTab}\n            data-testid={'coins-assets-btn'}\n            exact\n          >\n            Coins\n          </NavLink>\n          {erc721Enabled ? (\n            <>\n              <Divider className={assetDivider} />\n              <NavLink\n                to={`${SAFELIST_ADDRESS}/${address}/balances/collectibles`}\n                activeClassName={assetTabActive}\n                className={assetTab}\n                data-testid={'collectibles-assets-btn'}\n                exact\n              >\n                Collectibles\n              </NavLink>\n            </>\n          ) : null}\n        </Col>\n        <Switch>\n          <Route\n            path={`${SAFELIST_ADDRESS}/${address}/balances/collectibles`}\n            exact\n            render={() => {\n              return !erc721Enabled ? (\n                <Redirect to={`${SAFELIST_ADDRESS}/${address}/balances`} />\n              ) : (\n                <Col className={tokenControls} end=\"sm\" sm={6} xs={12}>\n                  <ButtonLink\n                    className={manageTokensButton}\n                    onClick={() => onShow('ManageCollectibleModal')}\n                    size=\"lg\"\n                    testId=\"manage-tokens-btn\"\n                  >\n                    Manage List\n                  </ButtonLink>\n                  <Modal\n                    description={'Enable and disable tokens to be listed'}\n                    handleClose={() => onHide('ManageCollectibleModal')}\n                    open={showManageCollectibleModal}\n                    title=\"Manage List\"\n                  >\n                    <Tokens\n                      modalScreen={'assetsList'}\n                      onClose={() => onHide('ManageCollectibleModal')}\n                      safeAddress={address}\n                    />\n                  </Modal>\n                </Col>\n              )\n            }}\n          />\n          <Route\n            path={`${SAFELIST_ADDRESS}/${address}/balances`}\n            exact\n            render={() => {\n              return (\n                <>\n                  <Col className={tokenControls} end=\"sm\" sm={6} xs={12}>\n                    <CurrencyDropdown />\n                    <ButtonLink\n                      className={manageTokensButton}\n                      onClick={() => onShow('Token')}\n                      size=\"lg\"\n                      testId=\"manage-tokens-btn\"\n                    >\n                      Manage List\n                    </ButtonLink>\n                    <Modal\n                      description={'Enable and disable tokens to be listed'}\n                      handleClose={() => onHide('Token')}\n                      open={showToken}\n                      title=\"Manage List\"\n                    >\n                      <Tokens modalScreen={'tokenList'} onClose={() => onHide('Token')} safeAddress={address} />\n                    </Modal>\n                  </Col>\n                </>\n              )\n            }}\n          />\n        </Switch>\n      </Row>\n      <Switch>\n        <Route\n          path={`${SAFELIST_ADDRESS}/${address}/balances/collectibles`}\n          exact\n          render={() => {\n            if (erc721Enabled) {\n              return wrapInSuspense(<Collectibles />)\n            }\n            return null\n          }}\n        />\n        <Route\n          path={`${SAFELIST_ADDRESS}/${address}/balances`}\n          render={() => {\n            return wrapInSuspense(<Coins showReceiveFunds={() => onShow('Receive')} showSendFunds={showSendFunds} />)\n          }}\n        />\n      </Switch>\n      <SendModal\n        activeScreenType=\"sendFunds\"\n        isOpen={sendFunds.isOpen}\n        onClose={hideSendFunds}\n        selectedToken={sendFunds.selectedToken}\n      />\n      <Modal\n        description=\"Receive Tokens Form\"\n        handleClose={() => onHide('Receive')}\n        open={showReceive}\n        paperClassName={receiveModal}\n        title=\"Receive Tokens\"\n      >\n        <ReceiveModal safeAddress={address} safeName={safeName} onClose={() => onHide('Receive')} />\n      </Modal>\n    </>\n  )\n}\n\nexport default Balances\n"],"sourceRoot":""}