{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ReviewTx/style.ts","routes/safe/components/Balances/SendModal/screens/ReviewTx/index.tsx","components/layout/Bold/index.tsx","components/AddressInfo/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/utils/setCollectibleImageToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/screens/assets/arrow-down.svg"],"names":["styles","createStyles","heading","padding","md","lg","justifyContent","boxSizing","maxHeight","annotation","letterSpacing","color","secondaryText","marginRight","marginLeft","headingText","fontSize","closeIcon","height","width","container","amount","sm","address","buttonRow","fontFamily","submitButton","boxShadow","useStyles","makeStyles","nativeCoin","getNetworkInfo","ReviewTx","onClose","onPrev","tx","classes","dispatch","useDispatch","safeAddress","useSelector","safeSelector","tokens","extendedSafeTokensSelector","useState","gasCosts","setGasCosts","data","setData","txToken","useMemo","find","token","isSendingETH","txRecipient","recipientAddress","useEffect","isCurrent","a","txData","EMPTY_DATA","getHumanFriendlyToken","StandardToken","at","tokenInstance","decimals","txAmount","BigNumber","times","toNumber","toString","contract","methods","transfer","encodeABI","estimateTxGasCosts","estimatedGasCosts","fromTokenUnit","formattedGasCosts","formatAmount","estimateGas","submitTx","toTokenUnit","createTransaction","to","valueInWei","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","console","error","Row","align","className","grow","data-testid","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","Block","SafeInfo","margin","Col","xs","alt","src","ArrowDown","style","center","layout","size","Identicon","diameter","justify","CopyBtn","content","explorerUrl","getExplorerInfo","Img","name","onError","setImageToPlaceholder","logoUri","symbol","position","bottom","Button","minWidth","disabled","type","variant","Bold","this","props","children","React","Wrapper","styled","div","StyledBlock","border","AddressInfo","ethBalance","safeName","currentTarget","onerror","TokenPlaceholder","setCollectibleImageToPlaceholder","NFTIcon","module","exports"],"mappings":"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","file":"static/js/42.a61b9b9a.chunk.js","sourcesContent":["import { lg, md, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  container: {\n    padding: `${md} ${lg}`,\n  },\n  amount: {\n    marginLeft: sm,\n  },\n  address: {\n    marginRight: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    '& > button': {\n      fontFamily: 'Averta',\n      fontSize: md,\n    },\n  },\n  submitButton: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginLeft: '15px',\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport { BigNumber } from 'bignumber.js'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toTokenUnit, fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\n\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { getHumanFriendlyToken } from 'src/logic/tokens/store/actions/fetchTokens'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\nimport { sm } from 'src/theme/variables'\n\nimport ArrowDown from '../assets/arrow-down.svg'\n\nimport { styles } from './style'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst useStyles = makeStyles(styles)\n\nconst { nativeCoin } = getNetworkInfo()\n\nexport type ReviewTxProp = {\n  recipientAddress: string\n  amount: string\n  txRecipient: string\n  token: string\n}\n\ntype ReviewTxProps = {\n  onClose: () => void\n  onPrev: () => void\n  tx: ReviewTxProp\n}\n\nconst ReviewTx = ({ onClose, onPrev, tx }: ReviewTxProps): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { address: safeAddress } = useSelector(safeSelector) || {}\n  const tokens = useSelector(extendedSafeTokensSelector)\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  const [data, setData] = useState('')\n\n  const txToken = useMemo(() => tokens.find((token) => token.address === tx.token), [tokens, tx.token])\n  const isSendingETH = txToken?.address === nativeCoin.address\n  const txRecipient = isSendingETH ? tx.recipientAddress : txToken?.address\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const estimateGas = async () => {\n      if (!txToken) {\n        return\n      }\n\n      let txData = EMPTY_DATA\n\n      if (!isSendingETH) {\n        const StandardToken = await getHumanFriendlyToken()\n        const tokenInstance = await StandardToken.at(txToken.address as string)\n        const decimals = await tokenInstance.decimals()\n        const txAmount = new BigNumber(tx.amount).times(10 ** decimals.toNumber()).toString()\n\n        txData = tokenInstance.contract.methods.transfer(tx.recipientAddress, txAmount).encodeABI()\n      }\n\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress as string, txRecipient as string, txData)\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n        setData(txData)\n      }\n    }\n\n    estimateGas()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [isSendingETH, safeAddress, tx.amount, tx.recipientAddress, txRecipient, txToken])\n\n  const submitTx = async () => {\n    // txAmount should be 0 if we send tokens\n    // the real value is encoded in txData and will be used by the contract\n    // if txAmount > 0 it would send ETH from the Safe\n    const txAmount = isSendingETH ? toTokenUnit(tx.amount, nativeCoin.decimals) : '0'\n\n    if (safeAddress) {\n      dispatch(\n        createTransaction({\n          safeAddress: safeAddress,\n          to: txRecipient as string,\n          valueInWei: txAmount,\n          txData: data,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n        }),\n      )\n    } else {\n      console.error('There was an error trying to submit the transaction, the safeAddress was not found')\n    }\n    onClose()\n  }\n\n  return (\n    <>\n      <Row align=\"center\" className={classes.heading} grow data-testid=\"send-funds-review-step\">\n        <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n          Send Funds\n        </Paragraph>\n        <Paragraph className={classes.annotation}>2 of 2</Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.closeIcon} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <SafeInfo />\n        <Row margin=\"md\">\n          <Col xs={1}>\n            <img alt=\"Arrow Down\" src={ArrowDown} style={{ marginLeft: sm }} />\n          </Col>\n          <Col center=\"xs\" layout=\"column\" xs={11}>\n            <Hairline />\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Recipient\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Col xs={1}>\n            <Identicon address={tx.recipientAddress} diameter={32} />\n          </Col>\n          <Col layout=\"column\" xs={11}>\n            <Block justify=\"left\">\n              <Paragraph\n                className={classes.address}\n                noMargin\n                weight=\"bolder\"\n                data-testid=\"recipient-address-review-step\"\n              >\n                {tx.recipientAddress}\n              </Paragraph>\n              <CopyBtn content={tx.recipientAddress} />\n              <ExplorerButton explorerUrl={getExplorerInfo(tx.recipientAddress)} />\n            </Block>\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Amount\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Img alt={txToken?.name as string} height={28} onError={setImageToPlaceholder} src={txToken?.logoUri} />\n          <Paragraph\n            className={classes.amount}\n            noMargin\n            size=\"md\"\n            data-testid={`amount-${txToken?.symbol as string}-review-step`}\n          >\n            {tx.amount} {txToken?.symbol}\n          </Paragraph>\n        </Row>\n        <Row>\n          <Paragraph data-testid=\"fee-meg-review-step\">\n            {`You're about to create a transaction and will have to confirm it with your currently connected wallet. Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n          </Paragraph>\n        </Row>\n      </Block>\n      <Hairline style={{ position: 'absolute', bottom: 85 }} />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minWidth={140} onClick={onPrev}>\n          Back\n        </Button>\n        <Button\n          className={classes.submitButton}\n          color=\"primary\"\n          data-testid=\"submit-tx-btn\"\n          disabled={!data}\n          minWidth={140}\n          onClick={submitTx}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default ReviewTx\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = TokenPlaceholder\n}\n","import { SyntheticEvent } from 'react'\n\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\n\nexport const setCollectibleImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = NFTIcon\n}\n","module.exports = __webpack_public_path__ + \"static/media/token_placeholder.a8034531.svg\";","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport AddressInfo from 'src/components/AddressInfo'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\n\nconst SafeInfo = () => {\n  const { address: safeAddress = '', ethBalance, name: safeName } = useSelector(safeSelector) || {}\n  return <AddressInfo ethBalance={ethBalance} safeAddress={safeAddress} safeName={safeName} />\n}\n\nexport default SafeInfo\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";"],"sourceRoot":""}