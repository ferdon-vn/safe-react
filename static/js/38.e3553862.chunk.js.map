{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review/index.tsx","components/layout/Bold/index.tsx","components/AddressInfo/index.tsx","routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/utils/setCollectibleImageToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","routes/safe/components/Balances/SendModal/screens/ContractInteraction/utils/index.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/style.ts","../node_modules/final-form-calculate/dist/final-form-calculate.es.js","routes/safe/components/Balances/SendModal/screens/ContractInteraction/Header/index.tsx"],"names":["useStyles","makeStyles","styles","nativeCoin","getNetworkInfo","ContractInteractionReview","onClose","onPrev","tx","classes","dispatch","useDispatch","safeAddress","useSelector","safeSelector","address","useState","gasCosts","setGasCosts","useEffect","isCurrent","a","txData","data","trim","estimateTxGasCosts","contractAddress","estimatedGasCosts","fromTokenUnit","decimals","formattedGasCosts","formatAmount","estimateGas","submitTx","txRecipient","txValue","value","toTokenUnit","createTransaction","to","valueInWei","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","console","error","subTitle","title","className","formContainer","margin","color","noMargin","size","style","letterSpacing","align","xs","alt","height","onError","setImageToPlaceholder","src","getEthAsToken","logoUri","layout","justify","name","selectedMethod","inputs","map","index","type","key","generateFormFieldKey","signatureHash","getValueFromTxInputs","Fragment","outerData","buttonRow","minWidth","onClick","submitButton","data-testid","variant","Bold","this","props","children","React","Wrapper","styled","div","StyledBlock","Block","border","AddressInfo","ethBalance","safeName","diameter","weight","content","explorerUrl","getExplorerInfo","symbol","currentTarget","onerror","TokenPlaceholder","setCollectibleImageToPlaceholder","NFTIcon","module","exports","NO_CONTRACT","ensResolver","createDecorator","field","updates","isValidEnsName","getAddressFromENS","resolvedAddress","message","formMutators","setMax","args","state","utils","changeValue","setContractAddress","setSelectedMethod","lastFormState","values","setCallResults","setAbiValue","isAddress","indexOf","isBoolean","isUint","isInt","isByte","isArrayParameter","parameter","test","handleSubmitError","hasOwnProperty","reason","FORM_ERROR","keyType","createTxObject","method","contract","getWeb3","eth","Contract","JSON","parse","extractMethodArgs","methods","isReadMethod","action","replace","String","createStyles","heading","padding","md","lg","justifyContent","boxSizing","maxHeight","annotation","secondaryText","marginRight","marginLeft","headingText","fontSize","closeIcon","width","qrCodeBtn","cursor","wordBreak","sm","borderRadius","minHeight","overflow","fontFamily","fontStretch","lineHeight","boxShadow","dataInput","selectAddress","fullWidth","isPromise","obj","then","tripleEquals","b","_len","arguments","length","calculations","Array","_key","form","previousValues","subscribe","_ref","batch","runUpdates","isEqual","next","getIn","previous","results","resolved","Object","keys","forEach","destField","change","result","update","fields","getRegisteredFields","_ref2","matches","isArray","findIndex","f","RegExp","fieldName","Header","grow","disableRipple"],"mappings":"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","file":"static/js/38.e3553862.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { getNetworkInfo } from 'src/config'\nimport { fromTokenUnit, toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport AddressInfo from 'src/components/AddressInfo'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { estimateTxGasCosts } from 'src/logic/safe/transactions/gas'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { getEthAsToken } from 'src/logic/tokens/utils/tokenHelpers'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\nimport Header from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/Header'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport { safeSelector } from 'src/logic/safe/store/selectors'\nimport { generateFormFieldKey, getValueFromTxInputs } from '../utils'\n\nconst useStyles = makeStyles(styles)\n\nexport type TransactionReviewType = {\n  abi?: string\n  contractAddress?: string\n  data?: string\n  value?: string\n  selectedMethod?: AbiItemExtended\n}\n\ntype Props = {\n  onClose: () => void\n  onPrev: () => void\n  tx: TransactionReviewType\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ContractInteractionReview = ({ onClose, onPrev, tx }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { address: safeAddress } = useSelector(safeSelector) || {}\n  const [gasCosts, setGasCosts] = useState('< 0.001')\n  useEffect(() => {\n    let isCurrent = true\n\n    const estimateGas = async (): Promise<void> => {\n      const txData = tx.data ? tx.data.trim() : ''\n\n      const estimatedGasCosts = await estimateTxGasCosts(safeAddress as string, tx.contractAddress as string, txData)\n      const gasCosts = fromTokenUnit(estimatedGasCosts, nativeCoin.decimals)\n      const formattedGasCosts = formatAmount(gasCosts)\n\n      if (isCurrent) {\n        setGasCosts(formattedGasCosts)\n      }\n    }\n\n    estimateGas()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, tx.contractAddress, tx.data])\n\n  const submitTx = async () => {\n    const txRecipient = tx.contractAddress\n    const txData = tx.data ? tx.data.trim() : ''\n    const txValue = tx.value ? toTokenUnit(tx.value, nativeCoin.decimals) : '0'\n    if (safeAddress) {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: txRecipient as string,\n          valueInWei: txValue,\n          txData,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n        }),\n      )\n    } else {\n      console.error('There was an error trying to submit the transaction, the safeAddress was not found')\n    }\n    onClose()\n  }\n\n  return (\n    <>\n      <Header onClose={onClose} subTitle=\"2 of 2\" title=\"Contract Interaction\" />\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Contract Address\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <AddressInfo safeAddress={tx.contractAddress as string} />\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Value\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Col xs={1}>\n            <Img alt=\"Ether\" height={28} onError={setImageToPlaceholder} src={getEthAsToken('0').logoUri} />\n          </Col>\n          <Col layout=\"column\" xs={11}>\n            <Block justify=\"left\">\n              <Paragraph className={classes.value} noMargin size=\"md\" style={{ margin: 0 }}>\n                {tx.value || 0}\n                {' ' + nativeCoin.name}\n              </Paragraph>\n            </Block>\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Method\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Paragraph className={classes.value} size=\"md\" style={{ margin: 0 }}>\n            {tx.selectedMethod?.name}\n          </Paragraph>\n        </Row>\n        {tx.selectedMethod?.inputs?.map(({ name, type }, index) => {\n          const key = generateFormFieldKey(type, tx.selectedMethod?.signatureHash || '', index)\n          const value: string = getValueFromTxInputs(key, type, tx)\n\n          return (\n            <React.Fragment key={key}>\n              <Row margin=\"xs\">\n                <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n                  {name} ({type})\n                </Paragraph>\n              </Row>\n              <Row align=\"center\" margin=\"md\">\n                <Paragraph className={classes.value} noMargin size=\"md\" style={{ margin: 0 }}>\n                  {value}\n                </Paragraph>\n              </Row>\n            </React.Fragment>\n          )\n        })}\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"md\" style={{ letterSpacing: '-0.5px' }}>\n            Data (hex encoded)\n          </Paragraph>\n        </Row>\n        <Row align=\"center\" margin=\"md\">\n          <Col className={classes.outerData}>\n            <Row className={classes.data} size=\"md\">\n              {tx.data}\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          <Paragraph>\n            {`You're about to create a transaction and will have to confirm it with your currently connected wallet. Make sure you have ${gasCosts} (fee price) ${nativeCoin.name} in this wallet to fund this confirmation.`}\n          </Paragraph>\n        </Row>\n      </Block>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button minWidth={140} onClick={onPrev}>\n          Back\n        </Button>\n        <Button\n          className={classes.submitButton}\n          color=\"primary\"\n          data-testid=\"submit-tx-btn\"\n          minWidth={140}\n          onClick={submitTx}\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nexport default ContractInteractionReview\n","import * as React from 'react'\n\nclass Bold extends React.PureComponent<any> {\n  render() {\n    const { children, ...props } = this.props\n\n    return <b {...props}>{children}</b>\n  }\n}\n\nexport default Bold\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = TokenPlaceholder\n}\n","import { SyntheticEvent } from 'react'\n\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\n\nexport const setCollectibleImageToPlaceholder = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = NFTIcon\n}\n","module.exports = __webpack_public_path__ + \"static/media/token_placeholder.a8034531.svg\";","import { FORM_ERROR, Mutator, SubmissionErrors } from 'final-form'\nimport createDecorator from 'final-form-calculate'\nimport { ContractSendMethod } from 'web3-eth-contract'\n\nimport { AbiItemExtended } from 'src/logic/contractInteraction/sources/ABIService'\nimport { getAddressFromENS, getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { TransactionReviewType } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/Review'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\n\nexport const NO_CONTRACT = 'no contract'\n\nexport const ensResolver = createDecorator({\n  field: 'contractAddress',\n  updates: {\n    contractAddress: async (contractAddress) => {\n      try {\n        const resolvedAddress = isValidEnsName(contractAddress) && (await getAddressFromENS(contractAddress))\n\n        if (resolvedAddress) {\n          return resolvedAddress\n        }\n\n        return contractAddress\n      } catch (e) {\n        console.error(e.message)\n        return contractAddress\n      }\n    },\n  },\n})\n\nexport const formMutators: Record<string, Mutator<{ selectedMethod: { name: string } }>> = {\n  setMax: (args, state, utils) => {\n    utils.changeValue(state, 'value', () => args[0])\n  },\n  setContractAddress: (args, state, utils) => {\n    utils.changeValue(state, 'contractAddress', () => args[0])\n  },\n  setSelectedMethod: (args, state, utils) => {\n    const modified =\n      state.lastFormState?.values.selectedMethod && state.lastFormState.values.selectedMethod.name !== args[0].name\n\n    if (modified) {\n      utils.changeValue(state, 'callResults', () => '')\n      utils.changeValue(state, 'value', () => '')\n    }\n\n    utils.changeValue(state, 'selectedMethod', () => args[0])\n  },\n  setCallResults: (args, state, utils) => {\n    utils.changeValue(state, 'callResults', () => args[0])\n  },\n  setAbiValue: (args, state, utils) => {\n    utils.changeValue(state, 'abi', () => args[0])\n  },\n}\n\nexport const isAddress = (type: string): boolean => type.indexOf('address') === 0\nexport const isBoolean = (type: string): boolean => type.indexOf('bool') === 0\nexport const isString = (type: string): boolean => type.indexOf('string') === 0\nexport const isUint = (type: string): boolean => type.indexOf('uint') === 0\nexport const isInt = (type: string): boolean => type.indexOf('int') === 0\nexport const isByte = (type: string): boolean => type.indexOf('byte') === 0\n\nexport const isArrayParameter = (parameter: string): boolean => /(\\[\\d*])+$/.test(parameter)\n\nexport const handleSubmitError = (error: SubmissionErrors, values: Record<string, string>): Record<string, string> => {\n  for (const key in values) {\n    if (values.hasOwnProperty(key) && values[key] === error.value) {\n      return { [key]: error.reason }\n    }\n  }\n\n  // .call() failed and we're logging a generic error\n  return { [FORM_ERROR]: error.message }\n}\n\nexport const generateFormFieldKey = (type: string, signatureHash: string, index: number): string => {\n  const keyType = isArrayParameter(type) ? 'arrayParam' : type\n  return `methodInput-${signatureHash}_${index}_${keyType}`\n}\n\nconst extractMethodArgs = (signatureHash: string, values: Record<string, string>) => ({ type }, index) => {\n  const key = generateFormFieldKey(type, signatureHash, index)\n\n  if (isArrayParameter(type)) {\n    return JSON.parse(values[key])\n  }\n\n  return values[key]\n}\n\nexport const createTxObject = (\n  method: AbiItemExtended,\n  contractAddress: string,\n  values: Record<string, string>,\n): ContractSendMethod => {\n  const web3 = getWeb3()\n  const contract: any = new web3.eth.Contract([method], contractAddress)\n  const { inputs, name = '', signatureHash } = method\n  const args = inputs?.map(extractMethodArgs(signatureHash, values)) || []\n\n  return contract.methods[name](...args)\n}\n\nexport const isReadMethod = (method: AbiItemExtended): boolean => method && method.action === 'read'\n\nexport const getValueFromTxInputs = (key: string, type: string, tx: TransactionReviewType): string => {\n  if (isArrayParameter(type)) {\n    key = key.replace('[]', '')\n  }\n\n  let value = tx[key]\n\n  if (type === 'bool') {\n    value = String(value)\n  }\n\n  return value\n}\n","import { lg, md, secondaryText, sm, border } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: `${md} ${lg}`,\n    justifyContent: 'flex-start',\n    boxSizing: 'border-box',\n    maxHeight: '75px',\n  },\n  annotation: {\n    letterSpacing: '-1px',\n    color: secondaryText,\n    marginRight: 'auto',\n    marginLeft: '20px',\n  },\n  headingText: {\n    fontSize: lg,\n  },\n  closeIcon: {\n    height: '35px',\n    width: '35px',\n  },\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    wordBreak: 'break-word',\n  },\n  value: {\n    marginLeft: sm,\n  },\n  outerData: {\n    borderRadius: '5px',\n    border: `1px solid ${border}`,\n    padding: '11px',\n    minHeight: '21px',\n  },\n  data: {\n    wordBreak: 'break-all',\n    overflow: 'auto',\n    fontSize: '14px',\n    fontFamily: 'Averta',\n    maxHeight: '100px',\n    letterSpacing: 'normal',\n    fontStretch: 'normal',\n    lineHeight: '1.43',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    '& > button': {\n      fontFamily: 'Averta',\n      fontSize: md,\n    },\n  },\n  submitButton: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginLeft: '15px',\n  },\n  dataInput: {\n    '& TextField-root-294': {\n      lineHeight: 'auto',\n      border: 'green',\n    },\n  },\n  selectAddress: {\n    cursor: 'pointer',\n  },\n  fullWidth: {\n    justifyContent: 'space-between',\n  },\n})\n","import { getIn } from 'final-form';\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\n//      \n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar createDecorator = function createDecorator() {\n  for (var _len = arguments.length, calculations = new Array(_len), _key = 0; _key < _len; _key++) {\n    calculations[_key] = arguments[_key];\n  }\n\n  return function (form) {\n    var previousValues = {};\n    var unsubscribe = form.subscribe(function (_ref) {\n      var values = _ref.values;\n      form.batch(function () {\n        var runUpdates = function runUpdates(field, isEqual, updates) {\n          var next = values && getIn(values, field);\n          var previous = previousValues && getIn(previousValues, field);\n\n          if (!isEqual(next, previous)) {\n            if (typeof updates === 'function') {\n              var results = updates(next, field, values, previousValues);\n\n              if (isPromise(results)) {\n                results.then(function (resolved) {\n                  Object.keys(resolved).forEach(function (destField) {\n                    form.change(destField, resolved[destField]);\n                  });\n                });\n              } else {\n                Object.keys(results).forEach(function (destField) {\n                  form.change(destField, results[destField]);\n                });\n              }\n            } else {\n              Object.keys(updates).forEach(function (destField) {\n                var update = updates[destField];\n                var result = update(next, values, previousValues);\n\n                if (isPromise(result)) {\n                  result.then(function (resolved) {\n                    form.change(destField, resolved);\n                  });\n                } else {\n                  form.change(destField, result);\n                }\n              });\n            }\n          }\n        };\n\n        var fields = form.getRegisteredFields();\n        calculations.forEach(function (_ref2) {\n          var field = _ref2.field,\n              isEqual = _ref2.isEqual,\n              updates = _ref2.updates;\n\n          if (typeof field === 'string') {\n            runUpdates(field, isEqual || tripleEquals, updates);\n          } else {\n            // field is a either array or regex\n            var matches = Array.isArray(field) ? function (name) {\n              return ~field.indexOf(name) || field.findIndex(function (f) {\n                return f instanceof RegExp && f.test(name);\n              }) !== -1;\n            } : function (name) {\n              return field.test(name);\n            };\n            fields.forEach(function (fieldName) {\n              if (matches(fieldName)) {\n                runUpdates(fieldName, isEqual || tripleEquals, updates);\n              }\n            });\n          }\n        });\n        previousValues = values;\n      });\n    }, {\n      values: true\n    });\n    return unsubscribe;\n  };\n};\n\n//\n\nexport default createDecorator;\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport React from 'react'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { styles } from 'src/routes/safe/components/Balances/SendModal/screens/ContractInteraction/style'\n\nconst useStyles = makeStyles(styles)\n\ninterface HeaderProps {\n  onClose: () => void\n  subTitle: string\n  title: string\n}\n\nconst Header = ({ onClose, subTitle, title }: HeaderProps) => {\n  const classes = useStyles()\n\n  return (\n    <Row align=\"center\" className={classes.heading} grow>\n      <Paragraph className={classes.headingText} noMargin weight=\"bolder\">\n        {title}\n      </Paragraph>\n      <Paragraph className={classes.annotation}>{subTitle}</Paragraph>\n      <IconButton disableRipple onClick={onClose}>\n        <Close className={classes.closeIcon} />\n      </IconButton>\n    </Row>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}