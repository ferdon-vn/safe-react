{"version":3,"sources":["components/forms/Field/index.tsx","components/forms/GnoForm/index.tsx","components/AddressInfo/index.tsx","components/DividerLine/index.tsx","components/DividerLine/arrow-down.svg","components/Collapse/index.tsx","routes/safe/components/Apps/AddAppForm/AppAgreement.tsx","utils/url.ts","logic/hooks/useDebounce.tsx","routes/safe/components/Apps/AddAppForm/AppUrl.tsx","routes/safe/components/Apps/AddAppForm/SubmitButtonStatus.tsx","routes/safe/components/Apps/AddAppForm/index.tsx","routes/safe/components/Apps/components/ManageApps.tsx","routes/safe/components/Apps/components/LegalDisclaimer.tsx","routes/safe/components/Apps/components/AppFrame.tsx","routes/safe/components/Apps/hooks/useLegalConsent.ts","components/ListContentLayout/Layout.ts","components/ListContentLayout/style.ts","components/ListContentLayout/List.tsx","components/ListContentLayout/index.ts","routes/safe/components/Apps/hooks/useIframeMessageHandler.ts","components/TextBox/index.tsx","components/ModalTitle/index.tsx","logic/safe/transactions/multisend.ts","routes/safe/components/Apps/components/GasEstimationInfo.tsx","routes/safe/components/Apps/components/ConfirmTransactionModal.tsx","routes/safe/components/Apps/index.tsx","routes/safe/components/Apps/hooks/useAppList.ts"],"names":["GnoField","props","stylesBasedOn","padding","flexDirection","flex","GnoForm","children","decorators","formMutators","initialValues","onSubmit","subscription","testId","validation","mutators","render","handleSubmit","rest","data-testid","style","submitting","validating","form","validate","Wrapper","styled","div","StyledBlock","Block","border","xs","nativeCoin","getNetworkInfo","AddressInfo","ethBalance","safeAddress","safeName","className","address","diameter","noMargin","weight","content","explorerUrl","getExplorerInfo","symbol","md","sm","DividerLine","withArrow","alt","src","ArrowDown","module","exports","HeaderWrapper","TitleWrapper","Header","Collapse","description","title","collapseClassName","headerWrapperClassName","React","useState","open","setOpen","onClick","disableRipple","size","in","timeout","unmountOnExit","StyledCheckbox","Checkbox","AppAgreement","visited","useFormState","agreementAccepted","required","undefined","Field","component","label","name","type","isValidURL","url","protocolsAllowed","urlInfo","URL","includes","protocol","error","useDebouncedCallback","callback","delay","options","useCallback","debounce","validateUrl","appUrlResolver","createDecorator","field","updates","appUrl","a","isValidEnsName","getIpfsLinkFromEns","ensContent","AppInfoUpdater","onAppInfo","debouncedValue","value","previousValue","useRef","current","setCurrent","debouncedCallback","useEffect","cancel","useDebounce","useField","input","updateAppInfo","getAppInfoFromUrl","appInfo","AppUrl","appList","composeValidators","uniqueApp","placeholder","TextField","SubmitButtonStatus","onSubmitButtonStatusChange","valid","fieldsVisited","isAppManifestValid","StyledText","Text","StyledTextFileAppName","AppInfo","INITIAL_VALUES","APP_INFO","id","iconUrl","appsIconSvg","AddApp","closeModal","formId","onAppAdded","setIsSubmitDisabled","setAppInfo","Img","height","readOnly","onChange","ManageApps","onAppToggle","onAppRemoved","isOpen","setIsOpen","isSubmitDisabled","Form","AddAppForm","color","addButtonLabel","showDeleteButton","defaultIconUrl","formBody","isSubmitFormDisabled","itemList","map","checked","disabled","onClose","onItemToggle","itemId","onItemDeleted","onSubmitForm","document","querySelectorAll","dispatchEvent","Event","cancelable","LegalDisclaimer","onCancel","onConfirm","body","href","rel","target","StyledIframe","iframe","LoadingContainer","IframeWrapper","Centered","AppFrame","forwardRef","iframeRef","selectedApp","network","appIsLoading","granted","onIframeLoad","history","useHistory","consentReceived","setConsentReceived","loadFromStorage","checkLegalDisclaimer","onConsentReceipt","saveToStorage","useLegalConsent","frameBorder","ref","onLoad","push","SAFELIST_ADDRESS","Nav","Menu","attrs","Content","Footer","styles","menuOption","alignItems","borderRight","boxSizing","cursor","flexGrow","flexShrink","fontSize","justifyContent","lineHeight","minWidth","width","screenSm","largeFontSize","borderTopLeftRadius","display","marginRight","maxWidth","fill","fontColor","active","backgroundColor","background","secondary","fontWeight","bolderFont","Item","IconImg","img","withStyles","activeItem","classes","items","onItemClick","i","cn","key","ListContentLayout","LayoutComponents","List","NETWORK_NAME","getNetworkName","Box","p","TextBox","StyledParagraph","Paragraph","lg","ModalTitle","multiSendAbi","constant","payable","stateMutability","inputs","outputs","encodeMultiSendCall","txs","web3","getWeb3","multiSend","eth","Contract","MULTI_SEND_ADDRESS","joinedTxs","tx","abi","encodeParameter","slice","to","utils","hexToBytes","data","length","replace","join","methods","encodeABI","Container","imgStyles","GasEstimationInfo","appEstimation","internalEstimation","loading","CheckIcon","AlertIcon","CollapseContent","IconText","StyledTextBox","ConfirmTransactionModal","app","params","onUserConfirm","onTxReject","estimatedSafeTxGas","setEstimatedSafeTxGas","estimatingGas","setEstimatingGas","estimateGas","estimateSafeTxGas","DELEGATE_CALL","safeTxGas","console","dispatch","useDispatch","handleTxRejection","handleUserConfirmation","safeTxHash","confirmTransactions","txData","createTransaction","valueInWei","operation","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","origin","navigateToTransactionsTab","Math","max","areTxsMalformed","some","t","test","mustBeEthereumAddress","isTxValid","index","Heading","tag","getEthAsToken","logoUri","Bold","fromTokenUnit","decimals","footer","cancelText","handleCancel","handleOk","okDisabled","okText","centerCSS","css","StyledCard","Card","CenteredMT","INITIAL_CONFIRM_TX_MODAL_STATE","requestId","Apps","setAppList","loadingAppList","setLoadingAppList","persistedAppList","list","isDeletable","staticAppsList","forEach","staticApp","find","persistedApp","networks","filter","getNetworkId","apps","currentApp","Error","Boolean","sort","b","localeCompare","loadApps","appId","enabled","appListCopy","listToPersist","newAppList","useAppList","setAppIsLoading","selectedAppId","setSelectedAppId","confirmTransactionModal","setConfirmTransactionModal","trackEvent","useAnalytics","useSelector","grantedSelector","safeParamAddressFromStateSelector","safeNameSelector","safeEthBalanceSelector","openConfirmationModal","closeConfirmationModal","useMemo","enabledApps","sendMessageToIframe","useSnackbar","enqueueSnackbar","closeSnackbar","message","requestWithMessage","trunc","window","performance","now","contentWindow","postMessage","handleIframeMessage","messageId","messagePayload","SDK_MESSAGES","SEND_TRANSACTIONS","SEND_TRANSACTIONS_V2","payload","RPC_CALL","web3ReadOnly","currentProvider","send","jsonrpc","method","call","err","res","rpcCallMsg","INTERFACE_MESSAGES","RPC_CALL_RESPONSE","SAFE_APP_SDK_INITIALIZED","safeInfoMessage","ON_SAFE_INFO","toLowerCase","envInfoMessage","ENV_INFO","txServiceUrl","getTxServiceUrl","onIframeMessage","addEventListener","removeEventListener","useIframeMessageHandler","onSelectApp","initialSelect","currentAppWasDisabled","firstEnabledApp","selectFirstEnabledApp","category","SAFE_NAVIGATION_EVENT","action","handleIframeLoad","url1","url2","isSameURL","iconSize","iconType","text","textSize","TRANSACTION_CONFIRMED","TRANSACTION_REJECTED"],"mappings":"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","file":"static/js/39.259631c0.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Field } from 'react-final-form'\n\n// $FlowFixMe\nconst GnoField = ({ ...props }: any) => <Field {...props} />\n\nexport default GnoField\n","import * as React from 'react'\nimport { Form } from 'react-final-form'\n\nconst stylesBasedOn = (padding) => ({\n  padding: `0 ${padding}%`,\n  flexDirection: 'column',\n  flex: '1 0 auto',\n})\n\nconst GnoForm = ({\n  children,\n  decorators,\n  formMutators,\n  initialValues,\n  onSubmit,\n  padding = 0,\n  subscription,\n  testId = '',\n  validation,\n}: any) => (\n  <Form\n    decorators={decorators}\n    initialValues={initialValues}\n    mutators={formMutators}\n    onSubmit={onSubmit}\n    render={({ handleSubmit, ...rest }) => (\n      <form data-testid={testId} onSubmit={handleSubmit} style={stylesBasedOn(padding) as any}>\n        {children(rest.submitting, rest.validating, rest, rest.form.mutators)}\n      </form>\n    )}\n    subscription={subscription}\n    validate={validation}\n  />\n)\n\nexport default GnoForm\n","import React from 'react'\nimport { getExplorerInfo, getNetworkInfo } from 'src/config'\nimport CopyBtn from 'src/components/CopyBtn'\nimport Identicon from 'src/components/Identicon'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { border, xs } from 'src/theme/variables'\nimport styled from 'styled-components'\nimport { ExplorerButton } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .icon-section {\n    margin-right: 10px;\n  }\n\n  .data-section {\n    display: flex;\n    flex-direction: column;\n\n    .address {\n      display: flex;\n    }\n  }\n`\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  border-radius: 3px;\n`\ninterface Props {\n  safeName?: string\n  safeAddress: string\n  ethBalance?: string\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst AddressInfo = ({ ethBalance, safeAddress, safeName }: Props): React.ReactElement => {\n  return (\n    <Wrapper>\n      <div className=\"icon-section\">\n        <Identicon address={safeAddress} diameter={32} />\n      </div>\n      <div className=\"data-section\">\n        {safeName && (\n          <Paragraph noMargin weight=\"bolder\">\n            {safeName}\n          </Paragraph>\n        )}\n        <div className=\"address\">\n          <Paragraph noMargin weight=\"bolder\">\n            {safeAddress}\n          </Paragraph>\n          <CopyBtn content={safeAddress} />\n          <ExplorerButton explorerUrl={getExplorerInfo(safeAddress)} />\n        </div>\n        {ethBalance && (\n          <StyledBlock>\n            <Paragraph noMargin>\n              Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCoin.symbol}`}</Bold>\n            </Paragraph>\n          </StyledBlock>\n        )}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default AddressInfo\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport ArrowDown from './arrow-down.svg'\n\nimport Hairline from 'src/components/layout/Hairline'\nimport { md, sm } from 'src/theme/variables'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: ${md} 0;\n\n  img {\n    margin: 0 ${sm};\n  }\n`\n\ntype Props = {\n  withArrow: boolean\n}\n\nconst DividerLine = ({ withArrow }: Props) => (\n  <Wrapper>\n    {withArrow && <img alt=\"Arrow Down\" src={ArrowDown} />}\n    <Hairline />\n  </Wrapper>\n)\n\nexport default DividerLine\n","module.exports = __webpack_public_path__ + \"static/media/arrow-down.960a6373.svg\";","import CollapseMUI from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div``\n\nconst HeaderWrapper = styled.div``\n\nconst TitleWrapper = styled.div``\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ninterface CollapseProps {\n  title: React.ReactElement | string\n  description?: React.ReactElement | string\n  collapseClassName?: string\n  headerWrapperClassName?: string\n}\n\nconst Collapse: React.FC<CollapseProps> = ({\n  children,\n  description = null,\n  title,\n  collapseClassName,\n  headerWrapperClassName,\n}): React.ReactElement => {\n  const [open, setOpen] = React.useState(false)\n\n  const handleClick = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <Wrapper>\n      <HeaderWrapper className={headerWrapperClassName} onClick={handleClick}>\n        <TitleWrapper>{title}</TitleWrapper>\n        <Header>\n          <IconButton disableRipple size=\"small\">\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </IconButton>\n          {description}\n        </Header>\n      </HeaderWrapper>\n\n      <CollapseMUI in={open} timeout=\"auto\" unmountOnExit className={collapseClassName}>\n        {children}\n      </CollapseMUI>\n    </Wrapper>\n  )\n}\n\nexport default Collapse\n","import { Checkbox, Text } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport { useFormState } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { required } from 'src/components/forms/validator'\nimport Field from 'src/components/forms/Field'\n\nconst StyledCheckbox = styled(Checkbox)`\n  margin: 0;\n`\n\nconst AppAgreement = (): React.ReactElement => {\n  const { visited } = useFormState({ subscription: { visited: true } })\n\n  // trick to prevent having the field validated by default. Not sure why this happens in this form\n  const validate = !visited?.agreementAccepted ? undefined : required\n\n  return (\n    <Field\n      component={StyledCheckbox}\n      label={\n        <Text size=\"xl\">\n          This app is not a Gnosis product and I agree to use this app\n          <br />\n          at my own risk.\n        </Text>\n      }\n      name=\"agreementAccepted\"\n      type=\"checkbox\"\n      validate={validate}\n    />\n  )\n}\n\nexport default AppAgreement\n","export const isValidURL = (url: string, protocolsAllowed = ['https:', 'http:']): boolean => {\n  try {\n    const urlInfo = new URL(url)\n    return protocolsAllowed.includes(urlInfo.protocol)\n  } catch (error) {\n    return false\n  }\n}\n\nexport const isSameURL = (url1: string, url2: string): boolean => {\n  try {\n    const a = new URL(url1)\n    const b = new URL(url2)\n    return a.href === b.href\n  } catch (error) {\n    return false\n  }\n}\n","import debounce from 'lodash.debounce'\nimport { useCallback, useEffect, useState, useRef } from 'react'\n\n/*\n  This code snippet is copied from https://github.com/gnbaron/use-lodash-debounce\n  with the sole intention to be able to tweak it if is needed and prevent from having\n  a new dependency for something relatively trivial\n*/\n\ninterface DebounceOptions {\n  leading: boolean\n  maxWait: number\n  trailing: boolean\n}\n\nexport const useDebouncedCallback = <T extends (...args: unknown[]) => unknown>(\n  callback: T,\n  delay = 0,\n  options?: DebounceOptions,\n): T & { cancel: () => void } => useCallback(debounce(callback, delay, options), [callback, delay, options])\n\nexport const useDebounce = <T extends unknown>(value: T, delay = 0, options?: DebounceOptions): T => {\n  const previousValue = useRef(value)\n  const [current, setCurrent] = useState(value)\n  const debouncedCallback = useDebouncedCallback((value: T) => setCurrent(value), delay, options)\n\n  useEffect(() => {\n    // does trigger the debounce timer initially\n    if (value !== previousValue.current) {\n      debouncedCallback(value)\n      previousValue.current = value\n      // cancel the debounced callback on clean up\n      return debouncedCallback.cancel\n    }\n  }, [debouncedCallback, value])\n\n  return current\n}\n","import { TextField } from '@gnosis.pm/safe-react-components'\nimport createDecorator from 'final-form-calculate'\nimport React from 'react'\nimport { useField, useFormState } from 'react-final-form'\n\nimport { SafeApp } from 'src/routes/safe/components/Apps/types.d'\nimport { getAppInfoFromUrl, getIpfsLinkFromEns, uniqueApp } from 'src/routes/safe/components/Apps/utils'\nimport { composeValidators, required } from 'src/components/forms/validator'\nimport Field from 'src/components/forms/Field'\nimport { isValidURL } from 'src/utils/url'\nimport { isValidEnsName } from 'src/logic/wallets/ethAddresses'\nimport { useDebounce } from 'src/logic/hooks/useDebounce'\n\nconst validateUrl = (url: string): string | undefined => (isValidURL(url) ? undefined : 'Invalid URL')\n\nexport const appUrlResolver = createDecorator({\n  field: 'appUrl',\n  updates: {\n    appUrl: async (appUrl: string): Promise<string | undefined> => {\n      const ensContent = !isValidURL(appUrl) && isValidEnsName(appUrl) && (await getIpfsLinkFromEns(appUrl))\n\n      if (ensContent) {\n        return ensContent\n      }\n\n      return appUrl\n    },\n  },\n})\n\nexport const AppInfoUpdater = ({ onAppInfo }: { onAppInfo: (appInfo: SafeApp) => void }): null => {\n  const {\n    input: { value: appUrl },\n  } = useField('appUrl', { subscription: { value: true } })\n  const debouncedValue = useDebounce(appUrl, 500)\n\n  React.useEffect(() => {\n    const updateAppInfo = async () => {\n      const appInfo = await getAppInfoFromUrl(debouncedValue)\n      onAppInfo({ ...appInfo })\n    }\n\n    if (isValidURL(debouncedValue)) {\n      updateAppInfo()\n    }\n  }, [debouncedValue, onAppInfo])\n\n  return null\n}\n\nconst AppUrl = ({ appList }: { appList: SafeApp[] }): React.ReactElement => {\n  const { visited } = useFormState({ subscription: { visited: true } })\n\n  // trick to prevent having the field validated by default. Not sure why this happens in this form\n  const validate = !visited?.appUrl ? undefined : composeValidators(required, validateUrl, uniqueApp(appList))\n\n  return (\n    <Field label=\"App URL\" name=\"appUrl\" placeholder=\"App URL\" type=\"text\" component={TextField} validate={validate} />\n  )\n}\n\nexport default AppUrl\n","import React from 'react'\nimport { useFormState } from 'react-final-form'\n\nimport { SafeApp } from 'src/routes/safe/components/Apps/types.d'\nimport { isAppManifestValid } from 'src/routes/safe/components/Apps/utils'\n\ninterface SubmitButtonStatusProps {\n  appInfo: SafeApp\n  onSubmitButtonStatusChange: (disabled: boolean) => void\n}\n\nconst SubmitButtonStatus = ({ appInfo, onSubmitButtonStatusChange }: SubmitButtonStatusProps): null => {\n  const { valid, validating, visited } = useFormState({\n    subscription: { valid: true, validating: true, visited: true },\n  })\n\n  React.useEffect(() => {\n    // if non visited, fields were not evaluated yet. Then, the default value is considered invalid\n    const fieldsVisited = visited?.agreementAccepted && visited.appUrl\n\n    onSubmitButtonStatusChange(validating || !valid || !fieldsVisited || !isAppManifestValid(appInfo))\n  }, [validating, valid, visited, onSubmitButtonStatusChange, appInfo])\n\n  return null\n}\n\nexport default SubmitButtonStatus\n","import { Text, TextField } from '@gnosis.pm/safe-react-components'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport AppAgreement from './AppAgreement'\nimport AppUrl, { AppInfoUpdater, appUrlResolver } from './AppUrl'\nimport SubmitButtonStatus from './SubmitButtonStatus'\n\nimport { SafeApp } from 'src/routes/safe/components/Apps/types.d'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport Img from 'src/components/layout/Img'\nimport appsIconSvg from 'src/routes/safe/components/Transactions/TxsTable/TxType/assets/appsIcon.svg'\n\nconst StyledText = styled(Text)`\n  margin-bottom: 19px;\n`\n\nconst StyledTextFileAppName = styled(TextField)`\n  && {\n    width: 335px;\n  }\n`\n\nconst AppInfo = styled.div`\n  margin: 36px 0 24px 0;\n\n  img {\n    margin-right: 10px;\n  }\n`\n\nexport interface AddAppFormValues {\n  appUrl: string\n  agreementAccepted: boolean\n}\n\nconst INITIAL_VALUES: AddAppFormValues = {\n  appUrl: '',\n  agreementAccepted: false,\n}\n\nconst APP_INFO: SafeApp = {\n  id: '',\n  url: '',\n  name: '',\n  iconUrl: appsIconSvg,\n  error: false,\n  description: '',\n}\n\ninterface AddAppProps {\n  appList: SafeApp[]\n  closeModal: () => void\n  formId: string\n  onAppAdded: (app: SafeApp) => void\n  setIsSubmitDisabled: (disabled: boolean) => void\n}\n\nconst AddApp = ({ appList, closeModal, formId, onAppAdded, setIsSubmitDisabled }: AddAppProps): React.ReactElement => {\n  const [appInfo, setAppInfo] = React.useState<SafeApp>(APP_INFO)\n\n  const handleSubmit = () => {\n    closeModal()\n    onAppAdded(appInfo)\n  }\n\n  return (\n    <GnoForm decorators={[appUrlResolver]} initialValues={INITIAL_VALUES} onSubmit={handleSubmit} testId={formId}>\n      {() => (\n        <>\n          <StyledText size=\"xl\">Add custom app</StyledText>\n\n          <AppUrl appList={appList} />\n          {/* Fetch app from url and return a SafeApp */}\n          <AppInfoUpdater onAppInfo={setAppInfo} />\n\n          <AppInfo>\n            <Img alt=\"Token image\" height={55} src={appInfo.iconUrl} />\n            <StyledTextFileAppName label=\"App name\" readOnly value={appInfo.name} onChange={() => {}} />\n          </AppInfo>\n\n          <AppAgreement />\n\n          <SubmitButtonStatus onSubmitButtonStatusChange={setIsSubmitDisabled} appInfo={appInfo} />\n        </>\n      )}\n    </GnoForm>\n  )\n}\n\nexport default AddApp\n","import { ButtonLink, ManageListModal } from '@gnosis.pm/safe-react-components'\nimport React, { useState } from 'react'\n\nimport appsIconSvg from 'src/routes/safe/components/Transactions/TxsTable/TxType/assets/appsIcon.svg'\nimport AddAppForm from '../AddAppForm'\nimport { SafeApp } from '../types'\n\nconst FORM_ID = 'add-apps-form'\n\ntype Props = {\n  appList: Array<SafeApp>\n  onAppAdded: (app: SafeApp) => void\n  onAppToggle: (appId: string, enabled: boolean) => void\n  onAppRemoved: (appId: string) => void\n}\n\ntype AppListItem = SafeApp & { checked: boolean }\n\nconst ManageApps = ({ appList, onAppAdded, onAppToggle, onAppRemoved }: Props): React.ReactElement => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true)\n\n  const onSubmitForm = () => {\n    // This sucks, but it's the way the docs suggest\n    // https://github.com/final-form/react-final-form/blob/master/docs/faq.md#via-documentgetelementbyid\n    document.querySelectorAll(`[data-testId=${FORM_ID}]`)[0].dispatchEvent(new Event('submit', { cancelable: true }))\n  }\n\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  const closeModal = () => setIsOpen(false)\n\n  const getItemList = (): AppListItem[] =>\n    appList.map((a) => {\n      return { ...a, checked: !a.disabled }\n    })\n\n  const onItemToggle = (itemId: string, checked: boolean): void => {\n    onAppToggle(itemId, checked)\n  }\n\n  const Form = (\n    <AddAppForm\n      formId={FORM_ID}\n      appList={appList}\n      closeModal={closeModal}\n      onAppAdded={onAppAdded}\n      setIsSubmitDisabled={setIsSubmitDisabled}\n    />\n  )\n\n  return (\n    <>\n      <ButtonLink color=\"primary\" onClick={toggleOpen}>\n        Manage Apps\n      </ButtonLink>\n      {isOpen && (\n        <ManageListModal\n          addButtonLabel=\"Add custom app\"\n          showDeleteButton\n          defaultIconUrl={appsIconSvg}\n          formBody={Form}\n          isSubmitFormDisabled={isSubmitDisabled}\n          itemList={getItemList()}\n          onClose={closeModal}\n          onItemToggle={onItemToggle}\n          onItemDeleted={onAppRemoved}\n          onSubmitForm={onSubmitForm}\n        />\n      )}\n    </>\n  )\n}\n\nexport default ManageApps\n","import React from 'react'\nimport { FixedDialog, Text } from '@gnosis.pm/safe-react-components'\n\ninterface OwnProps {\n  onCancel: () => void\n  onConfirm: () => void\n}\n\nconst LegalDisclaimer = ({ onCancel, onConfirm }: OwnProps): JSX.Element => (\n  <FixedDialog\n    body={\n      <>\n        <Text size=\"md\">\n          You are now accessing third-party apps, which we do not own, control, maintain or audit. We are not liable for\n          any loss you may suffer in connection with interacting with the apps, which is at your own risk. You must read\n          our Terms, which contain more detailed provisions binding on you relating to the apps.\n        </Text>\n        <br />\n        <Text size=\"md\">\n          I have read and understood the{' '}\n          <a href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            Terms\n          </a>{' '}\n          and this Disclaimer, and agree to be bound by them.\n        </Text>\n      </>\n    }\n    onCancel={onCancel}\n    onConfirm={onConfirm}\n    title=\"Disclaimer\"\n  />\n)\n\nexport default LegalDisclaimer\n","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { FixedIcon, Loader, Title } from '@gnosis.pm/safe-react-components'\nimport { useHistory } from 'react-router-dom'\nimport { SAFELIST_ADDRESS } from 'src/routes/routes'\nimport { useLegalConsent } from '../hooks/useLegalConsent'\nimport { SafeApp } from '../types'\nimport LegalDisclaimer from './LegalDisclaimer'\n\nconst StyledIframe = styled.iframe`\n  padding: 15px;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n`\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst IframeWrapper = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`\n\nconst Centered = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\ntype AppFrameProps = {\n  selectedApp: SafeApp | undefined\n  safeAddress: string\n  network: string\n  granted: boolean\n  appIsLoading: boolean\n  onIframeLoad: () => void\n}\n\nconst AppFrame = forwardRef<HTMLIFrameElement, AppFrameProps>(function AppFrameComponent(\n  { selectedApp, safeAddress, network, appIsLoading, granted, onIframeLoad },\n  iframeRef,\n): React.ReactElement {\n  const history = useHistory()\n  const { consentReceived, onConsentReceipt } = useLegalConsent()\n  const redirectToBalance = () => history.push(`${SAFELIST_ADDRESS}/${safeAddress}/balances`)\n\n  if (!selectedApp) {\n    return <div />\n  }\n\n  if (!consentReceived) {\n    return <LegalDisclaimer onCancel={redirectToBalance} onConfirm={onConsentReceipt} />\n  }\n\n  if (network === 'UNKNOWN' || !granted) {\n    return (\n      <Centered style={{ height: '476px' }}>\n        <FixedIcon type=\"notOwner\" />\n        <Title size=\"xs\">To use apps, you must be an owner of this Safe</Title>\n      </Centered>\n    )\n  }\n\n  return (\n    <IframeWrapper>\n      {appIsLoading && (\n        <LoadingContainer>\n          <Loader size=\"md\" />\n        </LoadingContainer>\n      )}\n      <StyledIframe\n        frameBorder=\"0\"\n        id={`iframe-${selectedApp.name}`}\n        ref={iframeRef}\n        src={selectedApp.url}\n        title={selectedApp.name}\n        onLoad={onIframeLoad}\n      />\n    </IframeWrapper>\n  )\n})\n\nexport default AppFrame\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\n\nconst APPS_LEGAL_CONSENT_RECEIVED = 'APPS_LEGAL_CONSENT_RECEIVED'\n\nconst useLegalConsent = (): { consentReceived: boolean; onConsentReceipt: () => void } => {\n  const [consentReceived, setConsentReceived] = useState<boolean>(false)\n\n  useEffect(() => {\n    const checkLegalDisclaimer = async () => {\n      const storedConsentReceived = await loadFromStorage(APPS_LEGAL_CONSENT_RECEIVED)\n\n      if (storedConsentReceived) {\n        setConsentReceived(true)\n      }\n    }\n\n    checkLegalDisclaimer()\n  }, [])\n\n  const onConsentReceipt = useCallback((): void => {\n    setConsentReceived(true)\n    saveToStorage(APPS_LEGAL_CONSENT_RECEIVED, true)\n  }, [])\n\n  return { consentReceived, onConsentReceipt }\n}\n\nexport { useLegalConsent }\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 245px auto;\n  min-height: 75vh;\n  .background {\n    box-shadow: 1px 2px 10px 0 rgba(212, 212, 211, 0.59);\n    background-color: white;\n  }\n`\nexport const Nav = styled.div`\n  grid-column: 1/3;\n  grid-row: 1;\n  margin: 0;\n  padding: 16px 0;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: flex-end;\n`\n\nexport const Menu = styled.div.attrs(() => ({ className: 'background' }))`\n  grid-column: 1;\n  border-right: solid 2px #e8e7e6;\n  border-top-left-radius: 8px;\n  border-bottom-left-radius: 8px;\n  background-color: white;\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    width: 0.7em !important;\n    scroll-behavior: smooth !important;\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3) !important;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: darkgrey !important;\n    outline: 1px solid slategrey !important;\n    border-radius: 10px !important;\n  }\n`\n\nexport const Content = styled.div.attrs(() => ({ className: 'background' }))`\n  grid-column: 2;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  background-color: white;\n`\n\nexport const Footer = styled.div.attrs(() => ({ className: 'background' }))`\n  grid-column: 2;\n  grid-row: 2;\n  border-bottom-right-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n`\n","import {\n  background,\n  bolderFont,\n  border,\n  fontColor,\n  largeFontSize,\n  md,\n  screenSm,\n  secondary,\n  sm,\n  xs,\n} from 'src/theme/variables'\n\nconst styles = () => ({\n  menuOption: {\n    alignItems: 'center',\n    borderRight: `solid 1px ${border}`,\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    flexGrow: '1',\n    flexShrink: '1',\n    fontSize: '13px',\n    justifyContent: 'center',\n    lineHeight: '1.2',\n    minWidth: '0',\n    padding: `${md} ${sm}`,\n    width: '100%',\n\n    [`@media (min-width: ${screenSm}px)`]: {\n      borderRight: 'none',\n      flexGrow: '0',\n      fontSize: largeFontSize,\n      justifyContent: 'flex-start',\n      padding: `${md} 0 ${md} ${md}`,\n    },\n    '&:last-of-type': {\n      borderRight: 'none',\n    },\n    '&:first-child': {\n      borderTopLeftRadius: sm,\n    },\n    '& svg': {\n      display: 'block',\n      marginRight: xs,\n      maxWidth: '16px',\n\n      [`@media (min-width: ${screenSm}px)`]: {\n        marginRight: sm,\n      },\n    },\n    '& .fill': {\n      fill: fontColor,\n    },\n  },\n  active: {\n    backgroundColor: background,\n    color: secondary,\n    fontWeight: bolderFont,\n    '& .fill': {\n      fill: secondary,\n    },\n  },\n})\n\nexport default styles\n","import { withStyles } from '@material-ui/core/styles'\nimport cn from 'classnames'\nimport React from 'react'\nimport styled from 'styled-components'\n\n// TODO: move these styles to a generic place\nimport styles from './style'\n\nconst Wrapper = styled.div``\n\nconst Item = styled.div`\n  border-bottom: solid 2px rgb(232, 231, 230);\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  .container {\n    display: flex;\n    align-items: flex-end;\n  }\n`\n\nconst IconImg = styled.img`\n  width: 20px;\n  margin-right: 10px;\n`\n\nconst List = ({ activeItem, classes, items, onItemClick }: any) => (\n  <Wrapper>\n    {items.map((i) => (\n      <Item\n        className={cn(classes.menuOption, activeItem === i.id && classes.active)}\n        key={i.id}\n        onClick={() => onItemClick(i.id)}\n      >\n        <div className=\"container\">\n          {i.iconUrl && <IconImg alt={i.name} src={i.iconUrl} />}\n          <span>{i.name}</span>\n        </div>\n      </Item>\n    ))}\n  </Wrapper>\n)\n\nexport default withStyles(styles as any)(List)\n","import * as LayoutComponents from './Layout'\nimport List from './List'\n\nconst ListContentLayout = {\n  ...LayoutComponents,\n  List,\n}\n\nexport default ListContentLayout\n","import { useSnackbar } from 'notistack'\nimport {\n  InterfaceMessageIds,\n  InterfaceMessageToPayload,\n  SDKMessageIds,\n  SDKMessageToPayload,\n  SDK_MESSAGES,\n  INTERFACE_MESSAGES,\n  RequestId,\n  Transaction,\n  LowercaseNetworks,\n  SendTransactionParams,\n} from '@gnosis.pm/safe-apps-sdk'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useCallback, MutableRefObject } from 'react'\nimport { getNetworkName, getTxServiceUrl } from 'src/config/'\nimport {\n  safeEthBalanceSelector,\n  safeNameSelector,\n  safeParamAddressFromStateSelector,\n} from 'src/logic/safe/store/selectors'\nimport { web3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types.d'\n\ntype InterfaceMessageProps<T extends InterfaceMessageIds> = {\n  messageId: T\n  data: InterfaceMessageToPayload[T]\n}\n\ntype ReturnType = {\n  sendMessageToIframe: <T extends InterfaceMessageIds>(message: InterfaceMessageProps<T>, requestId?: RequestId) => void\n}\n\ninterface CustomMessageEvent extends MessageEvent {\n  data: {\n    requestId: RequestId\n    messageId: SDKMessageIds\n    data: SDKMessageToPayload[SDKMessageIds]\n  }\n}\n\nconst NETWORK_NAME = getNetworkName()\n\nconst useIframeMessageHandler = (\n  selectedApp: SafeApp | undefined,\n  openConfirmationModal: (txs: Transaction[], params: SendTransactionParams | undefined, requestId: RequestId) => void,\n  closeModal: () => void,\n  iframeRef: MutableRefObject<HTMLIFrameElement | null>,\n): ReturnType => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n  const safeName = useSelector(safeNameSelector)\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n  const ethBalance = useSelector(safeEthBalanceSelector)\n  const dispatch = useDispatch()\n\n  const sendMessageToIframe = useCallback(\n    function <T extends InterfaceMessageIds>(message: InterfaceMessageProps<T>, requestId?: RequestId) {\n      const requestWithMessage = {\n        ...message,\n        requestId: requestId || Math.trunc(window.performance.now()),\n      }\n\n      if (iframeRef && selectedApp) {\n        iframeRef.current?.contentWindow?.postMessage(requestWithMessage, selectedApp.url)\n      }\n    },\n    [iframeRef, selectedApp],\n  )\n\n  useEffect(() => {\n    const handleIframeMessage = (\n      messageId: SDKMessageIds,\n      messagePayload: SDKMessageToPayload[typeof messageId],\n      requestId: RequestId,\n    ): void => {\n      if (!messageId) {\n        console.error('ThirdPartyApp: A message was received without message id.')\n        return\n      }\n\n      switch (messageId) {\n        // typescript doesn't narrow type in switch/case statements\n        // issue: https://github.com/microsoft/TypeScript/issues/20375\n        // possible solution: https://stackoverflow.com/a/43879897/7820085\n        case SDK_MESSAGES.SEND_TRANSACTIONS: {\n          if (messagePayload) {\n            openConfirmationModal(\n              messagePayload as SDKMessageToPayload[typeof SDK_MESSAGES.SEND_TRANSACTIONS],\n              undefined,\n              requestId,\n            )\n          }\n          break\n        }\n\n        case SDK_MESSAGES.SEND_TRANSACTIONS_V2: {\n          const payload = messagePayload as SDKMessageToPayload[typeof SDK_MESSAGES.SEND_TRANSACTIONS_V2]\n          if (payload) {\n            openConfirmationModal(payload.txs, payload.params, requestId)\n          }\n          break\n        }\n\n        case SDK_MESSAGES.RPC_CALL: {\n          const payload = messagePayload as SDKMessageToPayload['RPC_CALL']\n\n          if (\n            web3ReadOnly.currentProvider !== null &&\n            typeof web3ReadOnly.currentProvider !== 'string' &&\n            'send' in web3ReadOnly.currentProvider\n          ) {\n            web3ReadOnly.currentProvider?.send?.(\n              {\n                jsonrpc: '2.0',\n                method: payload?.call,\n                params: payload?.params,\n                id: '1',\n              },\n              (err, res) => {\n                if (!err) {\n                  const rpcCallMsg = {\n                    messageId: INTERFACE_MESSAGES.RPC_CALL_RESPONSE,\n                    data: res,\n                  }\n\n                  sendMessageToIframe(rpcCallMsg, requestId)\n                }\n              },\n            )\n          }\n          break\n        }\n\n        case SDK_MESSAGES.SAFE_APP_SDK_INITIALIZED: {\n          const safeInfoMessage = {\n            messageId: INTERFACE_MESSAGES.ON_SAFE_INFO,\n            data: {\n              safeAddress: safeAddress as string,\n              network: NETWORK_NAME.toLowerCase() as LowercaseNetworks,\n              ethBalance: ethBalance as string,\n            },\n          }\n          const envInfoMessage = {\n            messageId: INTERFACE_MESSAGES.ENV_INFO,\n            data: {\n              txServiceUrl: getTxServiceUrl(),\n            },\n          }\n\n          sendMessageToIframe(safeInfoMessage)\n          sendMessageToIframe(envInfoMessage)\n          break\n        }\n        default: {\n          console.error(`ThirdPartyApp: A message was received with an unknown message id ${messageId}.`)\n          break\n        }\n      }\n    }\n    const onIframeMessage = async (message: CustomMessageEvent) => {\n      if (message.origin === window.origin) {\n        return\n      }\n      if (!selectedApp?.url.includes(message.origin)) {\n        console.error(`ThirdPartyApp: A message was received from an unknown origin ${message.origin}`)\n        return\n      }\n      handleIframeMessage(message.data.messageId, message.data.data, message.data.requestId)\n    }\n\n    window.addEventListener('message', onIframeMessage)\n    return () => {\n      window.removeEventListener('message', onIframeMessage)\n    }\n  }, [\n    closeModal,\n    closeSnackbar,\n    dispatch,\n    enqueueSnackbar,\n    ethBalance,\n    openConfirmationModal,\n    safeAddress,\n    safeName,\n    selectedApp,\n    sendMessageToIframe,\n  ])\n\n  return {\n    sendMessageToIframe,\n  }\n}\n\nexport { useIframeMessageHandler }\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { border } from 'src/theme/variables'\n\nconst Box = styled.p`\n  padding: 10px;\n  word-wrap: break-word;\n  border: solid 2px ${border};\n`\n\ntype Props = {\n  children: React.ReactNode\n  className?: string\n}\n\nconst TextBox = ({ children, ...rest }: Props): React.ReactElement => {\n  return <Box {...rest}>{children}</Box>\n}\n\nexport default TextBox\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { lg } from 'src/theme/variables'\n\nconst StyledParagraph = styled(Paragraph)`\n  && {\n    font-size: ${lg};\n  }\n`\nconst IconImg = styled.img`\n  width: 20px;\n  margin-right: 10px;\n`\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst ModalTitle = ({ iconUrl, title }: { title: string; iconUrl: string }) => {\n  return (\n    <TitleWrapper>\n      {iconUrl && <IconImg alt={title} src={iconUrl} />}\n      <StyledParagraph noMargin weight=\"bolder\">\n        {title}\n      </StyledParagraph>\n    </TitleWrapper>\n  )\n}\n\nexport default ModalTitle\n","import { Transaction } from '@gnosis.pm/safe-apps-sdk'\nimport { AbiItem } from 'web3-utils'\nimport { MultiSend } from 'src/types/contracts/MultiSend.d'\nimport { getWeb3 } from 'src/logic/wallets/getWeb3'\nimport { MULTI_SEND_ADDRESS } from 'src/logic/contracts/safeContracts'\n\nconst multiSendAbi: AbiItem[] = [\n  {\n    type: 'function',\n    name: 'multiSend',\n    constant: false,\n    payable: false,\n    stateMutability: 'nonpayable',\n    inputs: [{ type: 'bytes', name: 'transactions' }],\n    outputs: [],\n  },\n]\n\nexport const encodeMultiSendCall = (txs: Transaction[]): string => {\n  const web3 = getWeb3()\n  const multiSend = (new web3.eth.Contract(multiSendAbi, MULTI_SEND_ADDRESS) as unknown) as MultiSend\n\n  const joinedTxs = txs\n    .map((tx) =>\n      [\n        web3.eth.abi.encodeParameter('uint8', 0).slice(-2),\n        web3.eth.abi.encodeParameter('address', tx.to).slice(-40),\n        web3.eth.abi.encodeParameter('uint256', tx.value).slice(-64),\n        web3.eth.abi.encodeParameter('uint256', web3.utils.hexToBytes(tx.data).length).slice(-64),\n        tx.data.replace(/^0x/, ''),\n      ].join(''),\n    )\n    .join('')\n\n  const encodedMultiSendCallData = multiSend.methods.multiSend(`0x${joinedTxs}`).encodeABI()\n\n  return encodedMultiSendCallData\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Img from 'src/components/layout/Img'\nimport CheckIcon from 'src/assets/icons/check.svg'\nimport AlertIcon from 'src/assets/icons/alert.svg'\n\ntype OwnProps = {\n  appEstimation: number\n  internalEstimation: number\n  loading: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst imgStyles = {\n  marginRight: '5px',\n}\n\nconst GasEstimationInfo = ({ appEstimation, internalEstimation, loading }: OwnProps): React.ReactElement => {\n  if (loading) {\n    return <p>Checking transaction parameters...</p>\n  }\n\n  let content: React.ReactElement | null = null\n  if (appEstimation >= internalEstimation) {\n    content = (\n      <>\n        <Img alt=\"Success\" src={CheckIcon} style={imgStyles} /> Gas estimation is OK\n      </>\n    )\n  }\n\n  if (internalEstimation === 0) {\n    content = (\n      <>\n        <Img alt=\"Warning\" src={AlertIcon} style={imgStyles} /> Error while estimating gas. The transaction may fail.\n      </>\n    )\n  }\n\n  return <Container>{content}</Container>\n}\n\nexport default GasEstimationInfo\n","import React, { useEffect, useState } from 'react'\nimport { Icon, Text, Title, GenericModal, ModalFooterConfirmation } from '@gnosis.pm/safe-react-components'\nimport { Transaction, SendTransactionParams } from '@gnosis.pm/safe-apps-sdk'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\n\nimport AddressInfo from 'src/components/AddressInfo'\nimport DividerLine from 'src/components/DividerLine'\nimport Collapse from 'src/components/Collapse'\nimport TextBox from 'src/components/TextBox'\nimport ModalTitle from 'src/components/ModalTitle'\nimport { mustBeEthereumAddress } from 'src/components/forms/validator'\nimport Bold from 'src/components/layout/Bold'\nimport Heading from 'src/components/layout/Heading'\nimport Img from 'src/components/layout/Img'\nimport { getEthAsToken } from 'src/logic/tokens/utils/tokenHelpers'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types.d'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport createTransaction from 'src/logic/safe/store/actions/createTransaction'\nimport { MULTI_SEND_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport { DELEGATE_CALL, TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { encodeMultiSendCall } from 'src/logic/safe/transactions/multisend'\nimport { estimateSafeTxGas } from 'src/logic/safe/transactions/gas'\n\nimport GasEstimationInfo from './GasEstimationInfo'\nimport { getNetworkInfo } from 'src/config'\n\nconst isTxValid = (t: Transaction): boolean => {\n  if (!['string', 'number'].includes(typeof t.value)) {\n    return false\n  }\n\n  if (typeof t.value === 'string' && !/^(0x)?[0-9a-f]+$/i.test(t.value)) {\n    return false\n  }\n\n  const isAddressValid = mustBeEthereumAddress(t.to) === undefined\n  return isAddressValid && !!t.data && typeof t.data === 'string'\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 15px;\n`\nconst CollapseContent = styled.div`\n  padding: 15px 0;\n\n  .section {\n    margin-bottom: 15px;\n  }\n\n  .value-section {\n    display: flex;\n    align-items: center;\n  }\n`\n\nconst IconText = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    margin-right: 4px;\n  }\n`\nconst StyledTextBox = styled(TextBox)`\n  max-width: 444px;\n`\n\ntype OwnProps = {\n  isOpen: boolean\n  app: SafeApp\n  txs: Transaction[]\n  params?: SendTransactionParams\n  safeAddress: string\n  safeName: string\n  ethBalance: string\n  onUserConfirm: (safeTxHash: string) => void\n  onTxReject: () => void\n  onClose: () => void\n}\n\nconst { nativeCoin } = getNetworkInfo()\n\nconst ConfirmTransactionModal = ({\n  isOpen,\n  app,\n  txs,\n  safeAddress,\n  ethBalance,\n  safeName,\n  params,\n  onUserConfirm,\n  onClose,\n  onTxReject,\n}: OwnProps): React.ReactElement | null => {\n  const [estimatedSafeTxGas, setEstimatedSafeTxGas] = useState(0)\n  const [estimatingGas, setEstimatingGas] = useState(false)\n\n  useEffect(() => {\n    const estimateGas = async () => {\n      try {\n        setEstimatingGas(true)\n        const safeTxGas = await estimateSafeTxGas(\n          undefined,\n          safeAddress,\n          encodeMultiSendCall(txs),\n          MULTI_SEND_ADDRESS,\n          '0',\n          DELEGATE_CALL,\n        )\n\n        setEstimatedSafeTxGas(safeTxGas)\n      } catch (err) {\n        console.error(err)\n      } finally {\n        setEstimatingGas(false)\n      }\n    }\n    if (params?.safeTxGas) {\n      estimateGas()\n    }\n  }, [params, safeAddress, txs])\n\n  const dispatch = useDispatch()\n  if (!isOpen) {\n    return null\n  }\n\n  const handleTxRejection = () => {\n    onTxReject()\n    onClose()\n  }\n\n  const handleUserConfirmation = (safeTxHash: string): void => {\n    onUserConfirm(safeTxHash)\n    onClose()\n  }\n\n  const confirmTransactions = async () => {\n    const txData = encodeMultiSendCall(txs)\n\n    await dispatch(\n      createTransaction(\n        {\n          safeAddress,\n          to: MULTI_SEND_ADDRESS,\n          valueInWei: '0',\n          txData,\n          operation: DELEGATE_CALL,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n          origin: app.id,\n          navigateToTransactionsTab: false,\n          safeTxGas: Math.max(params?.safeTxGas || 0, estimatedSafeTxGas),\n        },\n        handleUserConfirmation,\n        handleTxRejection,\n      ),\n    )\n  }\n\n  const areTxsMalformed = txs.some((t) => !isTxValid(t))\n\n  const body = areTxsMalformed ? (\n    <>\n      <IconText>\n        <Icon color=\"error\" size=\"md\" type=\"info\" />\n        <Title size=\"xs\">Transaction error</Title>\n      </IconText>\n      <Text size=\"lg\">\n        This Safe App initiated a transaction which cannot be processed. Please get in touch with the developer of this\n        Safe App for more information.\n      </Text>\n    </>\n  ) : (\n    <>\n      <AddressInfo ethBalance={ethBalance} safeAddress={safeAddress} safeName={safeName} />\n      <DividerLine withArrow />\n      {txs.map((tx, index) => (\n        <Wrapper key={index}>\n          <Collapse description={<AddressInfo safeAddress={tx.to} />} title={`Transaction ${index + 1}`}>\n            <CollapseContent>\n              <div className=\"section\">\n                <Heading tag=\"h3\">Value</Heading>\n                <div className=\"value-section\">\n                  <Img alt=\"Ether\" height={40} src={getEthAsToken('0').logoUri} />\n                  <Bold>\n                    {fromTokenUnit(tx.value, nativeCoin.decimals)} {nativeCoin.name}\n                  </Bold>\n                </div>\n              </div>\n              <div className=\"section\">\n                <Heading tag=\"h3\">Data (hex encoded)*</Heading>\n                <StyledTextBox>{tx.data}</StyledTextBox>\n              </div>\n            </CollapseContent>\n          </Collapse>\n        </Wrapper>\n      ))}\n      <DividerLine withArrow={false} />\n      {params?.safeTxGas && (\n        <div className=\"section\">\n          <Heading tag=\"h3\">SafeTxGas</Heading>\n          <StyledTextBox>{params?.safeTxGas}</StyledTextBox>\n          <GasEstimationInfo\n            appEstimation={params.safeTxGas}\n            internalEstimation={estimatedSafeTxGas}\n            loading={estimatingGas}\n          />\n        </div>\n      )}\n    </>\n  )\n\n  return (\n    <GenericModal\n      title={<ModalTitle title={app.name} iconUrl={app.iconUrl} />}\n      body={body}\n      footer={\n        <ModalFooterConfirmation\n          cancelText=\"Cancel\"\n          handleCancel={handleTxRejection}\n          handleOk={confirmTransactions}\n          okDisabled={areTxsMalformed}\n          okText=\"Submit\"\n        />\n      }\n      onClose={handleTxRejection}\n    />\n  )\n}\n\nexport default ConfirmTransactionModal\n","import React, { useCallback, useEffect, useRef, useState, useMemo } from 'react'\nimport {\n  INTERFACE_MESSAGES,\n  Transaction,\n  RequestId,\n  LowercaseNetworks,\n  SendTransactionParams,\n} from '@gnosis.pm/safe-apps-sdk'\nimport { Card, IconText, Loader, Menu, Title } from '@gnosis.pm/safe-react-components'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\n\nimport ManageApps from './components/ManageApps'\nimport AppFrame from './components/AppFrame'\nimport { useAppList } from './hooks/useAppList'\nimport { SafeApp } from './types.d'\n\nimport LCL from 'src/components/ListContentLayout'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport {\n  safeEthBalanceSelector,\n  safeParamAddressFromStateSelector,\n  safeNameSelector,\n} from 'src/logic/safe/store/selectors'\nimport { isSameURL } from 'src/utils/url'\nimport { useIframeMessageHandler } from './hooks/useIframeMessageHandler'\nimport ConfirmTransactionModal from './components/ConfirmTransactionModal'\nimport { useAnalytics, SAFE_NAVIGATION_EVENT } from 'src/utils/googleAnalytics'\nimport { getNetworkName } from 'src/config'\n\nconst centerCSS = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst LoadingContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  ${centerCSS};\n`\n\nconst StyledCard = styled(Card)`\n  margin-bottom: 24px;\n  ${centerCSS};\n`\n\nconst CenteredMT = styled.div`\n  ${centerCSS};\n  margin-top: 16px;\n`\n\ntype ConfirmTransactionModalState = {\n  isOpen: boolean\n  txs: Transaction[]\n  requestId?: RequestId\n  params?: SendTransactionParams\n}\n\nconst INITIAL_CONFIRM_TX_MODAL_STATE: ConfirmTransactionModalState = {\n  isOpen: false,\n  txs: [],\n  requestId: undefined,\n  params: undefined,\n}\n\nconst NETWORK_NAME = getNetworkName()\n\nconst Apps = (): React.ReactElement => {\n  const { appList, loadingAppList, onAppToggle, onAppAdded, onAppRemoved } = useAppList()\n\n  const [appIsLoading, setAppIsLoading] = useState<boolean>(true)\n  const [selectedAppId, setSelectedAppId] = useState<string>()\n  const [confirmTransactionModal, setConfirmTransactionModal] = useState<ConfirmTransactionModalState>(\n    INITIAL_CONFIRM_TX_MODAL_STATE,\n  )\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const { trackEvent } = useAnalytics()\n  const granted = useSelector(grantedSelector)\n  const safeAddress = useSelector(safeParamAddressFromStateSelector)\n  const safeName = useSelector(safeNameSelector)\n  const ethBalance = useSelector(safeEthBalanceSelector)\n\n  const openConfirmationModal = useCallback(\n    (txs: Transaction[], params: SendTransactionParams | undefined, requestId: RequestId) =>\n      setConfirmTransactionModal({\n        isOpen: true,\n        txs,\n        requestId,\n        params,\n      }),\n    [setConfirmTransactionModal],\n  )\n  const closeConfirmationModal = useCallback(() => setConfirmTransactionModal(INITIAL_CONFIRM_TX_MODAL_STATE), [\n    setConfirmTransactionModal,\n  ])\n\n  const selectedApp = useMemo(() => appList.find((app) => app.id === selectedAppId), [appList, selectedAppId])\n  const enabledApps = useMemo(() => appList.filter((a) => !a.disabled), [appList])\n  const { sendMessageToIframe } = useIframeMessageHandler(\n    selectedApp,\n    openConfirmationModal,\n    closeConfirmationModal,\n    iframeRef,\n  )\n\n  const onUserTxConfirm = (safeTxHash: string) => {\n    sendMessageToIframe(\n      { messageId: INTERFACE_MESSAGES.TRANSACTION_CONFIRMED, data: { safeTxHash } },\n      confirmTransactionModal.requestId,\n    )\n  }\n\n  const onTxReject = () => {\n    sendMessageToIframe(\n      { messageId: INTERFACE_MESSAGES.TRANSACTION_REJECTED, data: {} },\n      confirmTransactionModal.requestId,\n    )\n  }\n\n  const onSelectApp = useCallback(\n    (appId) => {\n      if (selectedAppId === appId) {\n        return\n      }\n\n      setAppIsLoading(true)\n      setSelectedAppId(appId)\n    },\n    [selectedAppId],\n  )\n\n  // Auto Select app first App\n  useEffect(() => {\n    const selectFirstEnabledApp = () => {\n      const firstEnabledApp = appList.find((a) => !a.disabled)\n      if (firstEnabledApp) {\n        setSelectedAppId(firstEnabledApp.id)\n      }\n    }\n\n    const initialSelect = appList.length && !selectedAppId\n    const currentAppWasDisabled = selectedApp?.disabled\n    if (initialSelect || currentAppWasDisabled) {\n      selectFirstEnabledApp()\n    }\n  }, [appList, selectedApp, selectedAppId, trackEvent])\n\n  // track GA\n  useEffect(() => {\n    if (selectedApp) {\n      trackEvent({ category: SAFE_NAVIGATION_EVENT, action: 'Apps', label: selectedApp.name })\n    }\n  }, [selectedApp, trackEvent])\n\n  const handleIframeLoad = useCallback(() => {\n    const iframe = iframeRef.current\n    if (!iframe || !selectedApp || !isSameURL(iframe.src, selectedApp.url)) {\n      return\n    }\n\n    setAppIsLoading(false)\n    sendMessageToIframe({\n      messageId: INTERFACE_MESSAGES.ON_SAFE_INFO,\n      data: {\n        safeAddress: safeAddress as string,\n        network: NETWORK_NAME.toLowerCase() as LowercaseNetworks,\n        ethBalance: ethBalance as string,\n      },\n    })\n  }, [ethBalance, safeAddress, selectedApp, sendMessageToIframe])\n\n  if (loadingAppList || !appList.length || !safeAddress) {\n    return (\n      <LoadingContainer>\n        <Loader size=\"md\" />\n      </LoadingContainer>\n    )\n  }\n\n  return (\n    <>\n      <Menu>\n        <ManageApps appList={appList} onAppAdded={onAppAdded} onAppToggle={onAppToggle} onAppRemoved={onAppRemoved} />\n      </Menu>\n      {enabledApps.length ? (\n        <LCL.Wrapper>\n          <LCL.Menu>\n            <LCL.List activeItem={selectedAppId} items={enabledApps} onItemClick={onSelectApp} />\n          </LCL.Menu>\n          <LCL.Content>\n            <AppFrame\n              ref={iframeRef}\n              granted={granted}\n              selectedApp={selectedApp}\n              safeAddress={safeAddress}\n              network={NETWORK_NAME}\n              appIsLoading={appIsLoading}\n              onIframeLoad={handleIframeLoad}\n            />\n          </LCL.Content>\n        </LCL.Wrapper>\n      ) : (\n        <StyledCard>\n          <Title size=\"xs\">No Apps Enabled</Title>\n        </StyledCard>\n      )}\n      <CenteredMT>\n        <IconText\n          color=\"secondary\"\n          iconSize=\"sm\"\n          iconType=\"info\"\n          text=\"\n          These are third-party apps, which means they are not owned, controlled, maintained or audited by Gnosis.\n          Interacting with the apps is at your own risk.\n          Any communication within the Apps is for informational purposes only and must not be construed as investment advice to engage in any transaction.\"\n          textSize=\"sm\"\n        />\n      </CenteredMT>\n      <ConfirmTransactionModal\n        isOpen={confirmTransactionModal.isOpen}\n        app={selectedApp as SafeApp}\n        safeAddress={safeAddress}\n        ethBalance={ethBalance as string}\n        safeName={safeName as string}\n        txs={confirmTransactionModal.txs}\n        onClose={closeConfirmationModal}\n        onUserConfirm={onUserTxConfirm}\n        params={confirmTransactionModal.params}\n        onTxReject={onTxReject}\n      />\n    </>\n  )\n}\n\nexport default Apps\n","import { useState, useEffect, useCallback } from 'react'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport { getAppInfoFromUrl, staticAppsList } from '../utils'\nimport { SafeApp, StoredSafeApp } from '../types'\nimport { getNetworkId } from 'src/config'\n\nconst APPS_STORAGE_KEY = 'APPS_STORAGE_KEY'\n\ntype onAppToggleHandler = (appId: string, enabled: boolean) => Promise<void>\ntype onAppAddedHandler = (app: SafeApp) => void\ntype onAppRemovedHandler = (appId: string) => void\n\ntype UseAppListReturnType = {\n  appList: SafeApp[]\n  loadingAppList: boolean\n  onAppToggle: onAppToggleHandler\n  onAppAdded: onAppAddedHandler\n  onAppRemoved: onAppRemovedHandler\n}\n\nconst useAppList = (): UseAppListReturnType => {\n  const [appList, setAppList] = useState<SafeApp[]>([])\n  const [loadingAppList, setLoadingAppList] = useState<boolean>(true)\n\n  // Load apps list\n  useEffect(() => {\n    const loadApps = async () => {\n      // recover apps from storage:\n      // * third-party apps added by the user\n      // * disabled status for both static and third-party apps\n      const persistedAppList = (await loadFromStorage<StoredSafeApp[]>(APPS_STORAGE_KEY)) || []\n      let list: (StoredSafeApp & { isDeletable: boolean; networks?: number[] })[] = persistedAppList.map((a) => ({\n        ...a,\n        isDeletable: true,\n      }))\n\n      // merge stored apps with static apps (apps added manually can be deleted by the user)\n      staticAppsList.forEach((staticApp) => {\n        const app = list.find((persistedApp) => persistedApp.url === staticApp.url)\n        if (app) {\n          app.isDeletable = false\n          app.networks = staticApp.networks\n        } else {\n          list.push({ ...staticApp, isDeletable: false })\n        }\n      })\n\n      // filter app by network\n      list = list.filter((app) => {\n        // if the app does not expose supported networks, include them. (backward compatible)\n        if (!app.networks) {\n          return true\n        }\n        return app.networks.includes(getNetworkId())\n      })\n\n      let apps: SafeApp[] = []\n      // using the appURL to recover app info\n      for (let index = 0; index < list.length; index++) {\n        try {\n          const currentApp = list[index]\n\n          const appInfo: SafeApp = await getAppInfoFromUrl(currentApp.url)\n          if (appInfo.error) {\n            throw Error(`There was a problem trying to load app ${currentApp.url}`)\n          }\n\n          appInfo.disabled = Boolean(currentApp.disabled)\n          appInfo.isDeletable = Boolean(currentApp.isDeletable) === undefined ? true : currentApp.isDeletable\n\n          apps.push(appInfo)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n      apps = apps.sort((a, b) => a.name.localeCompare(b.name))\n\n      setAppList(apps)\n      setLoadingAppList(false)\n    }\n\n    loadApps()\n  }, [])\n\n  const onAppToggle: onAppToggleHandler = useCallback(\n    async (appId, enabled) => {\n      // update in-memory list\n      const appListCopy = [...appList]\n\n      const app = appListCopy.find((a) => a.id === appId)\n      if (!app) {\n        return\n      }\n      app.disabled = !enabled\n\n      setAppList(appListCopy)\n\n      // update storage list\n      const listToPersist: StoredSafeApp[] = appListCopy.map(({ url, disabled }) => ({ url, disabled }))\n      saveToStorage(APPS_STORAGE_KEY, listToPersist)\n    },\n    [appList],\n  )\n\n  const onAppAdded: onAppAddedHandler = useCallback(\n    (app) => {\n      const newAppList = [\n        { url: app.url, disabled: false },\n        ...appList.map((a) => ({\n          url: a.url,\n          disabled: a.disabled,\n        })),\n      ]\n      saveToStorage(APPS_STORAGE_KEY, newAppList)\n\n      setAppList([...appList, { ...app, isDeletable: true }])\n    },\n    [appList],\n  )\n\n  const onAppRemoved: onAppRemovedHandler = useCallback(\n    (appId) => {\n      const appListCopy = appList.filter((a) => a.id !== appId)\n\n      setAppList(appListCopy)\n\n      const listToPersist: StoredSafeApp[] = appListCopy.map(({ url, disabled }) => ({ url, disabled }))\n      saveToStorage(APPS_STORAGE_KEY, listToPersist)\n    },\n    [appList],\n  )\n\n  return {\n    appList,\n    loadingAppList,\n    onAppToggle,\n    onAppAdded,\n    onAppRemoved,\n  }\n}\n\nexport { useAppList }\n"],"sourceRoot":""}